%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Quadrupoles_rcut_threeAlpha.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Dan Gezelter
%%CreationDate: 7/23/14
%%BoundingBox: 0 0 670 498
%%HiResBoundingBox: 0 0 669.3238 497.5884
%%CropBox: 0 0 669.3238 497.5884
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.4%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.4 x691 R agm 4.6676 ct 5.2594%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 96 8%%BeginData: 11600 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD41FFA8FD25FFA8FD2CFFA8FFFFA87DFFA8FFA8FFFFFF7DA8FD1F%FF52A8FFFFFFA8FFA8A8FD1DFF52A8FFFFFFA8FFFFA8FD23FF5227275227%522727277D27525227A8FD1DFF7D7DFFFF7DA8A827A8A852FD1BFF7DA8FF%FF7DA8A827A8A852FD1AFFA8FD08FF7D527D527D7D7D527D277D7D7D52FF%FFFFA9FD0DFFA8FFFFFFCFFD07FFA85227FFFF527DA8277D527DFD04FFA9%FD0FFFCAFD05FFA82727FFFF527D7D277D277DFFFFA9FD16FFA8A8FFFFCA%FD0EFFA8FD07FF7F7FFD0DFFA8FFCACFFD11FFA8FD04FF5B55FD0CFFA8A8%FFCFCFFD05FFA8FD0CFFA9FD16FFA87DFFCACFFD16FFA9557FFD0BFFA8A8%FFCFC9FD17FF7F7FA9FD0AFFA87DFFCACFFD12FF7EA9FD15FFA8A8FFFFC9%FD18FFA955FD0AFFA87DFFCFCFFD18FFA9317FFD09FF7DA8FFFFC9FD13FF%7FFD10FFA8A8A8FFA8A87DFFC9C8FD19FF7F54A9FD08FFA8A8FFCAC1FD19%FFA9A9545BA9FD06FFA8A8FFC9C8FD13FF7FA8FD10FF7DA87D52A2A8FFFF%C9FD1BFF7F31A9FD06FFA87DFFFFCEFD1CFF557FA9FD05FF7DA8FFFFC9FD%13FFA95BFD0FFFA8A8A87D27A87DFFFFCFCAFD1BFF7F7F547FFD04FFA8A8%FFFFC9CFFD1CFFA95B54FD04FFA8A8FFFFCFCAFD13FF2AA9FD11FFA8FFA8%77CBFFCFCFFD1DFFA95BFD04FFA84CFFFFFFC9FD23FFA877CBFFCFCFFD14%FF7FFD13FFA84CA8FFFFC9FD23FFA84CA2FFFFC9CFFD22FFA821A8FFFFC9%FD14FF7F7EFD12FFA8A8A2FFFFCFCFFD23FF7DA8FFFFCACFFD22FFA8A2A2%FFFFCFCFFD14FF7FFD12FFA883FF7C82CACFFD22FFA8A8A87D82FFC9FD22%FFA8A8A2A8FFCACFFD14FF5455FD0DFFA8FFFFFFA8A8FFA27CFFC9CFFD21%FFA8A8FF7D83FFC9CFFD21FF7DFFCBA2A8FFC9FD15FF7FA9FD0BFFA85252%FF52A87DFF7D4CA8C9A0FD21FFA87DFFA245AFC8C9FD10FFA8A8A8FFA8A8%FD0BFFA87DFF7752FFC8C9FD15FF7EA9FD0AFFA8527DA87DA8A8FFAE7DA7%FFCFC9FD20FFA87DFFA8A17DFFCACFFD0AFFA87D7DFF7DA87DA87DFF52A8%7D7D52A87D7DFD04FF7DA8FFA24CFFCFC9FD16FF2B85FD0BFFA8FFA8A8A2%FFA7FF77FFFFCFC9FD1FFFA8A8CFAEFF7DA8FFC9C9FD09FF7D277DA8FD04%7DA87D27F8272727525252FD04FFA8A8FFA77DA8FFCACAFD16FF7F7FA9FD%0CFFA8A8FFAEFFFF77FFFFC8C9CFC9FD1CFFA8A8FFA8FFA87DCBFFC8CEC9%CFFD06FFA9FFA8FFA8FFAFFFFFFFA8FFA8FFFFFFA8FD05FFA8A8FFAEFFA1%FFFFC9CFFD16FF85317FAFA9FD09FFA87DAEA8FFFF774CA24C7D9A9FA0C2%A0C9A0CAA7C8A8C9A7CAA0CAA7C9A8C9A7FFA1FFA7C9A9FFFFFFA8A8A8CF%FFFF4C777D717DA199CA9FC8A7C8C9CFC9FFCACFCFFD10FFA8A8FFA7FF7D%A8FFFFC1CFFD0CFFAEFFA8FFA8AECFA8A8A87DA82A54FD09FFA8A8A7FFA8%FF83A8A8A9A87D52A8A1A8A1A0A8A7A0A8A0A7A8C2A8A79FCBA0C9A8A0A7%A7A0FD05FF7DAEA8FFFF8358A877A277777D7676A175A19AA0A19FA0A19F%A7A0C2A8C8A0CAA0A7A1A7FD04FFA8A8A8CFFFAE77FFFFCFA7FFAFFD05FF%A8CFA7AE82AE837C7D774C7D4B777C9F7CA0A0FD05FFA8A8FFA8A87DAEFD%0EFFA9FD07FFA9FD07FFA9FD07FFA883A7FFA8FFA8FD05FFA7FFAFFFA8A8%A8A9A2FF7DFD05A8A1A8A0A1A1C2A7A19AFD04FFFD04A8FFCF7777CBA8FF%C8C8AFA87DA858A883A7A87777A24DA9A1A0A7C8A6CFC9FFA8FD05FFA827%A8A852A87DA7FD26FFA87DAEFD26FF7DA8A8FFFFFF83A7774C7DA79FCE7C%AEAEAEFFA277A877A9FFCFCAC9C8FD0CFF7D527D7D27A87CCFFD26FFA87D%A8FD26FFA87DAEFFFFFFA7A7FFA2A8524C7DC1A0A24CA87EA2A9CFC9C9C1%CFFD0FFFA8FFFFFFA87CCFFD26FFCB58FD27FFA8A8AEFD09FFA8FFA1CAC2%C1C9CFC9CFC8CEFD16FFA851FD27FFA857AEFD26FFA858FD0FFFC9FFCACA%FD19FFA8A8FD27FFA87DFD27FF7D57AEFD2BFFA87DFFA8A8A8FFA8A8A8FF%A8A8A8FFA8FFFD05A8FFA8A8A8FFA8FFFD05A8FFA8FD05FFFD05A8FFA8FF%A8FFA8A8A8FFA8A8A8FFA8A8A8FFFD07A8FFA8A8A8FFA8FD06FFA87DFFA8%FFA8A8A8FFA8A8A8FFA8FFA8FFA8A8A8FFA8A8A8FFA8FFA8FFA8A8A8FFA8%A8A8FDFCFFFDFCFFFD0FFF7D7D7DFD7BFFA8A87D5252A87DFFCAFD11FFA9%7FA9FD11FFA87DFFCFCFFD11FF54FD12FFA87DFFCAFD10FFA9A9FD10FF27%7DFFFFA87D7DA8A8A8FFCFCFFD11FF317FFD11FFA87DFFC9FD12FF5555FD%11FFA8A8FFCFCFFD10FF7FFD0FFFA82727FD06FFA87DFFC9FD13FF7F7FFD%10FFA27DFFCACAFD12FFA95AFD10FFA8A8FFC9FD11FF7FA9FD0FFF5252FD%06FFA8A8FFCFCFFD13FF7F55A9FD0EFFA87DFFCAFD14FFA92BA9FD0EFFA8%A8FFCFCFFD11FF55FD0FFF7D52FD06FFA87DFFCACFFD14FF7E7FA9FD0DFF%A87DFFCFCAFD15FF7F7FA9FD0CFFA87DFFC9CFFD11FF5554FD0EFF277DFD%06FFA8A8FFFFCAFD16FF5B31FD0CFFA877FFCFCFFD16FF7F31A9FD0BFF7D%A8FFCFCAFD12FF7FA9FD0CFFA85252FD06FFA87DFFCAC9FD16FFA87F7E7F%A8FD09FFA87DFFCFC9FD17FFA9852A7FFD09FFA8A8FFCAC9FD12FFA97FFD%0DFF7D7DFD06FFA8A8FFCFC2FD19FF557FA9A9FD07FFA877FFCAC8FD19FF%A97F7F55FD07FFA8FFFFCFC2FD13FF7FA9FD0CFF5227FFFFFFFD04A84CCB%FFCFCAFD1AFFA92A7F85AFFD04FFA84CA8FFC9CFFD1AFFA97F7E5B5BFD04%FFA84CCBFFC9CAFD12FFA908FD0CFF5252FFFFA87D7D7DA852A2FFCFCFFD%1CFFA97F55FD05FF4CCAFFFFC9FD1DFF7F85FD04FFA84CA8FFCFCFFD13FF%A97FFD0AFF7D7D52FFA8A8527D52A87DA2FFFFC9FD1FFFA9FFFFFFA8A8A2%FFFFC9CAFD22FFA87DA2FFFFC9FD14FF857EFD09FF7DA8A8FFFFFFA8A8FF%FD04A8FFFFC9FD23FFA8CBA8FFCFCFFD22FFA8FFA2FFFFCFCAFD14FF5B55%FD08FFA87DA8FD06FFA87DFF7DFFFFC9CAFD21FFA8A8FFA2FFFFC2CFFD0A%FFA8FD04FFA8A8FFA8FFA8A8FD0BFFA8A8FF7DFFFFC9CAFD13FFA95B7FFD%08FFA8A8FD06FFA8A8FFA277FFC9C8FD21FFA87DFFA177FFCEC8FD09FF7D%527DA87DFF527D7DA87DFF52A8527D52A87D7DFD04FF7DA8FFA2A2FFC8C9%FD15FFA955FD06FFA87D52A8FD05FFA87DFF7D4CA2FFCFC9C9FD1FFFA87D%FFA84BA8FFFFC8C9CFFD06FF7D2752527DA852527D7DA87D27F82727FD04%52FD04FFA87DFF7D4CFFFFC9C9FD15FF7F5AA9A9FD04FF7D7D7DFD05FFA8%A8FFCFAE7D77CBFFC1C9CFC9FFCFFD1AFFA8A8FFA8CF7CA2A8FF9FCFC9CE%FD04FFA8FFFFFFAFFFFFFFA8FFFFFFA8FFA8FFAFFD07FFA8FFFFCF7CA2FF%FFC9C9FD16FF7F317FA985A852277DFD05FFA87DFF83FFA877527D4C7D76%9F7C9FA0A799A7A0A0A19FA0CA99A8A0A0A8A0A0A899A77DA0FD04FFA87D%CFA8FFAE4C787D4C76A075A099A0A0C1A0C89FC99FC9A7C8A7C9C8CAA7CF%A8C9A8CAA1FD04FFA87DFFA7AE7C77A8FFC8C9CAFD07FFA8AEA8A7A7A876%A87D7D7D7C76A175A14D4DFF527DFFFFFFA8A8FFA8A8AEAEFFFF8283A8FF%FFA87DFFA8A9CBA8A9CFA7FFA7FD04CACFA7FFA7CFA8CACACFA7FD04FFA8%7DCFA7FFFF837DFFA8A97D7EA8A8A2A87DA8A1A7A8A1A1A8A0A8A0A0A8A0%A0A89FCAA1A0FD04FFFD04A8CBA877A87D777DC9A0C97C83837C7D7D52A2%4C7D7D767DA099A7A0C9A8C9A7CAC9FF5252FFFFA8527D52A87DAEA8FFFF%AEA8FD21FF7D83A8FFFFFF83AEFD14FFA9FD07FFA8FD04FFA8A8AEA8FFCF%8383A777A27770769E9FA16EA1769AA1A0A0C9C1CFC9CFFD09FF5252FFFF%A87D7D7DA8A8A7FD26FFA87CAEFD26FFA8A8A7FFFFFF83AEFD04FFA8FFA8%FFCFC9CACEC8FFC9CFFD0DFFA85252FFFFFFFD04A87DCFFD04FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FD11FFA87CA8FD26FFA8A7A8FD22FFA852%52A8FD05FFA87CAEFFFFFF7DA87DA87DA87DA87DA8A8A87DA87DA87DA87D%A8FD0FFFA851FD27FFA8A7AEFD22FF7D5252FD06FFA851FFFFFFA87DFFFF%CFFFA8FFAEFF7D7DA8FFA8A8FD04FF7DFD0FFFA857AEFD26FFA851FD2CFF%A8A8A8FFFFA87DCF7CAEA8CF7CAEFF7D27525227A8FFFFFFA8A8A8FFA8FF%A8FFA8FFA8FD06FFA87DFFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FD07FF7D7CAEFFA8FFA8FFA8FFA8FFA8FFFF%FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FD0EFFA8FFA87DFD08FF%7D7D527D52FD05FF7DFFA8FFFFFFA8FFFFFFA8FD07FFA8FFFFFFA8FFA8FF%A8FFFFFFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FFA8FFA8FD0BFFA8FF%FFFFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD12FF%7DFFA8FFFFFFA8FFFFA87DA8FD06FFA8A8FD6BFFA8A8A271A2A8A2717DFF%522727FD06FFA87DFD6CFF7DFD08FFA852FD07FFA8A8FD63FF527D52FD05%FFA8A8FFCFCFFFFFFFCFFFA8A87D7D7DA8FFFFFFA87DFD62FFA87DA87DA8%A8FD04FF7DCFC1CFC9CFC7CFFF7D52272752A8FFFFFFA87EA9FD0FFFA8FF%CFFD16FFA9FD0EFFA8A8FD14FF5585FD11FFA8FFA8FFA8A87DFFC9CFA87D%FD06FFCFFFA87D7D7DA8FD05FF7D857EFD0DFF7D7DFFCFCAFD15FF7E7FA9%FD0CFF7D52FFC9CFFD11FFA97EFD16FFA8A8FFCFCFFF7DFFA9FFFFFFA9FF%FFA87DA87DA8FD04FFA8A8FF7F55FD0CFFA87DFFCAFD17FF7F31A9FD0BFF%7DA2FFCFCFFD12FF85AFFD15FFA87DFFCACFA8A77F317F7F7E557FFF5252%272752FD05FF7DFFA97F7FFD0BFFA87DFFCFCAFD17FFA97F5AFD0AFF7D77%FFCACFFD12FFA985FD15FFA8A8FFFFCAFF7DFFA9FFFFFFA9FFFFA87DA852%FD05FFA8A8FFFFFFA931A9FD09FFA87DFFCACFFD19FF5555FD09FF7D7DFF%FFCAFD13FF7FFD15FFA87DFFCAC9A87DFD08FFA8A8FFFFFD06A87DFD04FF%8554A9A9FD07FF7DA8FFCFC9FD1AFFA95455A9FD06FF7D77FFC9C9FD13FF%A97FFD14FFA8A8FFCFC8FF7DFFA8FFFFFFA8FFFF7D277DFD04522752A8A8%FD06FF7F31A9FD06FFA87DFFC9C8FD1CFF5B7F7FAFFD04FF7D7DFFCFC8FD%13FFA931FD14FFA84CFFFFCAA8A8FFFFA9FD05FF7D7DFD04527D7D52A87D%FD07FFA9A9557FFD04FFA84CA8FFC9FD1EFF5B54FD04FFA24CFFFFCFCFFD%13FF55A9FD13FFA84CA8FFCFC97DFFA8FFA8FFA8FFA8FD05FFA8FFA8FFA8%7DFD09FFA97FFD04FFA84CCBFFCFCAFD23FF7D4CA8FFC9CFFD14FF7FFD13%FFA877A8FFFFC9A8FD0D7DA8FD047DA8FD0FFFA87DA2FFCFC9FD23FFA877%CBFFFFC9FD14FFA97FFD12FFA8A8A2FFFFCFCFFD22FFA87DCBFFFFC9FD23%FF7DA8A2FFFFCFFD15FF7FA9FD0EFF527D7DA87DA8A8FFCACAFD22FFA8A8%A2CBFFCFC9FD22FF7DA8A8A8FFC9CFFD14FF7F31FD0DFFA8A852527DA8FF%A8FFFFC9FD22FFA87DFFA2FFFFC9FD22FF7DA8A8A8FFFFC9FD15FFA97FFD%0BFFA8FFFD04A87DFF7DA8FFC8C8FD21FF7DA8FFA2A8FFC2C9FD0AFFA8A8%FFFFFFA8A8FFFD04A8FD0BFF7D7DFF7DFFFFC8C9FD15FF7F7FFD0FFFA8A8%FFA24CFFCFC9CAFD20FFA87DFF7D70FFFFC9CFFD09FF7D27A87DFF7DA87D%A87DFF527D527D7DA87DA8FD04FF7DA8FFA8A2FFC9C9FD16FF2B7FFD0EFF%A87DFFA1777DFFFFC9C9FD1FFFA8A8FFA84CA8FFFFC9CEFD08FF5252527D%A8FD047DA87D52272727FD0452FD04FF7D7DFF7D4CFFFFCAC9FD16FF7F7F%7FFD0CFFA8A8FFAEFF7D77FFFFC8C9CFC9FD1CFFA87DFFA8FF7CA2A9FFC1%CECECFFD04FFA8A8FFFFA9FFA9FFA9FFFFFFA8FFA8FFA9FD07FF7DA7FFAE%7DA2FFFFC9C8FD16FFA9317FA9A9FD09FFA87DFF83FFA75277A24C7D7699%7C9FA0C99FA7A0A0A1C8A0A8A0A7A1C9A7C9A0A8A0A7A1C9FD04FFA87DA8%A8FFA84C9C7D4C77A099A19FC9A7C8A7C9C8CAA6CFCAC9CFCFA7FFCAFFCF%CFCFFFA8FD04FF7D7CFFA7FF7CA2A8FFC8C9CAFD0AFFCFAEFFA7FFA8A8A8%A1A2A87CA85353FD09FFA87DA8FFA9FF83A7A7A8A8A87DA8A1A8A7A0A1C9%A0A8A0A7A7C2A1C9A0A8A0C9A7A0A1A7A0FD04FFA87DAEA8FFAEA8A8A87D%A87D7D7DA17DA175A1A0A07DA0A0A199A7A0A07DC2A0A19FA7A0A0FD04FF%7D7DA8A8A9AE52A2A2A8A8C9A0FFFD05A88358A8527D7D777D766FA199A0%7CC2A7A7A0FD09FFA87DAEAEFFFF8383FD21FFA87DA7FFFFFF7C83FD0CFF%AFFFA8FFFFFFA9FFA8FFA8FFA9A8CAFFA8FD04FF7D7DAEA8FFA8AEAE7D4C%7E76707C9F7B7D4BA277707D9AA1C999CAC8C9CFCFCFFD0EFFA87DA8FD26%FFA87DAEFD26FF7D83A7FFFFFF7C83CFFFFFCB7ECBA1C9C9C2A7C9C1CFC8%CECFCFFD14FFA852FD27FFA87CAEFD26FFA858AEFFFFFFA8A8FD09FFCFFF%CAFD18FFA8FFA858FD27FFA851FD27FF7D58FD28FFA8277D7DA851A87D7D%7DA87D7D7DA8FD077DA87D7D7DA87DA87DA8FD077DA87DA8FD04FFA8527D%7D7DA8FD077DA87D7D7DA87D7D7DA8FD077DA87D7D7DA87D7DA8FD04FF83%27FD067DA87D7D7DA87D7D7DA8FD097DA87DA87D7D7DA87D7D7DA8FD05FF%7D52527DFFFD23A8FD06FFFD0DA8FFFD15A8FD06FFCBFD22A8FD07FFA8FF%A8FFFFFFA87DFD09FFA87DFD09FF7DFD09FF7D7DA8FD06FFA87DFD09FFA8%A8FD09FF7DA8FD08FFA852FD07FFA87DFD09FFA8A8FD09FF7DFD09FF7D7D%FD0DFF52FD09FF2752FD08FFA827A8FD08FF7D27FD07FFA87DFD09FF5252%FD08FFA827A8FD08FF5227FD07FFA852FD09FF277DFD08FFA852A8FD08FF%7D27FD0CFFA87DFD09FFA87DFD09FF7DA8FD08FF7D7DFD07FFA852FD09FF%7DA8FD08FFA87DA8FD08FFA87DFD07FF7D7DFD09FFA87DFD09FF7DFD09FF%7D7DFD45FFA8FD52FFA87DFFA87DA87DFD22FFA87DFF7DA8A87DFD22FF7D%7DFFA87DA87DFD27FF7D7DFF7DA85252FD22FF52A8FFA8A85227FD22FF7D%7DFF7DFF5252FD28FF7D27FFFFFFA8FD23FF7D52A8FFA8FD24FF7D52FFFF%FFA8FD52FFA8FD27FFA8FD93FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2014-07-23T10:43:17-04:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>192</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAwAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FUr80ateaP&#xA;5e1DU7Kwk1O7tIWkg0+HlzmcfZReCyNue/E4q8xu/wA7fOn1Znh8gaoqywTGCYR3TukyJFIokiNo&#xA;CF4z0DbhmUjpviqHP50/mLYwi0byHf6tdWsQF1erHdW6yvAxjuJET6oy0YrzRUY7GnUYqjofzv8A&#xA;M088klt5HvrvS0uGt/rtsZpG5W5cXSekbdG9RTEyovQn7TL0xVmn5d6z5h1nQ7jUdctpLG4mvbpb&#xA;ayljeJ4reKQxxqRJHC7cuBYMV6HFWUAgio6Yq7FXYq7FXYq7FUp81+ZbDyx5fu9cv1ke0swnqLFw&#xA;DEySLEvxSvFGo5OOTO6qo3YgAnFWM6R52t7rQrn8xI727uvLN5bxLZ6GIbYyQvFO0DyK8cjBzKzD&#xA;YybAfRiqF1T84be21fy3aRabLHa6zE93eT3jLCba1QvWQ0LrREikmdi1FRR3cUVZB5I83P5lGrzI&#xA;1lPY2N81pZ3mn3BuY5VSNHbkSqUZS9DTY9ttyqyXmnPhyHMjlxrvTpWmGuqt4FdirsVdirsVef61&#xA;+YFhq/mi/wDy30q+utG8zmMmLVUjtJViMccVy5WGWQykGOZVDNCFb4uDHg1FUy1j8ydL0rVNS0yW&#xA;xvZ59Jspb65nijQwlIbf6wQp58+TD4QOP2jirGbP87JJvLumTtpgPmDVr9LC20+FpJYVSW6NulzJ&#xA;KiMUiYRyGMsB6nBuO3RV6pUVp3xV2KuxV2KuxVDjUtON3JZi6hN3EvOW3Ei+oq0B5MleQFGGKpEk&#xA;8F156s7i2nWaBtJuCrxMro4+sxD7Qr09jiqb6dcQyXN/FG3IxT0YUIpWNT+uuYelyxlPIB/DL9A/&#xA;a5OeBEYE9Y/pKOzMcZ2KuxVRtLKzsofQs4I7aGpb0oUWNeTGrHioAqT1xVWxVhLaZqXkeLUNQ0lb&#xA;vW9Gnka4l0NQJLi2ZjQLp6oq1iA4r6J6AclbqG3AzQ1hjCfDjyAVx9Jf1/P+l8COoo4TCyNx3fqZ&#xA;To+s6frFil7Yyc422dCOMkbgfFHKh+KORejK24Oa3PgnilwyH6j5jvHcW2MgRYRuUsmPedATa6WA&#xA;Sp/S1huKf7/XxriqZSXMCa3DAW/ey27kLvWispH8cw5ZYjURj/EYH7x+1yYwJwmXQSCPzMcZ2Kux&#xA;Vpo0Y1ZQxoVqRXZuo+RpirUccca8Y1CL14qABU/LFUh1jyfa3esx+YrGV7HzHBB9WivQXeJ4ORf0&#xA;Z7fkqSRlmqejdKMKDM7BrpRxnFIcWIm6633g8wfs8muWOzxDmhNL87yQQ+l5xtF8uX5kZYfWkV7W&#xA;ZOXwGK4UmPmV6xkh+ppTLc3Z4kb058WPkPUPfHnXny80RyfztmV5rG1KvNv/ACius/8AMDc/8mWx&#xA;VSE8NroelPPLQD6sokalSSoB6ADpXMPW5Y44xMjXri5OmxymSAP4SnWZjjOxV2KtCNBSigUAAoOw&#xA;6D8cVSLzWGs47XzBGPj0d2e6p+1Yy0W6G3XgoEwHdowMzdF6icR/j5f1h9Pz+n3SLXPbfuT5WVlD&#xA;KQVIqCNwQcwmx2KuxVx6eHvirDNY/LsX41F1vImvNR0ybSpb+4tIXmZboFZ5ZfRFukjFUhVRxAAT&#xA;vy2VYzotkfI3mnyzoN16+pNeW98jahEHRI3ub1Zl9dizF934BnJLHfrk4xsHyZwhYPk9Ob9zqat0&#xA;S6TgT/xZFVl+9S33ZhH05h3TFfEcvsv5Ng9WP+qfsP7a+aLzKaHYq7FXYq7FXYqx3XPJGmaprFrr&#xA;cU8+nazZhhDfWhRWbkvGkyurrKANgHBpU0pmfp+0J48ZxkCeOXQ/o7vg1yxgm+RRXl1PNyfXU8xP&#xA;YzBZv9x89j6qF4AKAzRyA8HqOR4uw3p23r1RwHhOLiG3qEq5+RHMfAJhxdUl/NbUv0Z5Zg1D6tNe&#xA;C11GykNtbchM4E61Ccd65jRjZpthHiIDIHuI5bCy1OIEIojm+I7iGVQH5Hf7KtyPyzE1Y4an/MP2&#xA;cj+v4N2EbmHf9/T9XxTLMlx3Yq7FXYq7FXYqhdT0rS9VtGs9Ts4b60cgvb3MaSxkqaglHDDY9Mtx&#xA;Zp45cUCYy7waKJRB2KUab5WvdL1uO4sdWmXQUgaIaFMDMiyMwPqRzu/qKFCgKhqqivGldsrLrI5M&#xA;dSgPFu+MbbdxFV8eZ6sBAg7HbuRnm3/lFdZ/5gbn/ky2YDYlPkbWtP8ANHkm3urCK4giKmFVvP71&#xA;ZYQF5fbk2Dio3yGq09xMTzr7eh+DeAcUxf4DJrS4FxaxT04mRQWXwPdfoO2Rw5OOAl3hryw4ZEdy&#xA;rlrB2KuxVZNGJYXiJKh1K8gFJFRStGDL94phiaNqxryRavocMvlO4upruTTB6mn3NyQ0k1jKx9Or&#xA;AKC0TVjbbsp2DAZse0J+MRnAEeP6gOQkOfz5j49zVjHD6e5lGa1tdirsVSJPOmhv5tl8qK8h1eG3&#xA;+tSRhCVEZAIJI3pRh8VONfhry2xVIPreh+atdsZwzJbajo9wLZpB6U6Ot1EAyBt1kR0qPAjDE0bT&#xA;GVG0N5S84XWpz+YbK/uxdanoNwOUUcRQA27tFJwoN1kMfvQNv3pg62MscZTPIeqPw5j9HxcjDikM&#xA;lH6Z8vj+ovQba4iubeO4iNY5VDqTsaEV3zJxZRkiJR5ENOSBhIxPMKmWMHYq7FXYq7FXYq7FWOee&#xA;GhWy0xpiqxLqtgWZ6BRSddzXFWP2+s/obz3aeTJLtBpF3bST6faenX9zNz4x+p0AjeNlQVA4FFAP&#xA;URzQlKj/AAHaXv8A2tshLbIOnP39CzXR71bm0KksZbZjBNyBUlo9uVDT7Q3zF0OcZIV/FA8J946/&#xA;Hm2arFwS8pbj4o7MxxnYq7FVKW8tISwmnjjKL6jh2VeKE0DGp2Fdq4qtl1CwiVmluYo1WRYGZnUA&#xA;SvTjGan7R5Ci9d8VVZJI4o2llYJGgLO7EBVUCpJJ6AYquxVKvNtP8K6zXp9Rua/8iWxVjUeu6b5W&#xA;FjeOeWiazHBCDAFYRX6oqDoQKSwrv4GPxbDOXpurrubDvHzH3fsZXZTwR311YBx6iN66RjqEl3b/&#xA;AIcn7xmDgyRjklivceqvKX/Hr+YbcsCYRnW3L5fsR+ZrjOxV2KuxVjvnHQ9Z1CKxvtCuo7PWNLm9&#xA;eFpULpPEVPq2jkMvFJiE5NvTiDStCM/Q6jHAyjlHFjmK9x6S98d/m15Ik7jmE00bWbPVrT17clHQ&#xA;lLm1koJoJVNGilUE8WUj5HqKjfMbPglilR+B6Ed4ZRkCjspZOxVjcH5deULbXRrlnY/U9QAoGtZJ&#xA;IIxVlZ/3UbKnx8Bz2+LviqXadpmmeWvMlnYWxlFjaaPdyBpWeZgv1qOV+TtX+Y0qcBNC1JQ+s2kX&#xA;lnTbHzksXp3NhGv6fjiUcri3uGBnr05PFI/qpU9iO+OGJMYg82eIGQES5vzQ8oQXmmG01O2MGsj1&#xA;TbSvweNmUOCa/DEW57hyAT9JzEy4c2LJeOPFA/V5HvHv6/o3LmDEJRInYlHka+/3J/Z+ePLV0J+F&#xA;2q/Vzxk3Diu42MZcHdSOvUZD+UcY4uMShw8+IH7xYYS0GQVVS4u5ME17RX9MLfQEy/YHqLXfsRXY&#xA;/PLBr8Bqpx382s6TLv6Tt5NjW9HIlIvYKQUEp9RfhrsK7+O3z2yY1eIgnij6ee7H8vksDhO/LZe2&#xA;raWrQq15CDcAGAeovxg0px33rUZL8xj29Q35b82Pgz32O3PZ36W0vhM/1yDhbkLO3qJSMluIDmvw&#xA;1YU375IZoEEgj089+XvXwp7Cjvy25rjqOnj6vW6iH1sVtP3i/vRQGse/x7MOmHxI2BY35efuR4ct&#xA;9jtz8l0F9ZXEksdvcRzSQHjOkbqzI1SKOATxNVI38MMZg3RukSgRVjmknnRgtrpZNafpaw6An/d6&#xA;+GSYoXVfLqa9FqV1EUi1SG4B0e/KgtDJaKAu+54et6gcdwfHK8ZvivkT937Vxy53ySSD83PKd5oJ&#xA;19b2LTr+2Zbe7s7piCz/AA841VfilCGSqso+4VyGr0uUevELyfYR5/eP2l2GLDR4J3wHfbp+OrKr&#xA;TzlolxcQW4mUzXEXrRemyzKyb/EpjLGh4nqB0yo6zhlwzjKJq+Vj5j9n3NR0cuHiiQRfuP2oxPMG&#xA;iPE0q3sPBTxJLAb/ACNDgj2jpyCeOO3mxOjzA1wliHnDyZrHmPzFHeWPmg2Fn9TFuNMhe4VZQ0vN&#xA;5X9C4gbYUoUoT0JpmTHNAmgRfvaTjkBZBpf5g8gTazqep3kl5am1vTpVm6vEzutjp1011cQM5fd5&#xA;5H48uw98lxirtjwnuUNW/LPWr3y1f6dbatBY6pqOsPrVxfx2xZfUB5W1IzIPjhMUBDEndOmSQxhf&#xA;yI84NdetcecfUBuDJyMV40ggMsjegGe8aqiK6mjHKuzb17Ksu8q/l75j0nXbPUtR8yz6jb21sYns&#xA;a3AikuXqJLl/Unmq0g4kr9hSKqq1xVk/m3/lFdZ/5gbn/ky2KpB5g8uWHmzQtI0S7DLG1ub2OX4l&#xA;aOWKERRPSqn4XuOVD1pgGQxmAPNlDIYy2TPRdRk1bR4NU9NYtZtOVvfwCg4zwnjcQE/ylgSlf8ls&#xA;x9Ri5ZI/XH7R1ifxsW/HKvQfol+L/X8k5sL+2vrZbm2bnE9aGhBqDQgg5LT6iGaAnA3EtebDLHLh&#xA;lzRGXtTsVdiqi15ZrEkrTxrFKwSOQuoVmY0VVNaEk9MjxDvRYYvquj6Tba/fa3o9/HZ+aWgU3tu8&#xA;weO4hiWkaT27yKEG1FkXgQTuSKg7HFrrgMOWjiB26GN9Qav3g3bCWPfiHNAad+a9hDpGnXXme2/R&#xA;c+oTJaxTQSQ3lk8skhQcLm3eRVAClm9TiRQ9aZfLs0ZJy/LzGSMRfdKh/RNe7a2PiEbSFFnjsERn&#xA;NSFBJABY7eAFSfozUtzzeD84oD5s1vSriydLHS7V7i3KxzC8uHSO3k9JLZ1WTmRc7oyqVoD8QLcF&#xA;UFp/mGLzfPoepzWAWTVNPmgMRU/uf9yEUUpUzCN9kRjULleX6a79mM+T0q40bSbiK4iltIit0Ctw&#xA;QoVnDGpqy0brvWvXLDuKKSFn+H9C9GGA6fbNFbgiBHiRgnKnLjyB+1xFfHEbckhL4vIPk6I3RXSo&#xA;D9bf1ZAy8grdaxA19Lff4Kb4shMg3aqfJflQyQSfou3DWw4x0WgYUp+8A2l9udaHfrgIs31XjPK+&#xA;bX+CvK3CZRp0QE55MRyBU1r+6INYh7JTKzggQRwipc/Ns/MTsG948lw8m+WB6FNOipbiiCho2wH7&#xA;0V/enbrJywnDAkGhceXkgZpgEXtLm1/gzyxwmX9Hx0nPJt2qu9f3ZrWMeyUGR/L4/VsPXz89qT+Y&#xA;ntv9PJcfKHlktAx06KtuKJsaMCAP3or+96f7sricGM16R6eXkjx577/VzRWm6HpWmPO9hbrAblg0&#xA;wUtQkEkAAkhQORoFoMnHHGJJA3PNjLJKQAJ5JN+YDrHpVhI/Pgmp2TN6ZCtQTAmhJUD78mTW7BMd&#xA;C09k0yylleVZzGJZo+bcfUlJkk5Cu55uchi+kMY8kKPIflf6teW0tklxFfP6lys4EvI8xJ+2DtyA&#xA;OHHAQNxFFMBwmxsUDcflR5GuL+G9fTUEkMZjCKAqMK1qygdd+305Oz0JZjJIbWVrflN5IELR29m9&#xA;oxpxmgmkWRQCKBXJJ40WnE7UyvJjjMcJG32fLkWz8xkuxI2qj8s/LKzpKhu40ROAgW6mCbVoftcg&#xA;RXsR75XLS4ieIwiT7gyGrygVxFDR/lXo8dq8A1HUS7NyWczqWVegUKyNGdh1ZCffKT2dpzEx4I0f&#xA;KvPnzbR2hmEuK0YfIFmLpLiLVdShaNeCqk6nbf8AbeNpB9roGpln5PFxiYG4FcyP0tf5ufCYmiCb&#xA;Uf8AANwbR4X16+kZ35/Gw9Ig0J5xjjyYn4i1euQloYGBiDIcRv6u82z/ADfqBMY7DuRln5Qe01u3&#xA;1Iard3CQIy+jcyNKW5qVI58lHHcHiVO4ByyOnqYlxSNCun6mo5YmJHCL70b5t/5RTWv+YG5/5Mtm&#xA;Q0JZ5Zs/rSPIzXMQghtrdQ0vxhhF6rUZWb4SJl2r2yuJuZPw/T+liOZSK50zzFpnnjVL3Q/rNwks&#xA;UdydNdeFlK5QI3KYyJSRjH9oI/X7O2SjmF8HCff72yOQfSR8UouPPt7ouix3nmDSb/y9e3E6xt9q&#xA;4tpRU8R6q04OQp96DMfU6XKDenoy68gCPMXz8w5uMAnhleSNcxzHzKfJ5wWa7eU6nY2OmW0StHcT&#xA;XTzcpAasGaNlhk/1Vev40qxauU8pxUIzA+k8/wBR+BceejzD1AXDof2dEol80T3ehWt/YXusa+9x&#xA;cBXbRLWeKLgJGDHnNHxAHGhAYfKmZ0dNkO05UR7mA0srqUhFVn8t+ZLnX7yW9e10vTpbRUjluJ57&#xA;+9LV+yyetElTVqcQQPffK8h02M3I3Lz/AFc2yGmiRYEpH7EFa/lJZX/l6wtWnu714JxK15KIrRWA&#xA;dtgirJIQA1DVj028MxI6sziJafFEA/zhW3Xz/HVyvDxYpniobco7/sZHD+T3lP67Ld3EIleVPTdQ&#xA;DQg0qGMjSk/ZGXQxZeKzP0/zYgRA+8tJ1QEBGMao/juTS3/LjyhAwdLFfU/betC/jz40rXvkBoMX&#xA;AImyAbFkolrspJN82TZmuIt9KL1DJwX1DSr0Fdq039uRxViGtWT/APKwdJ1BnkhsdP067mlKRsyM&#xA;fUjThUK29Ja06+HiIShZBvkxIumTSarZR8+TN8BkDUjkP9yvJ+i+HTx7ZNk2NTszIY+Tcg/p09N/&#xA;tCITdeNPsN18duu2KuXU7NnVAzcnKKv7txvIhdd+P8q/R0O+KtJqtk8cUis3GZYXjrHIKi4JEdQV&#xA;qKkb1+z3pirk1WyenFm3CEVjkH95IYl6r/OPo6nbFWjq1iASWei+pX93J/uqT0X/AGf5/v6jbfFX&#xA;SatYxo7uzhYxMz0jkO1v/ebBd6dqfa7VxVc2p2auyFm5IXVv3bneNA7b8f5W+noN8VRCSK4qvTbq&#xA;COoB7/PFWLfmVptzqWg21lAzxmbUbJHljQyFEedUZiADsA257eOQyQ4okXVokLFJ8uq2SoKyO1BQ&#xA;sYnqf3no1NFH7f8AXpk0rpNVsowS7MAFlc0jkO0DiOTovZmFPHqKjFW21OzUSFmakXqc/wB25/ug&#xA;C9KLv12p17Yq4anZmQx8m5B/Tp6b/aEQm68afYbr47ddsVcup2bOqBm5OUVf3bjeRC678f5V+jod&#xA;8VWx6tYyIjozlZBCyVjkG1x/d7Fdq96/Z70xVw1axIBDPRvTp+7k/wB2yein7P8AP93U7b4q2+q2&#xA;SV5M2wcmkch/u5BE3Rf5z9PUbYqrwzxTKzRkkI7RtUFfiQ8W6gdx1xVL/NUcsnljV44Y2lleyuVj&#xA;iQFmZjEwCqBuSTiqWeR72VfLlm2o272d9cEPJAysxBmYmIEhf99qBvSlN6ZVhutxRssYXW6eR6rZ&#xA;SAFGYgrE4rHINp3McfVe7Ka+HU0GWslKa+0mdAJ19VFIZVeF2AYSeiCAV68/69N8QUg0oXMXlozy&#xA;3c9pE1zLHL61x9XJlaO3dY3BcJyNG40Fd6VWoGV5MUZipC2cM048iQh1sNCtrYWsU11DFbNJIRG1&#xA;wP7gh5BQDj+3+yKntvmGOzcYgIgzAB/nS/W5B1szIyIiSf6IRUJ0O2unnjjK3O8Ty+nKzHjEJyOR&#xA;Br8BG/0ddsyMekxQlxxj6u/q0z1E5R4SfT3IxdRtGKAM1ZGVE+B+rp6i9tvhHf5dcyGlbDqtlMqN&#xA;GzESLE61jkXaevp9VFK038O9MVX21/a3DcYmYngJN0dfhLFf2gO6nbFURirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYXB+ZQk/MWXyXJpF&#xA;zE6OVTVGBa1cfVRcgB0RkWShP7tmBoOXcDFUB+YnlPzrrksK6XLCsii7EN+l1c2DW6TQGKONo4zO&#xA;sxLOWaSinYAAbnFUw8qQ67pl9YaFfXFEFtfXxgRhKI0e+5W1v6rryZbeCZYgRSvHFWWWczywsz9R&#xA;LKg+SSso/AZTgmZRs/zpD5SIbMsRE0O4faAr5c1uxV2KpX5nfX4tEuJvL8aTatEA9rbScfTlIIrG&#xA;5Zo+IYV+LkKdd+hydIMRyAZdoHme7z6sZ3W3Nvy/rkWrWIkaM21/DRNR09z+9tp6VaNx/wARYbMt&#xA;GWoODU6c4pVzifpl0kO/9Y6HY7rCVhM8x2TsVdirHfPOsX2laXZz2cnpPNqNjbTOFViIZ7lEl4hw&#xA;VqUJpthAtMRZTuKWT65LATyVIonBI3q5cGtP9TKIzPiGPQAH58X6mZiOAHzP6P1q+XNbsVdirmBK&#xA;kA0JGx8MVYt5Z8xayh/Rfm6KGx1jm/1OWM0gvIFpR4zyZRKK/HHyqOo+HNlq9LjPrwEyx9e+J7j5&#xA;dx+HNqhM8pc2U5rW12KuxVAa/eT2WhaleQECe2tZpoiRUB442Zaj5jFVtlcXItNNaWUzNdAeqzBQ&#xA;atC0m3EKOq+GU5JmMoj+ca+wn9DZCIIl5D9IH6Uxy5rdirsVWTpK8EiRSelKykRy0DcWIoG4nY0O&#xA;9MlEgEXuFKX+XdWfU9MWWdBFfQO9tqEA6R3MJ4SAV/ZJHJD3Ug98u1WEY50N4neJ7weX7fO2MJWE&#xA;zzHZOxV2KvE0ntLj/nJgpJBJFe2sZAdo04PG2n1jIkRq1aslOaV+E/HsqYq9sxVj0of/AJWDa0IC&#xA;/oqfkCNz/pENKGu2KptYEB7uMHeOdq/7NVf/AI2zG053mO6X3gH9LdmG0T3x/Z+hF5ktLsVdirsV&#xA;Y95g8nRanq9lrlreS6frOnKyW08QQxyK1fguYyKyx7n4eQpU8SCa5n6bXHHjljlESxy5g8/fE9D8&#xA;PfbXPHZvkQgtM89yQy3lv5ssjoD2srRwX8xP1G6RF3kjnYKqFirERvvxpTlvS3L2cCInBLxbG8R9&#xA;UfIjr7x17mMcv87ZlqOrqHQhkYAqwNQQehBzWEU3N4FYd+ahI8vWZBC8dU08lm6AC6QkncdslHmy&#xA;hzZPULqtO8kHT/jG/wD18zE5ZvfH7j+1s54/dL7x+xFZktLsVdirsVSzzF5b0bzHpjaZrEBuLJ2S&#xA;QxrJJEecZ5KQ8TI4offMjS6vJgnx4zUvcD97GcBIUUkF75w0HU47W4tZdb8tRwFm1WMK1/G/KipJ&#xA;CrBp+KqatGnI1Hwkgk5nh6fNAyBGPLf0/wAJ9x/h9xNefKq7lE98ftTzQfMeh+YLNr3R7xLy2SR4&#xA;ZHSoKyRmjKysAyn5jpv0zD1OlyYJcOSPCatsjMSFhMsx2SVebf8AlFdZ/wCYG5/5MtirVryTSdIe&#xA;RgWT0AWHwirx+nsCT/PmNqTXCe6Q+3b9Ldh34h/R+7f9CbZktLsVdirsVYld2d1ofnJvMD3jto2s&#xA;LFZXtnRVit7gcUtrkkbnmR6LHr8SfsrttIZI5tP4XD+8hcgepH8Ufh9Q9x6lqI4ZX0LLc1ba7FXY&#xA;q8khvNXvfz0SSDUJJ9DjaaOOBZrwwiS2tGhuF4B/0fWOdqMtPrAbcr6dGxVl/mvzwui6jplnELcN&#xA;d30FlMl9JJaM4nZATaNIgin9NHLvxfbjw+2woqw5PN+u6jrnlTzNbvDFpz2VwPMCwFZYxB9cjgLI&#xA;7/EFRwGYjcLXwyyABsdejbjANg8+j02O3hstTd40CpqH94R/v5AT/wAOpP3e+a2OKOLMSBtk5/1h&#xA;+sfd5tspnJjo/wAH3H9R+9MMznFdirsVdirsVQ2p6Zp+qWE2n6jAl1ZXC8Z4JBVWWtaEfMZZhzSx&#xA;yE4GpDqiUQRRY43knULC7spPLOsSaXY2isp0idZLy0kBTgo4vKjxqo6KjAV3pmwHaEJxkM0BOUv4&#xA;hUZfdR+LX4ZH0mk18vXfma4N6mu6fDZNDNwspLeX1UmhAA9TejKSwJoR0I71zF1UMMeHwpGVjexV&#xA;HuZQMuoY/wDnDZarfeUEtNJZU1Ge+s0tmenHmZ168tt8x4EAgluxkCQJ5Jzazw3em6br5FbiOJfr&#xA;LsvFwpHGdWUfZaN6kjtQjMHWYowmMtbw/wBz1+XP+1yMcjvi6S5e/p8+SfZmOI7FXYq7FXYq7FWN&#xA;eYPy+8u6zbPGsb6VcuVLX+mFLW5IUhuJkVTyWoGzA5sNN2nlxG/rH82fqj8mueIHy9ypYWHnS11+&#xA;JZtSg1Dy4tuyuZ0Ed/8AWCRxZjEiwsqhewX7R22GDJk08sRqJjlvp9NfE39/JQJA89vtRnm3/lFd&#xA;Z/5gbn/ky2YDYxzyMus6t5Q+oeZGik1qwcKSihUX92sls4C7MDG4/EdQcp1+lhmhVeY97lwy+FMS&#xA;j9JH9rM7S4FxbpMBxLD4k7qw2ZT7qwIw4cnHAS/HmPgXHyQ4ZEKuWsHYq7FUPqNlFf6fc2Uyq8Vz&#xA;E8LrICyEOpU8lBUkb+I+eWYshhMSHMG0EWKSHydPq1hH/hvzBe/XtYs0MkGoMvp/XbXlQShat8cZ&#xA;YJIKkg0P7QJzddGEz42KPDjlzj/Nl3e48x8e5rxkj0nmybNc2uxV5smpeVNJ8/y6ddXmp/6JcNdW&#xA;1u6Ry6XbXmpH45DNBG00LyteMqi6kCfGeHbFXo0kEEjI8kau0ZrGzKCVPipPTFWNXFpZN51gsWgX&#xA;6rNo91G8AT92Ua4i5qQBQBq4gpBpKvKnmf8ASa6r5VZXXWfL0jQ2s10Qpuo4JWSKdNyzUEa+oaUq&#xA;f8ravXYZSxkwri5jylz+9y4gRkJH6Jc68+bMrO+EnGG5pDfAD1ISaVNNyn8ymm345Vg1HFUZ+nJ1&#xA;H6u8fgtWXDW8d4d/6/NF5ktDsVdirsVdirsVdirHvOrBbTS2NaDVbDoCT/fr2FTiqWSeZ7DQPPf+&#xA;GrmJ1s9cQXlrckKLeK5lMiyQszEU9ZouYHUux8dpmPFFv4TKPEOY+bINPuZ7OMWupcYuLFbWavwN&#xA;GPsqzH9unj1+/NXpsssQ4MtD+aehHTf+d9/zbc0I5DxY9+8ef6k0zYuGgPMGqx6RoOpatKQsen2s&#xA;907MCQFgjaQkgb0+HFXnWm/nzpb6Vbyahps0ep+gTdwJJapF9ZRuLLE006ViYVkSYn0+NBy5ELiq&#xA;v5h/N29sPMl7o1np0TvbvFZwieUo7Xk8lkkQcKGCxyfpAhO5Mbt9gcsVV9b/ADYXS/Lmoa9ItsLG&#xA;21w6Xayh2lWa1gZfrUgpx/eqsc/BFrUqB3xVj3/QzXl64u5bSy09zInqRh3uLZisyztarWOOQ80M&#xA;zQ0Kv8SuSPs0KrLvLH5u6D5j1y00extLkT3dub1ZmNu0SW5BMbO0cr0d+JBj+2hHxAdcVZJ5t/5R&#xA;XWf+YG5/5MtirG9Y8waZ5Vh0PzFeMYrG/ih0y+PE8qmNpraQg7/u2Ein2evbLYRMhXxbsUDMGI97&#xA;J1lms9SlSSMLYXBDRT8qgTNQFCP2Q1Kj39zmrE5YsxBFY5cj/S7vK/v97aYieMEH1x6eXf8AD7vc&#xA;mWZ7iOxV2KuxVI/NnlO08x2tpHLczWVzYXKXljeWxUSRzRghT8SsGX4viXvmZotbLBIkASEo8JB5&#xA;EH8c2GTHxIPTvOUkOqy6J5htnsLyAIsWqGN49Ou2f7It5n+H1OPGsZaoNQC3GuXZdCDAZMR4on+G&#xA;/XH+sB08/jtdMRk3o/sZNHLHKgkicOjfZdSCD8iM1xBBotrxfV21fVPz0Ok2+t31nBaT2ly1qsvK&#xA;z4paGYIYjNH+8b03oqoevNw6hQoV6hr/AJt0vQp7SG+iumN4WWJ7e2lnXmqF1QmNW+N+JCL1JxVI&#xA;YPMNrqPmGy12zk9Ow/Q91LMs8TCQLDdRrInEsnB1ZGHfBKQAJKCaW+ZPKOp33lYMZOOsWqvc2slk&#xA;hiuUnlb1JvTlMh3JY0oB93wmuNwiJAXIdO++YWEjDcb+XehrPyR5zvoNLuL3zJcQNZIBHDPBbzSs&#xA;CoFZXCRtz+Hf4mNd+WRnix5iJZICxy3Nj8fY5OLVyiDQA4kXaaD+ZUS6grazbAmQ/VWZJHEqVrvy&#xA;LNB8JC1BfpXfvQNGRxcM5x4vMS+Vi/tts/NRJHFCND4fcmQ07z6Hsv8AcraFAP8ATP3LDiQBsu59&#xA;Wp71j8flZ4ExIVOXCPKO/wBjHxcdH07nlz/W46f599O7pqlrzZgbUelT4QxPXifT+HahWT598HhZ&#xA;uGXr9R+nYbbfj8bJ8TDcfTt135qv1Lzv/uPrqNp+7X/TiIT8TUXt/uzev2fS+XYTMMnFGpDhF8W3&#xA;Pbb3bsBPHUttzy8vx8VP6h589O9H6UtebvWzPpfZXmTSvH4PhoPiEnzrvgMMtT9Qs/Tty2/X+Oie&#xA;PFcfSdvq8/x8FU2XnXlYU1K14xr/AKafRNWNF67/AB71+z6X8AmGW4+obfVtz2/X5/NAli9Wx3+n&#xA;yRei23mGGe8bV7uK5id62axIE4JyYmo4g9CooWbp1OWYxME8RsXt+Px7+6GSUCBwij1S3z/NPDY6&#xA;S8Kq7nWNOXi5Kj4rlV6gGm58DlhNNJbfTG11NSS8toZLO8YWrMzligtqqeKNGVfjOZCCaV8MqiOK&#xA;z8vh+22I52wvSfJ/5gXvlq/0xNbu7Z/rREU2o8J1pGUHGNJIpJuHwHi3q09upyUzDUDhnD09b2v3&#xA;V5uZi1hExIRqk5j8vfmlbX1r6Gq2LQRwhZJXSbjzFQf3XOnxfCRQU2PTbMf8lETEomcaHIS9Pylf&#xA;6mz84DEiUAbPP8bov6h+aiWbLJe6dcOackUOGapHLi7pxUdSFKnwr3yEtNmESI5Td8zGOw/T9n6E&#xA;nUYeIHw9veiY7P8AMJblC/6LkjEahv7wKWjJK1X0uXwk1WjU9h3n4WfivjFV/N/48GvxMPD9Ju/5&#xA;37P0KCj8xTZSSTWFjLciUMqs6mX4aBWQ8VjoP2eR5U98gcWq4D64cV/zTyv+t3eX62zi0/EPTLhr&#xA;v/Z+lFU88LdR2v6O01rRgzSSKzCEE1qCCPU5H2QjfrlnDn4x6o8Fb+k3f+m/S1fueA/VxX3/ALFE&#xA;N58WzeZdJsFuhJsg4+oVqrFlHPh9pQamQHbpXfIn8xwH6OK9ufK9r/H6mXDg4hvLhrf3/JMbU+a1&#xA;1u3Sazso9L9NhPLASzg/EQAzGM/a47cCOu/heDk4hYHDW/v/AB+OjTww4TueK9vx+1Febf8AlFdZ&#xA;/wCYG5/5MtlzUlEtrcavp+m6Vc2kEsIthPcwmVuBQxelFVvSqCWdmHw9UrXKpgSkB8f1fjyYncpF&#xA;p+peZdAa+0m9jt9S0qzj9O1sfU/096qpVYQxPqoRy4JwqPs8zxpkjPHOPDM+rkfP4ebdHKLBup/j&#xA;dDWn5q/ojQo7vV9PvtNR5xBDBqkF2JDyqdp1gMfY0U/FlEdLlwgRxnxY+8cXzsX+OfJzpY45ZH6Q&#xA;f6PL5c07T80LSRyYbIyQRpzmmE8a0K05oiPxZmWv2dj1275SO0sfiHGQYyH86o/eXGlo8wFiPEPL&#xA;8X80tufzeu00m21CHQp2E06wvFwuGYAluRP7hVX7BpVq96HMrHlE4iQMQCeshXwo7liNJlvhIo+f&#xA;7G/8e+eZdcu7KLRYYoI4A9u8simr96/vEY/aHw8a/LIS1OKMiDkhfdzP3/YzGiyGIl0Pkfvastb/&#xA;ADdvdEsp4rfTkvXl/f8A7qdhxV2HE1ZEo1BVlbYeB6UjXRkBKAnOJP8AN4fmTt8vmG06OMZmM5AA&#xA;D8d/3Jhcab+aN8bqG5uNKFncwmF7SSCQxcWFCVZJfV59a1PHpQZlYc+UZLEeEAAg2PqvuF+TTKOH&#xA;g3JMr+z5JHZflb5v0zTdPsNE1kaXDZzLOwSe5fnxcyem0Tl7fhyO4SNa9698/H2rqp3LOMWSchX0&#xA;V5XYo3X2tU8WAH0cYHvSHSrldU/5yAj1niEnSa60vjyuy6w20d7AY6nhbFC9kk5HAsDKo5GmYrW9&#xA;S1byH5f1O7ju2WeznRppC1hcS2fOadBG80noNHzl4igdt6bdMVYzc6Ppek+bfLvly2jlktjYyxQN&#xA;OZLl0jjuY53Bkfm1CE4ddlNNgMpynlHvP7WEjyDNfMOsNpGmG8SD61K09tbQwchHyku7iO2SrkNx&#xA;AaUEmnTLmaAGsecCSBoNuSpowGoDY0rQ/ufA4q79MecORX9A2/IAEr+kBUA1of7n2xVAab531PVJ&#xA;pIdNstNvpoV5yxW2rQzMi82jqypExA9SJ137qR1BxVFweYPNNx6n1fRbWb0XaKX09RRuEi/aRqQm&#xA;jCu4OKq2n+YNXfXYNI1PS1smubW4u4Jo7kTgi2kgjdWHCOlfrKkfLFU/xV2KuxVhf5t3K23le3uT&#xA;GJfQ1KwlERXkGMdwrAEb7EjKs0uGBPcxmaFsq0q0W0021tlJYRRIpYjiWIG7EGlCTuclCNRATEUE&#xA;Vk0uxV2KuxV2KuxV2KuxVKvNtP8ACmtV6fULmtf+MLYqgfI/1KfSzqNpw9G4EcUJjoB6duvp9vGT&#xA;1G/2WU4iJXIdf0fgsI77p0umaeuovqS26C+kjEL3AHxlAahScnwR4uKt2XCLtVntre4ULPEkqqwZ&#xA;VdQwDDoQD3GTtkCt+o2X1h7n6vF9YlX05JuC82Tb4WalSNumAi08R70OdD0YxrGbKHghDKOA2INc&#xA;xD2fgoDgjQ8m783lu+I/NFR2ttE5eOFEcjiWVQCQN6VGZEcUImwAD7mqWSRFElUyxg7FXYq7FXYq&#xA;gbvRdPurxb2VZBdLBJarLFNLCRFKys4/dum/KNSG6r2IqcVSXztYwppdrKGl5DWNKkAM0pWsmqWo&#xA;PwFivHb4VpRe1MVS7T9a/LqfV9ahhic31tdsmpFoZ5B64qG4lQ4pVTg/Jgb19W7M6UjeuaK8v6v5&#xA;In833ljpKOutRWivc1jljX0Oa0oJOIrVl7YjSiHrrnsg6cxHF3vGrDyz5E1Xz7+j4b3zHbalcNe2&#xA;EhZbFIyztcyO7xcnuUC/pBuNIwAOLMB9rCxe5+RfJWneTtCGjWE81zAJGl9W5KGQswA3KKlT8NSx&#xA;3JqT1xVZqsCT+edIicuFbStUqY3eNtrnTjsyFWHTscVTiTSrWRHRnuAJBMrFbm4U0uPt8SsgKkfs&#xA;EfY/Y44qubTbdnZy89XLsQLicCsiBDRQ9AKL8IH2TuKE1xVEJGqCgJPT7TFugA7k+GKofUdMstRh&#xA;jiu0LpFNFcR8XeMiWBxJGwZCrbMoqK0I2NRiq39FWtKc7j/pJuP9+er/AL8/m2/1fh+ztircmmW0&#xA;gIZ5wCsqHjcTqaTuHfdXG4K/AeqD4VoCRirbabbsJAXn/e+pypcTinqgBuNH+GlPh4/Z/Zpirhpt&#xA;uJDJzn5F/Up9YnpUxCH7POnHitePTl8f2jXFXLpturq4eeqFGANxORWNCgqpehFG+IH7R3NSK4qt&#xA;j0q1jREV7giMQqpa5uGNLf7HItISxP7ZP2/2+WKuGlWoAAe4+H06Vubg/wB1J6q1rJvVtm/mX4Wq&#xA;u2Ktvpls9avOKhweNxOv95IJD0cftCi/yr8Iou2Kq8MCQqyoXId2kPN3kNXPI0LlqLvso2HQYq1d&#xA;2sF3azWtwnqW9wjRTISRyRwVYVFDuDiqD0/y/penWkFnZJJBbW3AQxJNNxHp1pX4/irX4uX2v2q4&#xA;IxAFBAFK0emW0YAV5yAsSDlcTsaQOXTdnO5LfGerj4WqABhS1+irWlOdx/0k3H+/PV/35/Nt/q/D&#xA;9nbFW5NMtpAQzzgFZUPG4nU0ncO+6uNwV+A9UHwrQEjFXPpls5cl5x6glDUuJ1/vgA3GjjjTj8FP&#xA;sfs0qcVcdMtizMXnqzFzS4nAqYhDsA+w4itBty+P7fxYquXT4FKENNWNldazzEVROA5Av8Qodwdi&#xA;fiO++KrYdMtoVRUechFiRedxO5pBXhUu7Fia/GTu/wC1XFV9tYw27co2lY8BH+8mllFAxbpIzDlV&#xA;vtdaUHQDFURirE/MUnnK41a0ttGnk0yGSVoJZZbWG5jKLC8pueSykheYSNUcISx7jFV/lXX9TaLT&#xA;tM1lZp9Xvbe4v/WMMduEtluAsQmjLhkl9OWPkoXrXpiqt5ymSbQ4CoI46xpKEHxXVrYZCGQSG3eR&#xA;8mUoGKax3eqNNOpsQscb8YZDKPjWn2qUOYsc2cykPD2B2PFzHybzjxgA8W5G+3Jfb3F+928U1oIo&#xA;AgZZhIGq1acaUByeLLlMyJQ4Y1zu9+5jOEBGxKzfKniNz5h8y+XvMV1c6F5Ss7S6lX07mdNJu2kj&#xA;Q3Uo+rmZJo0n+FFmLLxHE1VXrmU0PWvI2o+ZdR8tWt95jt4rXUrkep6EMZiCxsAUqjS3BDU61avi&#xA;AcVQnmDUE0/zppF3JFJLDHpep+t6K82RPrOncpOI+JlXqeNTToDluHFxy4QQD5/ciRpk1vcW9zbx&#xA;3FvIs1vMokiljIZHRhVWVhsQRkJRMSQRRCQbVMirsVQGta1b6TbwTTRSTfWLmC0jSEKW9S4kEaV5&#xA;sgpVt98VRaTq0zQ0KuqLIQadGJFNj1HHfIDIOIx6gA/O/wBTLgPDapk2LsVdirsVdiqW6X5g07UZ&#xA;prRWMGo2xYXOnTcVuI+NPiKAnkh5KVdSVNeuZGbTTxgS5wPKQ5f2+XNjGYPvTLMdk7FULquowaZp&#xA;d5qM6s0FlBJcSqgBcpEhdgoJUVou1TiqjpOtwalpmnajHDLDDqcaS26S8OYWSIzLz4M4HwjscjOY&#xA;iQD1NfYT+hnwHf8Ao/rpMMkwdirsVdiqSpr15/i99Cm09obNrP61Z6k0kZWZ43VZo1jDFxw9VNyP&#xA;H2JzDpo+B4olcuKjGjt3G+W9FhxHiqk6zDZuxV2KuxV2Ksan/wDJk2X/AGxrr/qKt8VUvNRH6JdA&#xA;fsa5pFQP8rUrN/8AjbMbTneY7pfeAf0t2YbRP9H9JCtD5f8ANi3+oTyeZ5DbXUxltLVLSAC3jpxE&#xA;XN/UL0AG+29T3zcy1ODhiBi3A3PEd/PpTjCJvmr6VovmO11ue9vdebUNOlgWKPTntoouEity9X1I&#xA;yKkgsCOPh4ZDNnxSxiMcfDMG+LiJ27qP6/vURN83l2veQPzMuF1BfK/mC49dLq7gpPrd5IscTrGY&#xA;eairRzCN2YDlQHj8O4ZcJm9T0FrPSNAEF3q6Xg08ypeahPMW4spaV1lklklYGNTvzfYDFVK9/wCU&#xA;/wBG/wC2Vqv/AFE6diqUzaHe+Sk1TWfL8c+qWl5NJeXugfab1ZD9qx9NPgPQMjAggdVpvuI6iOr4&#xA;MeUiEojhE/L+nZ+37+lBiYWRv5fqZJofmDTtYtEntnKS0AuLOYGO4gk4hjFNE1GR1ruCPwzX6jTT&#xA;xSo8uhHIjvB6htjMFMsx2TGvPn+8Wk/9tnTP+opMVTskLqqCu8kDUH+o4/5rzGJrMPOJ+wj9bcBe&#xA;P3S+8fsRWZLS7FXYq7FXYqkWs+UNO1DVItbheSy1+2h9C11OJiWWOpb03iYmOSMljyVl+RBoRm4N&#xA;dOEDjPqxE2Ynv775gtcsYJvqlem+dtQ02yY+fbVNDnEpWK9Q87GVC1I/3itL6Um9CkjCvVa70ycv&#xA;Z8Mkv8FPiCuX8Q79trHmPixGQgevZmOaluSXzv8A8oXr/wD2zbv/AJMPiqA8pEL5M8vMaAKkAH+y&#xA;+D/jbKNYaMT/AEx9u36XJhvKQ/on9bKcvcZ2KuxV2KpJ5thmjsYtWtlLXWjSi8VFFWeFVK3MQA6l&#xA;4GfiP5+J7ZmaKQMjjP05Bw/H+E/CVX5Wwycr7k4gmhnhjnhcSQyqHjkU1VlYVBBHYjMSUTE0eYZg&#xA;r8CuxV2KuxV575svNUs/zT8tT2phWyazng1J5QSwjnubeOP0yOhMzIv05OABtsxgG751smnnK0+r&#xA;WzyW9tJIJr3TLyZLeN5pD9T1GCWdhHGGdj6QLcVWvwnNfDHHHmNCvEF/Ec/mD9hbZTM8Ys/R9x/H&#xA;3Ig+bdANx65g1rnSlBpmshOlP7sW/D8MzrcZ1t5u0C3DCODWW5dfU0vWZenh6lu1PowWrzLVvy58&#xA;oahPczLq/mq0a9uZr689HSb8iW4uo5IZ3IkspFAkjkVCigKAooBiqh/yrbytMLuK71LzGymBILC7&#xA;TSNSFxGTDLHPI5Nn6Zd/WBDBQRxBrirNPI2l2Wn63pNjpn6UubPT9O1JZ7/U7G4tGMlzc2TRhnlg&#xA;tkkdhC5JALMQWbc1xV6NiqR615N0TVtTtdXlWW21mxVkstStpGjljD9Rx3ikH+TIjDc7b5mYNfkx&#xA;QOMUccucSLB/SPgQwljBN9V/lyHzZCb5PME9pcp6/wDuNmtQ6ObcAKBOjAKJPh5HiSKk0oAMGqlg&#xA;PD4QkNvVff5eXvWHFvaQ/m+dWHlSBtHWN9UXUtPazSUckMq3KFQR3qRmNCr35NsK4hfJPoXgubbS&#xA;tc+CWR4oi06A8WiuFG617cnDfKuYOqxRjkjlreJr4Hb7Dv7rcnHI1LH0P3j9ic5mOI7FXYq7FXYq&#xA;7FUNqGmabqVq1pqNpDe2rEFoLiNZYyR0JRww2yzFmnjlxQJjLvBpBiDzSbT/ACg2ma9Fe6bqM1to&#xA;sdu0P6AFXtQ7ty9SPkx9OlFCqo4jen2jmXl13iYjGcQcl3x/xe49/vO/yYDHRsHbuRHnf/lC9f8A&#xA;+2bd/wDJh8wGxj35eW2p3v5fW9jrEFumo6czQpBCG4I0NGhJ5E/aRlbwKnKu0NPHLEgC+ovvHJzI&#xA;5RjyAxOx5+482cW8yTwRzJ9mRQ4B60IrvkseQTiJDqHFnAxkQei/JsXYq7FVsic42TkV5Ajkpowq&#xA;KVB8cING1Yt5K06HyyZPKCM5tbYNdaPJKxdntZHrJHyPVoJXof8AJZPHNlr8p1H+EfxHaVfzuh/z&#xA;h9ok1Yxw+n5MrzWNrsVdirCvOl/56QrL5e5WrRtOn1e5t0nhlWC3kmE7SQvK6Ru6pEq8VeprxOKp&#xA;Ppa67r+p6dHr1ubO9v8AQ9RSYN+6mjiN9ELaUooPGb0hG7Ltxeo2pTDE0bZRlRtl1nrK33l+LUpW&#xA;RL2wb/T4lNRFcQEx3MXj/OF+g5i64iETP+YeL8e+JcjDG8nAP4tvnuP0FPIZop4UmibnFIoZGHcE&#xA;VBy7HMTiJR3BcecTEkHmF+TYuxV2KuxV2KuxV2KsY8/mQafpRjAZ/wBMabxVjxBP1pOpAan3Yqra&#xA;GkUL6n5cnKj0Waa2iBFTZ3ZLjiNvhjlMkQ22CjHPATjR/iFNxmQRMc/0hNdJv0vLMOH5yxMYZyBQ&#xA;eomzff1zE0WoGXHd2RsfeObLU4TjnXQ7j3FGZluO7FVKG8tJppoIZ45JrYhbiJGVmjZlDKHUGqkq&#xA;aivbFXS3lpCWE08cZRfUcOyrxQmgY1OwrtXFVsuoWESs0tzFGqyLAzM6gCV6cYzU/aPIUXrviqrJ&#xA;JHFG0srBI0BZ3YgKqgVJJPQDFV2KpJ56YL5J8wseg028P3QPiqX+XZHttQspGVUg12xikUISy/Wb&#xA;aNRUkqvxSwMNvCLJg3H3NnOPu/H496e2M0Md3c6eHHqRt6yJUV9OX4uns5I+VMwNPkjGcsV7jf4S&#xA;3++/hTbmgTGM62O3xH7P0o7MxxnYq7FXYqx/zl5d1LWLayl0m+Gnarplyt3azlSyycFYNbyEFWEU&#xA;1QH67djmdoNVDEZDJHihOPCR3f0h5jo15IE8tiEdoevWmrQPwBgvbchL+wkI9a3l3+CRR40PFujD&#xA;dajKdRppYjvvE8pdCPL9I6ciyjK0yzHZOxV2KsYuXRPzJsuTBa6NdAVNP+Pq3xVidssXkuW+82xL&#xA;LfaV5jmkutZtPhaWDk8klu8KgIKFJCro+9aUNfhLDJ4giCOf43+H2+9ujk8ThHI9D+tNz+Znla0n&#xA;0v0bpYLbWFMy21ykkDR1UNXky+nGDy35NxJ6HrmLPT5sU/3cRLH/ABC+X9X3933OUMQnE8Z9UeR5&#xA;3705tPzC8pXPqBL+MGM0oGV+Xb4DGXDbgjY5X+fgBIzEocPO4n7xYazocm1Ub8/1o/8AxT5d/c/7&#xA;kIaTCqHlsNq/Gf2P9lTLBrsO3rjv5/ivi1/lMu/pOzk80eXmMoGoQgwmjcm41/1K05/7GuH87hon&#xA;jjUee6Py2SwOE7qp8waECo/SNt8XT96lPpNdsP5rFYHFHflux8DJv6Tt5NN5i0BQxOo21E6/vU79&#xA;Kb7+G3fCNVioniHp578l8Ce3pO/LZx8w6ACoOpWvx/Z/fJQ/TXJePj29Q35b80eDPfY7c1ez1PTr&#xA;1pUs7mK4aGglETq/HlWlaHvQ/cfDJQyRldG6YyhKNWKtI/Pn+8Wk/wDbZ0z/AKikybFJ/MugXEvm&#xA;p/OmmuW1Hy9AlqlpIf3E8ZWSS4VuKlwwjuBxZa0YfZbIjNQII9I+fmzjmqJiRt9qHX81vKkmjXHm&#xA;C3kfTmtpRBdwXcTqsjfBUViEgYgybMp8e2U6nR5YHjwgGfd0l7/PuLnY8RJEJ7x6EdP2eSf2f5i+&#xA;VbmeGBb6EyzKGQxyxzKeQqBWNmNTQ7EA7b0ys6sxlwThOJq+Vj5i/wAc6azoZcJkCCPkftTCTzRo&#xA;31Ga6t7qKZo1YxxcwjOwGyjl/Me9KZEdpacxMuMUPxy5sDoswNcJeYaX+XOsObmeTzWlpfa5LNe3&#xA;dhHPcuqtdzerJCjQXUA4xhVAZAHbjx58K8rhq8RIAnGz5hrOnyAXwmh5Mi1/yjba1f6nqMmq2Bsb&#xA;06VZuZF5lbHTrprqeBpDJQvcPJx5dhTvQ5IanGQTxCh5oOCYNcJv3Ker/l5qV5oN7o0Gt2threp6&#xA;tJrk1ykHKrK1bYrCZAeUDRQkOSRWPplvELrq18Jq+jGF/JDzS07XVx51WSNbpmeUx3TMsPrSf6Pz&#xA;e9bZY7qaKjV2ahr2HGKu1osv8reQte0nzFZ3uo+aJtQS3tGVtN5XASWdqrLdMslxNUvVainBW+yq&#xA;1w2LpDJPPIr5J8wDx028H/JB8KsW13TNY1jyN5Xg0a8ax1eGKC/t5YxU/ubJgy9QQrmVUJ/yu4yG&#xA;PLwgbXYZYsojzF2GQ6Rr2ma/Cl1ZMlvrcCAz2TsvrINjwkA+Jom5Aq1KbhhvlWfBdZIfV0PeO4+X&#xA;3HdvhKhR3xy/Fjz/ALE407Uor2KoRoZhvJbyjjIu9KlfA9jkdNqo5RyMZdYnmGOfAcZ7x3jki8ym&#xA;hxIAqTQdN/fbFVokjMhjDD1AAxSo5BSSAaeBocFqhptX0mCCK4mvbeKCdgkEzyoqO56KjE0Y7dBi&#xA;JAqN2L6rYeWl16/1jR9Ugs/N0dsHuh9YV1kgjX4Eubd5Agj6fEOBHXkK77DDrjwDFk9WG/lfUSq7&#xA;+Y8muWL+Ic0Dpn5sQW+l6fL5mtVtbq9nW1FxYSw3loZGcrXlHK8iKqjk3NRSh3OWT0WKcpHBkjKA&#xA;F+r0y+0UT0FFI4xtKJBeg5rGbsVYN5pjil8+WEBQPPc6VcW8DEAsnq3duJHQnoUj5Nt4ZXlO1d+z&#xA;GXJk+p6FaXmmXNlCEtXuE4CeNF5KQQVbtWjAHDOPFGgaWQsUp2HlfR7WGISW0d1coPju5kV5WYj4&#xA;jUg8Qf5RsMYQ4R596YinHyj5WLXDHSLMtdMXnJgjPJj1Y1HWu/z365MshIjqtl8m+VZJ4Jm0q2D2&#xA;1REFjVFoabMi0VqU25A07YCBd9UiZoi+bX+DfK3CVBpkAEpqaLQqa1/dkbx7/wAlMgcUCCCBUue3&#xA;P3sxnnYNnbku/wAH+WP3P+4y3pAKKOAo21P3g/3Z0/bricULBoWOW3L3I8adEWd+bv8ACHlnjKv6&#xA;OhpKasQtCv8AxjPWP/YUyJ0+M36R6ue3Nl+YntuduTZ8peWi0THTYKwghQEADVp/eAbSdP264nT4&#xA;9vSNuW3JHjz33O/NFafo2l6c0zWNslubghpeFQDxrQAdABU7DbJxxxiSQALYyySkACeTH/zJNsuj&#xA;ae91QWyatpzzEmlFW6RiajwpkiaFsCU20PSYobC2lmRlumBmlBdzxeVjIykVoePLjv4ZHECI79f0&#xA;sYjZA6f5G05LaW31UjVI2kY28cw/dwxVqiIlStV/m69umRx4zHmbrl5LCNK9x5G8oXFzHcz6TbyT&#xA;xIY0kZKngTWjfzde+WswSEM/5aeRzC0SaTFEGbmHiLo6mo+wysCo2pQbU26YJxEhR5Mxmnd2bXr+&#xA;XXkpGQrpcahBxWMPII9q7lOXAtv9oiuRljiTxEDi763SM86qzTQ/LryiIygs3BJr6n1i45j/ACQ/&#xA;qcuI8OmUnRYTHh4I17g2DWZRLi4ja9vIHlQuG+psKD7InnCn3oH67/57Y/k8PFxcEb9wQNVlquI0&#xA;oH8t/LXolAs4k5VSf1mLqAKcQDVKU8VrkD2fg4THgFS5s/z2XiEr3CLsfJXl+w1KHULOFopoa8F5&#xA;sy8mVkLHnyavFyOuWR0uOMhIDcCms6iZiY9Cv88f8oV5g/7Zt3/yYfMhoSbyLp1pdaRaSFCILS0t&#xA;rWFQzAeosStOykH7LHitP8nKMJJN9wr9f48muG6FufJcL+Y9QFjp72lxcRh4vMAnmiMQkHxRxrE6&#xA;l2DgtQlR47U5SjkyRJgB6ee/JnHJIHhHJAX35cee4NIgtdO8yR6lcrOsksmqRMpCDlX05Ii8g7fC&#xA;eviMlqMGLMRxiuHcV3ubi1EYk7UCOiPPl3z+166m9QRxRcba4EpCVFCv7oIWqGJJ3/2WYZw54zJE&#xA;+KFcjQPzET9yD4Eoj6oy8v2pFe+QPPd1olpbTakWuo7lZZJ+DPIVDNQNzuWi/aG4ir79cgMuTgBl&#xA;hMjfLj5ebYMGm4iOK4+dphB+Uqtrd1d3U81xb3ECxhJ5l4BgRuFgjhNRTx+/LuLKZEDHjiP53M/j&#xA;8e6B8ARG3qvu/SbRVj+S/lSLTLeyuIRIIHLjq4NWY/7sL70brgGHUSA48hEr34QBf4+Xk2HWREzK&#xA;MeY6p5F+XPkyJqrpsdBuq7gAnqwoRQmgr8ss/KQ4zM2SRW5aDq8nDw3tdoseTvLQCf6Cn7s1UlnJ&#xA;NP5jy+Ib9GyMdBgEeEQjQ35IOryk3xFOcy3HYF56X8yZPMOhfoGHjo8V0DqD286c5IfVtyxlSVI+&#xA;BEYmAo0ikdQHKFVUDpflTznfr5b8wzTpb63pdtdW08WrRvLIfVmHCQm2miWvBO9euRlAEgnogi01&#xA;03VPOV/fahaWWt6FdXVjIq3kCW9yWgJHEKQLjoWjf/ZBh1BySUwMH5lVFL3RgAd/9EutxT/mIxVT&#xA;uovzHW2lZ9R0aBAjFpjbXI4Cm7VNxQceuKrbC48+6hYW1/ZalolxZXkST2s6Wt0VkilUOjqfrHRl&#xA;IIxVWEH5lVNb3RiCdv8ARLrYU/5iMVQd9d+era7srafVtFiubqRhbW4tbsvLxWjfCLgnivNSzdBt&#xA;U74qjGg/MoqQL3RgabH6pdGh/wCkjFW/Q/Mn/lt0b/pFuv8AsoxVW8p64NQ+vW8+p2eoajaS/wCk&#xA;pYq8ccSkmJQFkaRiPUgkHKtOQYdVOKrfPflebzLoP6NhmjhkW4t7lWmV3jb0JVkKMI3jajBabNkZ&#xA;wEhR5IIsUlD6l5xh1u20Ztb0NNSkgaSHTzb3XN4wR8e9xU04NT6fA5JKZNB+ZRUgXujA02P1S6ND&#xA;/wBJGKt+h+ZP/Lbo3/SLdf8AZRiqD06689XbXkNrq+iXUljcNb3nG2uWMUxVZvSalxsVjlTbwxVF&#xA;+h+ZXIH67o1KGo+qXXX/AKSMVQuqT+fbGxe7vNV0W0toijPM1tdAfbACf70blzRABuSaDfFUTEv5&#xA;jSxJKl7o/CRQy1tLtTQioqDcAj6cVbEH5lAb3ujE1P8Ax6XXSv8AzEYqt03WtRg8xx6Truraa17N&#xA;Efq2n2cU0UjMwaQFjJLKK+nBIVXqQGPRTiqda7pp1TQ9R0wSeib62mthNx5cDNGU5caitOVaVxVg&#xA;sNv5r8meXrKxvfMGjW1osyww3V1b3Cs8kkhkKkidR8XxV8BU5XjxiAoMYxoUyP0PzJ/5bdG/6Rbr&#xA;/soyxk0sH5lBQDe6MTTc/VLoVP8A0kYqhPrPntdX/R51fRDfyW/1hbL6tc8xCj8Gl4/WK0LOFriq&#xA;LMH5lEbXujA1H/HpddK/8xGKt+h+ZP8Ay26N/wBIt1/2UYqgtHu/PWoWKT2OraLeW6/uxdLa3ZWQ&#xA;qACyt9Y4uD/Mux7YqjPQ/MrkT9d0alBQfVLrr/0kYqhNQ1nzDopt7jzLrOkWWmtKPUeOC4jkYRgy&#xA;uFZ5nUAIhLsVoq1JxVmOKuxV2KpLpHlySw1zVtWl1CW8k1QxBYZY4VWCKAuUijaNFkKj1WPxsdyT&#xA;1JJVTrFUBruiWWuaTcaXemUWtyFEvoSvDJRWD0DxlWAJWhHcbHY4qlnkxfLOkaJF5Y0jVUvk8sW8&#xA;Vldc50mnhESlFFxxPwNSM7UAFKAADFUbp3mnQ75dOEd1HFdarbJeWVjMypctDIhkVvSJ5fZB+4+B&#xA;xVBa35H0vVvMmleYJpZYr7Svhi9IoOS8xJxLFS6jkvxcGHJaq1R0VZFirsVY15S8h6Z5Y1DWb6yu&#xA;J5ZNbuDc3KSlOKuZJZSV4KtTWcrU/sqo7VKrJcVSW88uSXXmmw119QmWLT4pI4tNCQmEvKGVpS7I&#xA;ZQ1CB8LDpTozAqp1irsVYh5R8veUPJ2q3+jWGqO2pa3KNTOm3l569xRYUgMiJIxlZT9XqztUk132&#xA;ACqcP5s8vwxXU11eR2dvaXRsXnuWWKNp1QSMqMxHKgYg/wCq3hiqn5v8p6d5p0c6XfsyRCWOeN1V&#xA;HpJE3JSUlV0YfNflQ0OKppYWcdlY29nG7yR20SQpJKxeRhGoUF3O7MabnviqvirGrryHplx56tPO&#xA;TXE66jaW/wBWSFSgiKcZVofh50P1gsRy3ZUPbdVkuKpL5t8uSeYdLXThqE2nxGVJJ3gSGQyIm/pM&#xA;J0lXiWoTtvSh2JGKp1irsVYfe+XvJ+geb2876hqj6feXyGwK3d5wtZHlEfFUjlanPjbbIu3U0rvi&#xA;rIbnXNNttQNjPKIpEtZL6aV6LFFBEyqWkckBa8jT2U+GKro5tL1vSna3nS70+8jki9aFwysprG4V&#xA;1PUGo9jiqA8m+UbDypoq6TYyyS26uXUy8F41VVCokSxxoKIDRVA5VPU4qnmKsa89+Q9M85afa2Oo&#xA;XE9vHaXH1mN7coG5+m8QPxq9CokLIR0YA+2KslxV2KuxV2KuxV2KsSl8iSDU5EtNRe08uXcN/wDp&#xA;LSYwfUuLvUXZpbhrhmLinP4QB8NBTbbFUfF5F8rw+ZU8yxWjJq0UXoRyrNMI1QRiKghD+l9hQv2e&#xA;2Kp9irsVdirsVdirsVdirsVY15j8pXd7PJf6JqB0fV7prOK/1AKZ3eys5JJBbxq7cY6mZjVRvXeu&#xA;Ktat+XHlHV4LeDULWSaO1uZ72Gk88R9a6mM8pYxOhYGTcA9KDFWTYq7FXYq7FXYq7FXYq7FUp8x6&#xA;AmrW0bxSfV9VsfWl0e8YNIltdy28luk5h5KkvBZmoG/DFUvh8i2Nxopsdenl1W7ubK2sdSvi7wvM&#xA;LR3lR19NgyH1JWbY77VriqcaHommaFpNtpOmRGGwtF4QRM7yFQSW+3IXc7nucVR2KuxV2Kv/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>669.323730</stDim:w>
            <stDim:h>497.588379</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Symbol</stFnt:fontName>
                  <stFnt:fontFamily>Symbol</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.1d7e3</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Symbol.ttf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Times-Roman</stFnt:fontName>
                  <stFnt:fontFamily>Times</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>7.0d1e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Times.dfont</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Times-Italic</stFnt:fontName>
                  <stFnt:fontFamily>Times</stFnt:fontFamily>
                  <stFnt:fontFace>Italic</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>7.0d1e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Times.dfont</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Times-BoldItalic</stFnt:fontName>
                  <stFnt:fontFamily>Times</stFnt:fontFamily>
                  <stFnt:fontFace>Bold Italic</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>7.0d1e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Times.dfont</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -497.588 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 497.588 li
669.324 497.588 li
669.324 0 li
cp
clp
1.836 lw
0 lc
0 lj
10 ml
[1.836 5.508 ] 0 dsh
true sadj
52.6099 296.59 mo
236.21 296.59 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
.75021 .679683 .670222 .90164 cmyk
@
[] 0 dsh
55.3643 132.391 mo
69.3179 70.8232 li
83.21 106.319 li
97.1025 101.791 li
111.056 107.176 li
124.948 103.81 li
138.841 106.136 li
152.733 104.667 li
166.687 105.83 li
180.579 105.034 li
194.472 105.646 li
208.364 105.34 li
222.318 105.524 li
236.21 105.34 li
.659174 .184604 1 .0302739 cmyk
@
58.3711 132.31 mo
58.3711 130.587 56.9731 129.189 55.25 129.189 cv
53.5273 129.189 52.1289 130.587 52.1289 132.31 cv
52.1289 134.033 53.5273 135.431 55.25 135.431 cv
56.9731 135.431 58.3711 134.033 58.3711 132.31 cv
58.3711 132.31 li
cp
f
.918 lw
58.3711 132.31 mo
58.3711 130.587 56.9731 129.189 55.25 129.189 cv
53.5273 129.189 52.1289 130.587 52.1289 132.31 cv
52.1289 134.033 53.5273 135.431 55.25 135.431 cv
56.9731 135.431 58.3711 134.033 58.3711 132.31 cv
@
72.5313 70.8701 mo
72.5313 69.147 71.1328 67.749 69.4102 67.749 cv
67.687 67.749 66.2891 69.147 66.2891 70.8701 cv
66.2891 72.5933 67.687 73.9912 69.4102 73.9912 cv
71.1328 73.9912 72.5313 72.5933 72.5313 70.8701 cv
72.5313 70.8701 li
cp
f
72.5313 70.8701 mo
72.5313 69.147 71.1328 67.749 69.4102 67.749 cv
67.687 67.749 66.2891 69.147 66.2891 70.8701 cv
66.2891 72.5933 67.687 73.9912 69.4102 73.9912 cv
71.1328 73.9912 72.5313 72.5933 72.5313 70.8701 cv
@
86.3311 106.39 mo
86.3311 104.667 84.9331 103.269 83.21 103.269 cv
81.4873 103.269 80.0889 104.667 80.0889 106.39 cv
80.0889 108.113 81.4873 109.511 83.21 109.511 cv
84.9331 109.511 86.3311 108.113 86.3311 106.39 cv
86.3311 106.39 li
cp
f
86.3311 106.39 mo
86.3311 104.667 84.9331 103.269 83.21 103.269 cv
81.4873 103.269 80.0889 104.667 80.0889 106.39 cv
80.0889 108.113 81.4873 109.511 83.21 109.511 cv
84.9331 109.511 86.3311 108.113 86.3311 106.39 cv
@
100.131 101.83 mo
100.131 100.107 98.7329 98.709 97.0103 98.709 cv
95.2871 98.709 93.8887 100.107 93.8887 101.83 cv
93.8887 103.553 95.2871 104.951 97.0103 104.951 cv
98.7329 104.951 100.131 103.553 100.131 101.83 cv
100.131 101.83 li
cp
f
100.131 101.83 mo
100.131 100.107 98.7329 98.709 97.0103 98.709 cv
95.2871 98.709 93.8887 100.107 93.8887 101.83 cv
93.8887 103.553 95.2871 104.951 97.0103 104.951 cv
98.7329 104.951 100.131 103.553 100.131 101.83 cv
@
114.292 107.11 mo
114.292 105.387 112.893 103.989 111.17 103.989 cv
109.447 103.989 108.049 105.387 108.049 107.11 cv
108.049 108.833 109.447 110.231 111.17 110.231 cv
112.893 110.231 114.292 108.833 114.292 107.11 cv
114.292 107.11 li
cp
f
114.292 107.11 mo
114.292 105.387 112.893 103.989 111.17 103.989 cv
109.447 103.989 108.049 105.387 108.049 107.11 cv
108.049 108.833 109.447 110.231 111.17 110.231 cv
112.893 110.231 114.292 108.833 114.292 107.11 cv
@
127.971 103.75 mo
127.971 102.027 126.573 100.629 124.85 100.629 cv
123.127 100.629 121.729 102.027 121.729 103.75 cv
121.729 105.473 123.127 106.871 124.85 106.871 cv
126.573 106.871 127.971 105.473 127.971 103.75 cv
127.971 103.75 li
cp
f
127.971 103.75 mo
127.971 102.027 126.573 100.629 124.85 100.629 cv
123.127 100.629 121.729 102.027 121.729 103.75 cv
121.729 105.473 123.127 106.871 124.85 106.871 cv
126.573 106.871 127.971 105.473 127.971 103.75 cv
@
141.891 106.15 mo
141.891 104.427 140.493 103.029 138.77 103.029 cv
137.047 103.029 135.649 104.427 135.649 106.15 cv
135.649 107.873 137.047 109.271 138.77 109.271 cv
140.493 109.271 141.891 107.873 141.891 106.15 cv
141.891 106.15 li
cp
f
141.891 106.15 mo
141.891 104.427 140.493 103.029 138.77 103.029 cv
137.047 103.029 135.649 104.427 135.649 106.15 cv
135.649 107.873 137.047 109.271 138.77 109.271 cv
140.493 109.271 141.891 107.873 141.891 106.15 cv
@
155.811 104.71 mo
155.811 102.987 154.413 101.589 152.69 101.589 cv
150.967 101.589 149.569 102.987 149.569 104.71 cv
149.569 106.433 150.967 107.832 152.69 107.832 cv
154.413 107.832 155.811 106.433 155.811 104.71 cv
155.811 104.71 li
cp
f
155.811 104.71 mo
155.811 102.987 154.413 101.589 152.69 101.589 cv
150.967 101.589 149.569 102.987 149.569 104.71 cv
149.569 106.433 150.967 107.832 152.69 107.832 cv
154.413 107.832 155.811 106.433 155.811 104.71 cv
@
169.731 105.91 mo
169.731 104.187 168.333 102.789 166.61 102.789 cv
164.887 102.789 163.489 104.187 163.489 105.91 cv
163.489 107.633 164.887 109.031 166.61 109.031 cv
168.333 109.031 169.731 107.633 169.731 105.91 cv
169.731 105.91 li
cp
f
169.731 105.91 mo
169.731 104.187 168.333 102.789 166.61 102.789 cv
164.887 102.789 163.489 104.187 163.489 105.91 cv
163.489 107.633 164.887 109.031 166.61 109.031 cv
168.333 109.031 169.731 107.633 169.731 105.91 cv
@
183.651 104.95 mo
183.651 103.227 182.253 101.829 180.53 101.829 cv
178.807 101.829 177.409 103.227 177.409 104.95 cv
177.409 106.673 178.807 108.071 180.53 108.071 cv
182.253 108.071 183.651 106.673 183.651 104.95 cv
183.651 104.95 li
cp
f
183.651 104.95 mo
183.651 103.227 182.253 101.829 180.53 101.829 cv
178.807 101.829 177.409 103.227 177.409 104.95 cv
177.409 106.673 178.807 108.071 180.53 108.071 cv
182.253 108.071 183.651 106.673 183.651 104.95 cv
@
197.571 105.67 mo
197.571 103.947 196.173 102.549 194.45 102.549 cv
192.727 102.549 191.329 103.947 191.329 105.67 cv
191.329 107.393 192.727 108.792 194.45 108.792 cv
196.173 108.792 197.571 107.393 197.571 105.67 cv
197.571 105.67 li
cp
f
197.571 105.67 mo
197.571 103.947 196.173 102.549 194.45 102.549 cv
192.727 102.549 191.329 103.947 191.329 105.67 cv
191.329 107.393 192.727 108.792 194.45 108.792 cv
196.173 108.792 197.571 107.393 197.571 105.67 cv
@
211.491 105.43 mo
211.491 103.707 210.093 102.309 208.37 102.309 cv
206.647 102.309 205.249 103.707 205.249 105.43 cv
205.249 107.153 206.647 108.551 208.37 108.551 cv
210.093 108.551 211.491 107.153 211.491 105.43 cv
211.491 105.43 li
cp
f
211.491 105.43 mo
211.491 103.707 210.093 102.309 208.37 102.309 cv
206.647 102.309 205.249 103.707 205.249 105.43 cv
205.249 107.153 206.647 108.551 208.37 108.551 cv
210.093 108.551 211.491 107.153 211.491 105.43 cv
@
225.411 105.43 mo
225.411 103.707 224.013 102.309 222.29 102.309 cv
220.567 102.309 219.169 103.707 219.169 105.43 cv
219.169 107.153 220.567 108.551 222.29 108.551 cv
224.013 108.551 225.411 107.153 225.411 105.43 cv
225.411 105.43 li
cp
f
225.411 105.43 mo
225.411 103.707 224.013 102.309 222.29 102.309 cv
220.567 102.309 219.169 103.707 219.169 105.43 cv
219.169 107.153 220.567 108.551 222.29 108.551 cv
224.013 108.551 225.411 107.153 225.411 105.43 cv
@
239.331 105.43 mo
239.331 103.707 237.933 102.309 236.21 102.309 cv
234.487 102.309 233.089 103.707 233.089 105.43 cv
233.089 107.153 234.487 108.551 236.21 108.551 cv
237.933 108.551 239.331 107.153 239.331 105.43 cv
239.331 105.43 li
cp
f
239.331 105.43 mo
239.331 103.707 237.933 102.309 236.21 102.309 cv
234.487 102.309 233.089 103.707 233.089 105.43 cv
233.089 107.153 234.487 108.551 236.21 108.551 cv
237.933 108.551 239.331 107.153 239.331 105.43 cv
@
1.836 lw
55.3643 57.1758 mo
69.3179 81.105 li
83.21 101.546 li
97.1025 103.565 li
111.056 104.667 li
124.948 104.79 li
138.841 105.218 li
152.733 105.279 li
166.687 105.34 li
180.579 105.401 li
194.472 105.462 li
208.364 105.462 li
222.318 105.462 li
236.21 105.462 li
.648646 1 .217533 .0788281 cmyk
@
52.7324 59.8071 mo
52.7324 54.4829 li
58.0566 54.4829 li
58.0566 59.8071 li
52.7324 59.8071 li
cp
f
.918 lw
52.7324 59.8071 mo
52.7324 54.4829 li
58.0566 54.4829 li
58.0566 59.8071 li
52.7324 59.8071 li
52.7324 59.8071 li
cp
@
66.625 83.7979 mo
66.625 78.4731 li
71.9492 78.4731 li
71.9492 83.7979 li
66.625 83.7979 li
cp
f
66.625 83.7979 mo
66.625 78.4731 li
71.9492 78.4731 li
71.9492 83.7979 li
66.625 83.7979 li
66.625 83.7979 li
cp
@
80.5786 104.177 mo
80.5786 98.853 li
85.8418 98.853 li
85.8418 104.177 li
80.5786 104.177 li
cp
f
80.5786 104.177 mo
80.5786 98.853 li
85.8418 98.853 li
85.8418 104.177 li
80.5786 104.177 li
80.5786 104.177 li
cp
@
94.4707 106.258 mo
94.4707 100.934 li
99.7954 100.934 li
99.7954 106.258 li
94.4707 106.258 li
cp
f
94.4707 106.258 mo
94.4707 100.934 li
99.7954 100.934 li
99.7954 106.258 li
94.4707 106.258 li
94.4707 106.258 li
cp
@
108.363 107.298 mo
108.363 102.035 li
113.688 102.035 li
113.688 107.298 li
108.363 107.298 li
cp
f
108.363 107.298 mo
108.363 102.035 li
113.688 102.035 li
113.688 107.298 li
108.363 107.298 li
108.363 107.298 li
cp
@
122.256 107.482 mo
122.256 102.158 li
127.58 102.158 li
127.58 107.482 li
122.256 107.482 li
cp
f
122.256 107.482 mo
122.256 102.158 li
127.58 102.158 li
127.58 107.482 li
122.256 107.482 li
122.256 107.482 li
cp
@
136.209 107.849 mo
136.209 102.525 li
141.473 102.525 li
141.473 107.849 li
136.209 107.849 li
cp
f
136.209 107.849 mo
136.209 102.525 li
141.473 102.525 li
141.473 107.849 li
136.209 107.849 li
136.209 107.849 li
cp
@
150.102 107.911 mo
150.102 102.647 li
155.426 102.647 li
155.426 107.911 li
150.102 107.911 li
cp
f
150.102 107.911 mo
150.102 102.647 li
155.426 102.647 li
155.426 107.911 li
150.102 107.911 li
150.102 107.911 li
cp
@
163.994 108.033 mo
163.994 102.708 li
169.318 102.708 li
169.318 108.033 li
163.994 108.033 li
cp
f
163.994 108.033 mo
163.994 102.708 li
169.318 102.708 li
169.318 108.033 li
163.994 108.033 li
163.994 108.033 li
cp
@
177.948 108.033 mo
177.948 102.77 li
183.211 102.77 li
183.211 108.033 li
177.948 108.033 li
cp
f
177.948 108.033 mo
177.948 102.77 li
183.211 102.77 li
183.211 108.033 li
177.948 108.033 li
177.948 108.033 li
cp
@
191.84 108.094 mo
191.84 102.77 li
197.165 102.77 li
197.165 108.094 li
191.84 108.094 li
cp
f
191.84 108.094 mo
191.84 102.77 li
197.165 102.77 li
197.165 108.094 li
191.84 108.094 li
191.84 108.094 li
cp
@
205.732 108.094 mo
205.732 102.77 li
211.057 102.77 li
211.057 108.094 li
205.732 108.094 li
cp
f
205.732 108.094 mo
205.732 102.77 li
211.057 102.77 li
211.057 108.094 li
205.732 108.094 li
205.732 108.094 li
cp
@
219.625 108.094 mo
219.625 102.831 li
224.949 102.831 li
224.949 108.094 li
219.625 108.094 li
cp
f
219.625 108.094 mo
219.625 102.831 li
224.949 102.831 li
224.949 108.094 li
219.625 108.094 li
219.625 108.094 li
cp
@
233.579 108.094 mo
233.579 102.831 li
238.842 102.831 li
238.842 108.094 li
233.579 108.094 li
cp
f
233.579 108.094 mo
233.579 102.831 li
238.842 102.831 li
238.842 108.094 li
233.579 108.094 li
233.579 108.094 li
cp
@
1.836 lw
68.0938 21.1289 mo
69.3179 39.2441 li
83.21 79.6362 li
97.1025 95.3032 li
111.056 100.261 li
124.948 102.892 li
138.841 103.933 li
152.733 104.606 li
166.687 104.912 li
180.579 105.095 li
194.472 105.218 li
208.364 105.279 li
222.318 105.34 li
236.21 105.401 li
0 .408423 1 0 cmyk
@
69.3179 36.123 mo
66.1963 39.2441 li
69.3179 42.3652 li
72.439 39.2441 li
69.3179 36.123 li
cp
f
.918 lw
69.3179 36.123 mo
66.1963 39.2441 li
69.3179 42.3652 li
72.439 39.2441 li
69.3179 36.123 li
69.3179 36.123 li
cp
@
83.21 76.5151 mo
80.0889 79.6362 li
83.21 82.7573 li
86.3311 79.6362 li
83.21 76.5151 li
cp
f
83.21 76.5151 mo
80.0889 79.6362 li
83.21 82.7573 li
86.3311 79.6362 li
83.21 76.5151 li
83.21 76.5151 li
cp
@
97.1025 92.1821 mo
93.9814 95.3032 li
97.1025 98.4243 li
100.224 95.3032 li
97.1025 92.1821 li
cp
f
97.1025 92.1821 mo
93.9814 95.3032 li
97.1025 98.4243 li
100.224 95.3032 li
97.1025 92.1821 li
97.1025 92.1821 li
cp
@
111.056 97.1392 mo
107.935 100.261 li
111.056 103.382 li
114.177 100.261 li
111.056 97.1392 li
cp
f
111.056 97.1392 mo
107.935 100.261 li
111.056 103.382 li
114.177 100.261 li
111.056 97.1392 li
111.056 97.1392 li
cp
@
124.948 99.771 mo
121.827 102.892 li
124.948 106.013 li
128.07 102.892 li
124.948 99.771 li
cp
f
124.948 99.771 mo
121.827 102.892 li
124.948 106.013 li
128.07 102.892 li
124.948 99.771 li
124.948 99.771 li
cp
@
138.841 100.812 mo
135.72 103.933 li
138.841 107.054 li
141.962 103.933 li
138.841 100.812 li
cp
f
138.841 100.812 mo
135.72 103.933 li
138.841 107.054 li
141.962 103.933 li
138.841 100.812 li
138.841 100.812 li
cp
@
152.733 101.484 mo
149.612 104.606 li
152.733 107.727 li
155.854 104.606 li
152.733 101.484 li
cp
f
152.733 101.484 mo
149.612 104.606 li
152.733 107.727 li
155.854 104.606 li
152.733 101.484 li
152.733 101.484 li
cp
@
166.687 101.791 mo
163.565 104.912 li
166.687 108.033 li
169.808 104.912 li
166.687 101.791 li
cp
f
166.687 101.791 mo
163.565 104.912 li
166.687 108.033 li
169.808 104.912 li
166.687 101.791 li
166.687 101.791 li
cp
@
180.579 101.974 mo
177.458 105.095 li
180.579 108.216 li
183.701 105.095 li
180.579 101.974 li
cp
f
180.579 101.974 mo
177.458 105.095 li
180.579 108.216 li
183.701 105.095 li
180.579 101.974 li
180.579 101.974 li
cp
@
194.472 102.097 mo
191.351 105.218 li
194.472 108.339 li
197.593 105.218 li
194.472 102.097 li
cp
f
194.472 102.097 mo
191.351 105.218 li
194.472 108.339 li
197.593 105.218 li
194.472 102.097 li
194.472 102.097 li
cp
@
208.364 102.158 mo
205.243 105.279 li
208.364 108.4 li
211.485 105.279 li
208.364 102.158 li
cp
f
208.364 102.158 mo
205.243 105.279 li
208.364 108.4 li
211.485 105.279 li
208.364 102.158 li
208.364 102.158 li
cp
@
222.318 102.219 mo
219.196 105.34 li
222.318 108.461 li
225.439 105.34 li
222.318 102.219 li
cp
f
222.318 102.219 mo
219.196 105.34 li
222.318 108.461 li
225.439 105.34 li
222.318 102.219 li
222.318 102.219 li
cp
@
236.21 102.28 mo
233.089 105.401 li
236.21 108.522 li
239.331 105.401 li
236.21 102.28 li
cp
f
236.21 102.28 mo
233.089 105.401 li
236.21 108.522 li
239.331 105.401 li
236.21 102.28 li
236.21 102.28 li
cp
@
1.836 lw
188.78 21.1289 mo
194.472 26.5757 li
208.364 37.1021 li
222.318 45.7314 li
236.21 52.8306 li
.892363 .791409 0 0 cmyk
@
194.472 22.9648 mo
191.351 28.3506 li
197.593 28.3506 li
194.472 22.9648 li
cp
f
.918 lw
194.472 22.9648 mo
191.351 28.3506 li
197.593 28.3506 li
194.472 22.9648 li
194.472 22.9648 li
cp
@
208.364 33.5522 mo
205.243 38.938 li
211.485 38.938 li
208.364 33.5522 li
cp
f
208.364 33.5522 mo
205.243 38.938 li
211.485 38.938 li
208.364 33.5522 li
208.364 33.5522 li
cp
@
222.318 42.1206 mo
219.196 47.5063 li
225.439 47.5063 li
222.318 42.1206 li
cp
f
222.318 42.1206 mo
219.196 47.5063 li
225.439 47.5063 li
222.318 42.1206 li
222.318 42.1206 li
cp
@
236.21 49.2197 mo
233.089 54.6055 li
239.331 54.6055 li
236.21 49.2197 li
cp
f
236.21 49.2197 mo
233.089 54.6055 li
239.331 54.6055 li
236.21 49.2197 li
236.21 49.2197 li
cp
@
1.836 lw
[9.18 5.508 ] 0 dsh
236.271 105.401 mo
52.5488 105.401 li
.43949 .376715 .225864 .00350958 cmyk
@
[1.836 5.508 ] 0 dsh
52.6099 143.59 mo
236.21 143.59 li
.75021 .679683 .670222 .90164 cmyk
@
[] 0 dsh
52.6099 143.59 mo
52.6099 21.1899 li
@
.918 lw
52.6099 45.6699 mo
58.73 45.6699 li
52.6099 82.3901 mo
58.73 82.3901 li
52.6099 119.11 mo
58.73 119.11 li
52.6099 27.3101 mo
55.6699 27.3101 li
52.6099 64.0303 mo
55.6699 64.0303 li
52.6099 100.75 mo
55.6699 100.75 li
52.6099 137.47 mo
55.6699 137.47 li
@
%ADOBeginSubsetFont: Times-Roman Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Times-Roman def/FontInfo 5 dict dup begin/ItalicAngle 0 def/OrigFontType /TrueType defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 45 /hyphen putdup 46 /period putdup 52 /four putdup 56 /eight putdef/FontBBox {-203 -428 1700 1271} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings5 dict dup begin/.notdef <1C60D8A8C9B6079F6CEA24BDEB0F5E4D18DF0CD7E2A11E9D72D963E3987D5E4E6C9FCD> |-/hyphen <1C60D8A8C9B81F2C7FA8F2666424EE62590A3687533A> |-/period <1C60D8A8C9B8707CDCE5666C9B3EABE1C8F3B5685DC89284E5BE559D084487449BF37D1D86EF1322476306E241C4EF3BA9B7322496F4AC15DB69BEC6340D464440EA95046229> |-/four <1C60D8A8C9B7A73DB992534E0CF1B84939C969D2AC65F1AE73EE883487A67D0ECB26822C5FF826C828AC8594DE5FF3D9E5AE6F090B> |-/eight <1C60D8A8C9B7A73DB9AA6386F0D433AA59FB601CE68D9D6220D80F865EFA1568339E25269162989F3B16CF5E1B85465E9B09AD3E1F38EB0BC3CC5B97FD7D595D378E5AF532DAC1C0173C6C74DAC1A5EFEB2094038777E094111D458CECDBEE2BFAFA1B194747D5AC182EDAECA7759C2CF7DA7B573AFBC7EB901C25328CA8529A5AF9870597DA9D6CE71ED45E3423137009ACC2E00FA606E5775C8BEB1D188095A69B5C3B51980741130E91409210303836D6B9BCD44F7FE0CC1ED555E839C2D5D70041FF279A3E977285D9F41DC64AB105D99B2CC098F9CEE3C23260EF9612DAD441A57B770C0516F587622E5D85261682E95C452BF079> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/HQKXDQ+Times-Roman /Times-Roman findfont ct_VMDictPut/HQKXDQ+Times-Roman*1 [45{/.notdef}rp /hyphen /period 5{/.notdef}rp /four 3{/.notdef}rp /eight 199{/.notdef}rp]HQKXDQ+Times-Roman nfHQKXDQ+Times-Roman*1 [17.136 0 0 -17.136 0 0 ]msf19.8647 124.742 mo(-8.4)sh%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginHQKXDQ+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/one <1C60D8A8C9B7A73DB999B05B43470AE76323D53E9C54AE29C0ACC4151BDD30C8F3109BFE7DACF9BA339B31B8666788A01E1F3860FDA3F22312D6A6628C8CCA55270976BF3BB8008DD87D719627657135E81F194E374733A743BBCD543132801A49C4BA675F59C41D> |-systemdict /gcheck known {setglobal} if end {end} ifendHQKXDQ+Times-Roman /Encoding getdup 49 /one putpop%ADOEndSubsetFont
/HQKXDQ+Times-Roman*1 [45{/.notdef}rp /hyphen /period 2{/.notdef}rp /one 2{/.notdef}rp /four 3{/.notdef}rp /eight 199{/.notdef}rp]HQKXDQ+Times-Roman nfHQKXDQ+Times-Roman*1 [17.136 0 0 -17.136 0 0 ]msf21.271 88.0229 mo(-8.1)sh%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginHQKXDQ+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/seven <1C60D8A8C9B7A73D94A9F40BC631635D93782351ED8A5F0B041154B50ADFD67B52AFA0970AEE10CFF4587FA64B7C1AB4D8B074E00A1BB2BDDE2ECD9CC66A> |-systemdict /gcheck known {setglobal} if end {end} ifendHQKXDQ+Times-Roman /Encoding getdup 55 /seven putpop%ADOEndSubsetFont
/HQKXDQ+Times-Roman*1 [45{/.notdef}rp /hyphen /period 2{/.notdef}rp /one 2{/.notdef}rp /four 2{/.notdef}rp /seven /eight 199{/.notdef}rp]HQKXDQ+Times-Roman nfHQKXDQ+Times-Roman*1 [17.136 0 0 -17.136 0 0 ]msf20.3413 51.2964 mo(-7.8)sh80.1499 284.35 mo
80.1499 371.927 li
179.478 371.927 li
179.478 284.35 li
80.1499 284.35 li
cp
0 0 0 0 cmyk
f
1.836 lw
80.1499 284.35 mo
80.1499 371.927 li
179.478 371.927 li
179.478 284.35 li
80.1499 284.35 li
80.1499 284.35 li
cp
.75021 .679683 .670222 .90164 cmyk
@
%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginHQKXDQ+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/H <1C60D8A8C9B6079F0EF96F2A5C5AAE267BD7D517941DACD3EDB33730529DE1B8FE6AD271A2288CC17FF03DA9EA5FAD75E03DF6B92565A2CB4A8539BAEB038F1CE0E83E584DC2B39385E39140D6E26B203655808DF8081831B0F83E078DCB044F2F1E9AE89A394511D343E89D9D3F55592CD30385C4D9E63CC850D47412A8E8690C4C593E74EC9DBC1CB8EAB8742657985762E0C390ED4A33098B5BA3348CBFA94014888F550AA1D8AF239EC75344> |-/a <1C60D8A8C9B77FE2CEADADAD35C681D96377E0B82CC8ACDB5762353EDBADFFACD451A553C5C39302A9F1D177F76B983509B429688ADF52AFA30F8E4A0B23F2282503B97D206C7C183FDE8BFD6ACD2BE6A3B9069791DF8E2CF592523922EFD64768CD99A1F5F1400DB305C4171EAA77202618276E378016C7BA0833F29752C2A461C11A88BC4E527507EEDA9C848EEAD89D80551320178A864EFC8B3562DEDC4F695E8824160B87CA7F395997B47C0C71BBFE9F871E4F5046857D22F807C04061C73B2C0BBB7B44E0200581C40A3AC55C8229AC23B2FBE040B0F089F70BE38746A5E0285A22E4825D9ECD39D6C15171D3EBB391B1AC132DA188B28262B67971885F8F1CB6195A6A7B0FFC> |-/r <1C60D8A8C9B81F2C5DE210A78B7176966966FB4A2E70036BAA4A8956D597954FF33C419645546BDDA5A1C075630C88C9E9E0B6B2EB6B2FC3FF0331B1902616E9791F7398738E2F17D5E54890C7A065EB2198D4708DA7213806F12669F67678CAD7B30B1926E6F30FE45B0DAB7BE403E568FB7F28C7F3631BA5B608F502310C8C5FF767FCF95E7EC0C2EC9F2F173FF41F0C7459D2154243B15CA53A73779F93E107279F803A71F8179756E718854D0BA7BCB1168643F72763D9FF> |-systemdict /gcheck known {setglobal} if end {end} ifendHQKXDQ+Times-Roman /Encoding getdup 72 /H putdup 97 /a putdup 114 /r putpop%ADOEndSubsetFont
/HQKXDQ+Times-Roman*1 [45{/.notdef}rp /hyphen /period 2{/.notdef}rp /one 2{/.notdef}rp /four 2{/.notdef}rp /seven /eight 15{/.notdef}rp /H 24{/.notdef}rp /a 16{/.notdef}rp /r 141{/.notdef}rp]HQKXDQ+Times-Roman nfHQKXDQ+Times-Roman*1 [13.7088 0 0 -13.7088 0 0 ]msf126.607 299.828 mo(Har)[9.8999 6.08496 0 ]xsh%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginHQKXDQ+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/d <1C60D8A8C9B7A73DB9A50E659DB775F0445838B52D4AD3E4EA55A04AF1E66EB3E22000826F80E46C696D55B3FE9B16954A0FDDDCF9A25B9DBBDA281BC3743A32DF4E962666420F0E46505362A6A9911C122E7E5925E4098A8375B64204275CB8C487667CDFFB7001810B24CEFAA2B80CAD8B87A3E1168C62B165D1D52436E632F3BD5E44BCAD1D3E08911E568C3ADE5A148D88E7C75A5F95F7018097A855F01058BEA6CAD1F5CFBA99049D028F229C0A374E791F4E6F00190E23FDB14CB2BF5215AC36154229670311F93C06828FE397A9700C53BE1A07DF9AE66151E66A3E4BE4B17FDA8F9875D90067B1D7D9914E47FA1ED2D057561417FDB2931E47F3C120E5878FF702> |-systemdict /gcheck known {setglobal} if end {end} ifendHQKXDQ+Times-Roman /Encoding getdup 100 /d putpop%ADOEndSubsetFont
/HQKXDQ+Times-Roman*1 [45{/.notdef}rp /hyphen /period 2{/.notdef}rp /one 2{/.notdef}rp /four 2{/.notdef}rp /seven /eight 15{/.notdef}rp /H 24{/.notdef}rp /a 2{/.notdef}rp /d 13{/.notdef}rp /r 141{/.notdef}rp]HQKXDQ+Times-Roman nfHQKXDQ+Times-Roman*1 [13.7088 0 0 -13.7088 0 0 ]msf147.146 299.828 mo(d)sh89.8809 295.244 mo
114.361 295.244 li
.659174 .184604 1 .0302739 cmyk
@
92.9312 295.27 mo
92.9312 293.547 91.5327 292.149 89.8101 292.149 cv
88.0874 292.149 86.689 293.547 86.689 295.27 cv
86.689 296.993 88.0874 298.391 89.8101 298.391 cv
91.5327 298.391 92.9312 296.993 92.9312 295.27 cv
92.9312 295.27 li
cp
f
.918 lw
92.9312 295.27 mo
92.9312 293.547 91.5327 292.149 89.8101 292.149 cv
88.0874 292.149 86.689 293.547 86.689 295.27 cv
86.689 296.993 88.0874 298.391 89.8101 298.391 cv
91.5327 298.391 92.9312 296.993 92.9312 295.27 cv
@
117.411 295.27 mo
117.411 293.547 116.013 292.149 114.29 292.149 cv
112.567 292.149 111.169 293.547 111.169 295.27 cv
111.169 296.993 112.567 298.391 114.29 298.391 cv
116.013 298.391 117.411 296.993 117.411 295.27 cv
117.411 295.27 li
cp
f
117.411 295.27 mo
117.411 293.547 116.013 292.149 114.29 292.149 cv
112.567 292.149 111.169 293.547 111.169 295.27 cv
111.169 296.993 112.567 298.391 114.29 298.391 cv
116.013 298.391 117.411 296.993 117.411 295.27 cv
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginHQKXDQ+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/P <1C60D8A8C9B7EF322434E1F3A572E6E1BC6C6F1C68992768060DAE1B4C7B427E45BC3A4679807BEAE7F6D9AF630A1C22FD1CE21BCE2286818A82BD939AF289B76A1DB91C5AA9ECF164AD5A7EEB0C2FB6433D2C27E4C9DD9951F32681C1E23142F87FE0BB632961DBF09B1BCC2DBDF28AA2A576366886A338146A6EE45FE7539E8D3254D439F46CBA62C74FD6727A2572BFC88846FED7BD6467448C15F8CC8DCFA5340A99B196EA105B822649C918B21A83378A8D> |-/S <1C60D8A8C9B7EF3269E388B8847AC1DF83DCA2CC95EEDA1D26C48C8B4394FBFD17BA4272844B3F99D23FAEC50A7EA6C72D284BFF0551BD0E244EEA994D67C8032579E70EC4F728A61739D5AD8DBB8B4129DD5B722422FAFC8BDE88E5D08E42CFE364B4791DA2E591F9FB2CA99F1F124E961FBD42E8AB878E8BE3BAAF755A9CE4977D5E9A7ECCF71EBFA0B61D69877A9EC87A882973E75CA7477FEDEE90C5AE4E9BEF9C7EDA4EBF0E4CDE6ECFE92BCEC5C04A7E39072DCB2A7B402F52671B6022D3586A809E7DAE9919FE8815CB8D620AA8EC995DA478361CE758058A7DFF39FC38C2B0C0AAE9> |-systemdict /gcheck known {setglobal} if end {end} ifendHQKXDQ+Times-Roman /Encoding getdup 80 /P putdup 83 /S putpop%ADOEndSubsetFont
/HQKXDQ+Times-Roman*1 [45{/.notdef}rp /hyphen /period 2{/.notdef}rp /one 2{/.notdef}rp /four 2{/.notdef}rp /seven /eight 15{/.notdef}rp /H 7{/.notdef}rp /P 2{/.notdef}rp /S 13{/.notdef}rp /a 2{/.notdef}rp /d 13{/.notdef}rp /r 141{/.notdef}rp]HQKXDQ+Times-Roman nfHQKXDQ+Times-Roman*1 [13.7088 0 0 -13.7088 0 0 ]msf126.607 315.57 mo(SP)[7.62402 0 ]xsh1.836 lw
89.8809 310.972 mo
114.361 310.972 li
.648646 1 .217533 .0788281 cmyk
@
87.188 313.665 mo
87.188 308.34 li
92.5127 308.34 li
92.5127 313.665 li
87.188 313.665 li
cp
f
.918 lw
87.188 313.665 mo
87.188 308.34 li
92.5127 308.34 li
92.5127 313.665 li
87.188 313.665 li
87.188 313.665 li
cp
@
111.668 313.665 mo
111.668 308.34 li
116.993 308.34 li
116.993 313.665 li
111.668 313.665 li
cp
f
111.668 313.665 mo
111.668 308.34 li
116.993 308.34 li
116.993 313.665 li
111.668 313.665 li
111.668 313.665 li
cp
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginHQKXDQ+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/F <1C60D8A8C9B7EF324A037549B31AFC4B60697A046B7067B75CFC351CCB1964720E6BC82951E2A5BB7474D974EA2A52D73602B39FD7C31C63C801BEBD2FDE9110733E153A3F2045A94EC3EBE16167D0C83075CBD838D88E58985D5046B18ACE7B749F64816A90969534E595942FCC6261125D575A90C2E501921FC7F49304D66B5BA92B55B6DFDA784E2B9E0FAA8068B2566A1AD700B69E> |-/G <1C60D8A8C9B6079F6D8F9589F03C57E9BABC7BD7AF44F292C36BF054D0385D2FC11ADF26CF26FB1CA20D732AF012AB53727DD5F46B605D18E4B017E662A97B61E593E1649BDE06DC0BE81975EB02C63DB9CC50D324954CB92F05C09AE46BA2C2549D26E915E5BB03DE231AAD77F23323077408677E4049C607D64929B04AF386D58F981E4541C0982A23929E9B861E50C60AAFF01CE1D107C5993270B58A2C29D6FD48A1F36C5902C78C206F66DEBC5079EDB36633E15221CDFB88A58DA8F921FAE2BECE6FC3EDA0F38409251C> |-systemdict /gcheck known {setglobal} if end {end} ifendHQKXDQ+Times-Roman /Encoding getdup 70 /F putdup 71 /G putpop%ADOEndSubsetFont
/HQKXDQ+Times-Roman*1 [45{/.notdef}rp /hyphen /period 2{/.notdef}rp /one 2{/.notdef}rp /four 2{/.notdef}rp /seven /eight 13{/.notdef}rp /F /G /H 7{/.notdef}rp /P 2{/.notdef}rp /S 13{/.notdef}rp /a 2{/.notdef}rp /d 13{/.notdef}rp /r 141{/.notdef}rp]HQKXDQ+Times-Roman nfHQKXDQ+Times-Roman*1 [13.7088 0 0 -13.7088 0 0 ]msf126.607 331.289 mo(GSF)[9.8999 7.62451 0 ]xsh1.836 lw
89.8809 326.701 mo
114.361 326.701 li
0 .408423 1 0 cmyk
@
89.8809 323.58 mo
86.7598 326.701 li
89.8809 329.822 li
93.002 326.701 li
89.8809 323.58 li
cp
f
.918 lw
89.8809 323.58 mo
86.7598 326.701 li
89.8809 329.822 li
93.002 326.701 li
89.8809 323.58 li
89.8809 323.58 li
cp
@
114.361 323.58 mo
111.24 326.701 li
114.361 329.822 li
117.482 326.701 li
114.361 323.58 li
cp
f
114.361 323.58 mo
111.24 326.701 li
114.361 329.822 li
117.482 326.701 li
114.361 323.58 li
114.361 323.58 li
cp
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginHQKXDQ+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/T <1C60D8A8C9B7D8BE78D1A55798F2D8A97091B992B92C1EAFCF350F806FED434693C4DF3F67D8893A99EF75622FE8BA13F907674F882E140E60489CEAA2BB6107D8446BF6FC3EF0730B190972991631B35D792933869F4716BD279183A943DE125368> |-systemdict /gcheck known {setglobal} if end {end} ifendHQKXDQ+Times-Roman /Encoding getdup 84 /T putpop%ADOEndSubsetFont
/HQKXDQ+Times-Roman*1 [45{/.notdef}rp /hyphen /period 2{/.notdef}rp /one 2{/.notdef}rp /four 2{/.notdef}rp /seven /eight 13{/.notdef}rp /F /G /H 7{/.notdef}rp /P 2{/.notdef}rp /S /T 12{/.notdef}rp /a 2{/.notdef}rp /d 13{/.notdef}rp /r 141{/.notdef}rp]HQKXDQ+Times-Roman nfHQKXDQ+Times-Roman*1 [13.7088 0 0 -13.7088 0 0 ]msf126.607 347.015 mo(TSF)sh1.836 lw
89.8809 342.429 mo
114.361 342.429 li
.892363 .791409 0 0 cmyk
@
89.8809 338.818 mo
86.7598 344.204 li
93.002 344.204 li
89.8809 338.818 li
cp
f
.918 lw
89.8809 338.818 mo
86.7598 344.204 li
93.002 344.204 li
89.8809 338.818 li
89.8809 338.818 li
cp
@
114.361 338.818 mo
111.24 344.204 li
117.482 344.204 li
114.361 338.818 li
cp
f
114.361 338.818 mo
111.24 344.204 li
117.482 344.204 li
114.361 338.818 li
114.361 338.818 li
cp
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginHQKXDQ+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/A <1C60D8A8C9B6079F62C6D57D72D2FDC86536E7494191A9E3EF5795EA6903BA675EF967E5503E0F9461713975E8624582E6F3E1510A5F9E0950EED4A1914451FF9474C0941D0A3186503138F0BEB96FF6EFEC76335DF56A27FA8C5F2C635C83D312D7641D3D9117C2751F2FA7BAFB4320347730B8D3EA674CFE35F91CDC44A8C704B1ABB766598584B2E79C7046CDCE3C> |-/c <1C60D8A8C9B77FE2CE939B120B8C530BA36A1D378ED7528AD7B7A10AC71BEF208D8B385B11077F2A13A81C13DFBF440D42A243A800735CB8F4DC3746EB4039E43E77D867A7AA457E639AE6CCAFB17D4572C0E8FCF8662A95CB9A94DBFA339E8C89716E4D6EB7EE669FEA0FD73F1B364D57426E512088C7E414CE09DC0040B747838B6828750C7FA69A58B3FBD05411AA3233E35DCBE1E5C8A3302EE901E300C17D> |-/i <1C60D8A8C9B854D0DE8FF03001C7DDCDF6D3A68A6B597D794E646C678EE584A1666CB56CA9FE75811CEA2087E2C341C7E1E2BD6147E5E1B64DFF133BC2DEFF475DA598F822B2BE3A9DBFD7105A3889BD250D9F71DE0C91B5EA539C526B6489E8D9E79757A61E2352A71C3AC0EEEBBBD4B096AC9707E6604D45F8B4EB690BCE5B5F037666EE3D29DC12074786C8164E88903799783957677A476A9FAD9CB291219231A21175873BB2> |-/l <1C60D8A8C9B854D09C28E93890ED677F310D1E32AA544EA0617CF81480930FF09D96FFEC0D2D74BC923E8CC3789EA117FEE8A516539FF915E22C6A549B8D0FA459312C0739BEBB3BD2A37FAA8365907BF4200CFE09B70B39C1ECB8C3A6085FE4D765368B> |-/n <1C60D8A8C9B7A73DD30B80525D5D675DA4D0977F59D93029CA5D14D1D6563E1C35EFF4A3EA44981DFE04749A107A1C9F060A076451BF62C02FE2E474DD187526384A6F42E0021FEFF54C8346ADE1D28DE56A36764BAF6B66BF7DB43854DD1D363EB418A371ED43BA933A460B2917DEA26BF87012AAF7B195AB0B8FD490EC07235D6699814C77751D4CEE45D35DBD8B1597438545A60B7623CE491483A014FEEE65ED4FEBDF80A721F21A9D4DE075A36D58250AE2AA345A9C5F7B6CB7C99BA896DCEAAA4342B927737814> |-/t <1C60D8A8C9B854D0F41C7D11C14207BE1C0BA04724483030493967288AC8D5095C0BB34E8B56A5C53BD1B7A25A11F231F6182B9300CAF4CFD46C1EFFF4B0E38766187499A1973473DBAE4D98649DB8F7DCCE25964559B9BA93E6803E419984755899DE68C87EC2F530AC81AF61BCF42839E59E8A14B5E2DDDE3A4AFB0D7D86FA4DD21DF5669B371465EBE7C64497A6C50C0C5658D7> |-/y <1C60D8A8C9B7A73DD7AE17C40DA1260850D9F1C1D838B05DE6D1C5E3525D760EC0F9C40E6E054A15300E1CFEA7658656E5959BEEBF8D7B310500A7C32D54B97E8EBA7A462E0D912C93DF7DD121CE5E98FD002FEC6C00A36A4500E723013E648B347AC17315A08E4119F641912491BA6BE2F2706D7F9D2DC3E6FEAEDA163718714CB34E9D632ABB1A80A0345199AC327E696B5455EAFD54AAF8385493F4CC1030744C32613B475CE1C237259443B8A2C3D0EEED238C8DF00383FA139723827984B4D9C56DF7FB2D76E14928C6A907031CC71BEEB8328C3808> |-systemdict /gcheck known {setglobal} if end {end} ifendHQKXDQ+Times-Roman /Encoding getdup 65 /A putdup 99 /c putdup 105 /i putdup 108 /l putdup 110 /n putdup 116 /t putdup 121 /y putpop%ADOEndSubsetFont
/HQKXDQ+Times-Roman*1 [45{/.notdef}rp /hyphen /period 2{/.notdef}rp /one 2{/.notdef}rp /four 2{/.notdef}rp /seven /eight 8{/.notdef}rp /A 4{/.notdef}rp /F /G /H 7{/.notdef}rp /P 2{/.notdef}rp /S /T 12{/.notdef}rp /a /.notdef /c /d 4{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n 3{/.notdef}rp /r /.notdef /t 4{/.notdef}rp /y 134{/.notdef}rp]HQKXDQ+Times-Roman nfHQKXDQ+Times-Roman*1 [13.7088 0 0 -13.7088 0 0 ]msf126.607 362.929 mo(Anal)sh153.255 362.929 mo(ytic)[6.854 3.80908 3.80859 0 ]xsh1.836 lw
[9.18 5.508 ] 0 dsh
89.8809 359.565 mo
114.361 359.565 li
.43949 .376715 .225864 .00350958 cmyk
@
[] 0 dsh
269.564 132.635 mo
283.518 71.1904 li
297.41 107.36 li
311.302 103.015 li
325.256 109.073 li
339.149 106.197 li
353.041 109.134 li
366.933 108.033 li
380.887 109.563 li
394.779 108.767 li
408.671 109.318 li
422.564 108.951 li
436.518 108.767 li
450.41 108.339 li
.659174 .184604 1 .0302739 cmyk
@
272.691 132.55 mo
272.691 130.827 271.293 129.429 269.57 129.429 cv
267.847 129.429 266.449 130.827 266.449 132.55 cv
266.449 134.273 267.847 135.671 269.57 135.671 cv
271.293 135.671 272.691 134.273 272.691 132.55 cv
272.691 132.55 li
cp
f
.918 lw
272.691 132.55 mo
272.691 130.827 271.293 129.429 269.57 129.429 cv
267.847 129.429 266.449 130.827 266.449 132.55 cv
266.449 134.273 267.847 135.671 269.57 135.671 cv
271.293 135.671 272.691 134.273 272.691 132.55 cv
@
286.611 71.1099 mo
286.611 69.3872 285.213 67.9888 283.49 67.9888 cv
281.767 67.9888 280.369 69.3872 280.369 71.1099 cv
280.369 72.833 281.767 74.2314 283.49 74.2314 cv
285.213 74.2314 286.611 72.833 286.611 71.1099 cv
286.611 71.1099 li
cp
f
286.611 71.1099 mo
286.611 69.3872 285.213 67.9888 283.49 67.9888 cv
281.767 67.9888 280.369 69.3872 280.369 71.1099 cv
280.369 72.833 281.767 74.2314 283.49 74.2314 cv
285.213 74.2314 286.611 72.833 286.611 71.1099 cv
@
300.531 107.35 mo
300.531 105.627 299.133 104.229 297.41 104.229 cv
295.687 104.229 294.289 105.627 294.289 107.35 cv
294.289 109.073 295.687 110.471 297.41 110.471 cv
299.133 110.471 300.531 109.073 300.531 107.35 cv
300.531 107.35 li
cp
f
300.531 107.35 mo
300.531 105.627 299.133 104.229 297.41 104.229 cv
295.687 104.229 294.289 105.627 294.289 107.35 cv
294.289 109.073 295.687 110.471 297.41 110.471 cv
299.133 110.471 300.531 109.073 300.531 107.35 cv
@
314.451 103.03 mo
314.451 101.307 313.053 99.9087 311.33 99.9087 cv
309.607 99.9087 308.209 101.307 308.209 103.03 cv
308.209 104.753 309.607 106.151 311.33 106.151 cv
313.053 106.151 314.451 104.753 314.451 103.03 cv
314.451 103.03 li
cp
f
314.451 103.03 mo
314.451 101.307 313.053 99.9087 311.33 99.9087 cv
309.607 99.9087 308.209 101.307 308.209 103.03 cv
308.209 104.753 309.607 106.151 311.33 106.151 cv
313.053 106.151 314.451 104.753 314.451 103.03 cv
@
328.371 109.03 mo
328.371 107.307 326.973 105.909 325.25 105.909 cv
323.527 105.909 322.129 107.307 322.129 109.03 cv
322.129 110.753 323.527 112.151 325.25 112.151 cv
326.973 112.151 328.371 110.753 328.371 109.03 cv
328.371 109.03 li
cp
f
328.371 109.03 mo
328.371 107.307 326.973 105.909 325.25 105.909 cv
323.527 105.909 322.129 107.307 322.129 109.03 cv
322.129 110.753 323.527 112.151 325.25 112.151 cv
326.973 112.151 328.371 110.753 328.371 109.03 cv
@
342.292 106.15 mo
342.292 104.427 340.893 103.029 339.17 103.029 cv
337.447 103.029 336.049 104.427 336.049 106.15 cv
336.049 107.873 337.447 109.271 339.17 109.271 cv
340.893 109.271 342.292 107.873 342.292 106.15 cv
342.292 106.15 li
cp
f
342.292 106.15 mo
342.292 104.427 340.893 103.029 339.17 103.029 cv
337.447 103.029 336.049 104.427 336.049 106.15 cv
336.049 107.873 337.447 109.271 339.17 109.271 cv
340.893 109.271 342.292 107.873 342.292 106.15 cv
@
356.211 109.03 mo
356.211 107.307 354.813 105.909 353.09 105.909 cv
351.367 105.909 349.969 107.307 349.969 109.03 cv
349.969 110.753 351.367 112.151 353.09 112.151 cv
354.813 112.151 356.211 110.753 356.211 109.03 cv
356.211 109.03 li
cp
f
356.211 109.03 mo
356.211 107.307 354.813 105.909 353.09 105.909 cv
351.367 105.909 349.969 107.307 349.969 109.03 cv
349.969 110.753 351.367 112.151 353.09 112.151 cv
354.813 112.151 356.211 110.753 356.211 109.03 cv
@
370.131 108.07 mo
370.131 106.347 368.733 104.949 367.01 104.949 cv
365.288 104.949 363.889 106.347 363.889 108.07 cv
363.889 109.793 365.288 111.191 367.01 111.191 cv
368.733 111.191 370.131 109.793 370.131 108.07 cv
370.131 108.07 li
cp
f
370.131 108.07 mo
370.131 106.347 368.733 104.949 367.01 104.949 cv
365.288 104.949 363.889 106.347 363.889 108.07 cv
363.889 109.793 365.288 111.191 367.01 111.191 cv
368.733 111.191 370.131 109.793 370.131 108.07 cv
@
384.051 109.51 mo
384.051 107.787 382.653 106.389 380.93 106.389 cv
379.208 106.389 377.809 107.787 377.809 109.51 cv
377.809 111.233 379.208 112.631 380.93 112.631 cv
382.653 112.631 384.051 111.233 384.051 109.51 cv
384.051 109.51 li
cp
f
384.051 109.51 mo
384.051 107.787 382.653 106.389 380.93 106.389 cv
379.208 106.389 377.809 107.787 377.809 109.51 cv
377.809 111.233 379.208 112.631 380.93 112.631 cv
382.653 112.631 384.051 111.233 384.051 109.51 cv
@
397.971 108.79 mo
397.971 107.067 396.573 105.669 394.85 105.669 cv
393.127 105.669 391.729 107.067 391.729 108.79 cv
391.729 110.513 393.127 111.911 394.85 111.911 cv
396.573 111.911 397.971 110.513 397.971 108.79 cv
397.971 108.79 li
cp
f
397.971 108.79 mo
397.971 107.067 396.573 105.669 394.85 105.669 cv
393.127 105.669 391.729 107.067 391.729 108.79 cv
391.729 110.513 393.127 111.911 394.85 111.911 cv
396.573 111.911 397.971 110.513 397.971 108.79 cv
@
411.891 109.27 mo
411.891 107.547 410.493 106.149 408.77 106.149 cv
407.047 106.149 405.649 107.547 405.649 109.27 cv
405.649 110.993 407.047 112.391 408.77 112.391 cv
410.493 112.391 411.891 110.993 411.891 109.27 cv
411.891 109.27 li
cp
f
411.891 109.27 mo
411.891 107.547 410.493 106.149 408.77 106.149 cv
407.047 106.149 405.649 107.547 405.649 109.27 cv
405.649 110.993 407.047 112.391 408.77 112.391 cv
410.493 112.391 411.891 110.993 411.891 109.27 cv
@
425.572 109.03 mo
425.572 107.307 424.173 105.909 422.45 105.909 cv
420.727 105.909 419.329 107.307 419.329 109.03 cv
419.329 110.753 420.727 112.151 422.45 112.151 cv
424.173 112.151 425.572 110.753 425.572 109.03 cv
425.572 109.03 li
cp
f
425.572 109.03 mo
425.572 107.307 424.173 105.909 422.45 105.909 cv
420.727 105.909 419.329 107.307 419.329 109.03 cv
419.329 110.753 420.727 112.151 422.45 112.151 cv
424.173 112.151 425.572 110.753 425.572 109.03 cv
@
439.731 108.79 mo
439.731 107.067 438.333 105.669 436.61 105.669 cv
434.887 105.669 433.489 107.067 433.489 108.79 cv
433.489 110.513 434.887 111.911 436.61 111.911 cv
438.333 111.911 439.731 110.513 439.731 108.79 cv
439.731 108.79 li
cp
f
439.731 108.79 mo
439.731 107.067 438.333 105.669 436.61 105.669 cv
434.887 105.669 433.489 107.067 433.489 108.79 cv
433.489 110.513 434.887 111.911 436.61 111.911 cv
438.333 111.911 439.731 110.513 439.731 108.79 cv
@
453.531 108.31 mo
453.531 106.587 452.133 105.189 450.41 105.189 cv
448.687 105.189 447.289 106.587 447.289 108.31 cv
447.289 110.033 448.687 111.431 450.41 111.431 cv
452.133 111.431 453.531 110.033 453.531 108.31 cv
453.531 108.31 li
cp
f
453.531 108.31 mo
453.531 106.587 452.133 105.189 450.41 105.189 cv
448.687 105.189 447.289 106.587 447.289 108.31 cv
447.289 110.033 448.687 111.431 450.41 111.431 cv
452.133 111.431 453.531 110.033 453.531 108.31 cv
@
1.836 lw
269.564 57.1758 mo
283.518 81.166 li
297.41 101.668 li
311.302 103.933 li
325.256 105.279 li
339.149 105.891 li
353.041 106.809 li
366.933 107.543 li
380.887 108.339 li
394.779 109.073 li
408.671 109.685 li
422.564 110.114 li
436.518 110.419 li
450.41 110.481 li
.648646 1 .217533 .0788281 cmyk
@
266.933 59.8071 mo
266.933 54.4829 li
272.257 54.4829 li
272.257 59.8071 li
266.933 59.8071 li
cp
f
.918 lw
266.933 59.8071 mo
266.933 54.4829 li
272.257 54.4829 li
272.257 59.8071 li
266.933 59.8071 li
266.933 59.8071 li
cp
@
280.825 83.7979 mo
280.825 78.5347 li
286.149 78.5347 li
286.149 83.7979 li
280.825 83.7979 li
cp
f
280.825 83.7979 mo
280.825 78.5347 li
286.149 78.5347 li
286.149 83.7979 li
280.825 83.7979 li
280.825 83.7979 li
cp
@
294.778 104.3 mo
294.778 98.9751 li
300.042 98.9751 li
300.042 104.3 li
294.778 104.3 li
cp
f
294.778 104.3 mo
294.778 98.9751 li
300.042 98.9751 li
300.042 104.3 li
294.778 104.3 li
294.778 104.3 li
cp
@
308.671 106.564 mo
308.671 101.24 li
313.995 101.24 li
313.995 106.564 li
308.671 106.564 li
cp
f
308.671 106.564 mo
308.671 101.24 li
313.995 101.24 li
313.995 106.564 li
308.671 106.564 li
308.671 106.564 li
cp
@
322.563 107.972 mo
322.563 102.647 li
327.888 102.647 li
327.888 107.972 li
322.563 107.972 li
cp
f
322.563 107.972 mo
322.563 102.647 li
327.888 102.647 li
327.888 107.972 li
322.563 107.972 li
322.563 107.972 li
cp
@
336.456 108.522 mo
336.456 103.198 li
341.78 103.198 li
341.78 108.522 li
336.456 108.522 li
cp
f
336.456 108.522 mo
336.456 103.198 li
341.78 103.198 li
341.78 108.522 li
336.456 108.522 li
336.456 108.522 li
cp
@
350.41 109.44 mo
350.41 104.177 li
355.672 104.177 li
355.672 109.44 li
350.41 109.44 li
cp
f
350.41 109.44 mo
350.41 104.177 li
355.672 104.177 li
355.672 109.44 li
350.41 109.44 li
350.41 109.44 li
cp
@
364.301 110.175 mo
364.301 104.912 li
369.626 104.912 li
369.626 110.175 li
364.301 110.175 li
cp
f
364.301 110.175 mo
364.301 104.912 li
369.626 104.912 li
369.626 110.175 li
364.301 110.175 li
364.301 110.175 li
cp
@
378.194 110.971 mo
378.194 105.646 li
383.518 105.646 li
383.518 110.971 li
378.194 110.971 li
cp
f
378.194 110.971 mo
378.194 105.646 li
383.518 105.646 li
383.518 110.971 li
378.194 110.971 li
378.194 110.971 li
cp
@
392.148 111.705 mo
392.148 106.38 li
397.411 106.38 li
397.411 111.705 li
392.148 111.705 li
cp
f
392.148 111.705 mo
392.148 106.38 li
397.411 106.38 li
397.411 111.705 li
392.148 111.705 li
392.148 111.705 li
cp
@
406.041 112.317 mo
406.041 106.993 li
411.365 106.993 li
411.365 112.317 li
406.041 112.317 li
cp
f
406.041 112.317 mo
406.041 106.993 li
411.365 106.993 li
411.365 112.317 li
406.041 112.317 li
406.041 112.317 li
cp
@
419.932 112.745 mo
419.932 107.482 li
425.257 107.482 li
425.257 112.745 li
419.932 112.745 li
cp
f
419.932 112.745 mo
419.932 107.482 li
425.257 107.482 li
425.257 112.745 li
419.932 112.745 li
419.932 112.745 li
cp
@
433.825 113.051 mo
433.825 107.727 li
439.149 107.727 li
439.149 113.051 li
433.825 113.051 li
cp
f
433.825 113.051 mo
433.825 107.727 li
439.149 107.727 li
439.149 113.051 li
433.825 113.051 li
433.825 113.051 li
cp
@
447.779 113.112 mo
447.779 107.788 li
453.042 107.788 li
453.042 113.112 li
447.779 113.112 li
cp
f
447.779 113.112 mo
447.779 107.788 li
453.042 107.788 li
453.042 113.112 li
447.779 113.112 li
447.779 113.112 li
cp
@
1.836 lw
282.293 21.1289 mo
283.518 39.2441 li
297.41 79.6362 li
311.302 95.3032 li
325.256 100.261 li
339.149 102.953 li
353.041 104.177 li
366.933 105.157 li
380.887 105.952 li
394.779 106.809 li
408.671 107.727 li
422.564 108.706 li
436.518 109.685 li
450.41 110.542 li
0 .408423 1 0 cmyk
@
283.518 36.123 mo
280.396 39.2441 li
283.518 42.3652 li
286.639 39.2441 li
283.518 36.123 li
cp
f
.918 lw
283.518 36.123 mo
280.396 39.2441 li
283.518 42.3652 li
286.639 39.2441 li
283.518 36.123 li
283.518 36.123 li
cp
@
297.41 76.5151 mo
294.289 79.6362 li
297.41 82.7573 li
300.531 79.6362 li
297.41 76.5151 li
cp
f
297.41 76.5151 mo
294.289 79.6362 li
297.41 82.7573 li
300.531 79.6362 li
297.41 76.5151 li
297.41 76.5151 li
cp
@
311.302 92.1821 mo
308.181 95.3032 li
311.302 98.4243 li
314.424 95.3032 li
311.302 92.1821 li
cp
f
311.302 92.1821 mo
308.181 95.3032 li
311.302 98.4243 li
314.424 95.3032 li
311.302 92.1821 li
311.302 92.1821 li
cp
@
325.256 97.1392 mo
322.135 100.261 li
325.256 103.382 li
328.377 100.261 li
325.256 97.1392 li
cp
f
325.256 97.1392 mo
322.135 100.261 li
325.256 103.382 li
328.377 100.261 li
325.256 97.1392 li
325.256 97.1392 li
cp
@
339.149 99.832 mo
336.027 102.953 li
339.149 106.075 li
342.27 102.953 li
339.149 99.832 li
cp
f
339.149 99.832 mo
336.027 102.953 li
339.149 106.075 li
342.27 102.953 li
339.149 99.832 li
339.149 99.832 li
cp
@
353.041 101.056 mo
349.919 104.177 li
353.041 107.298 li
356.162 104.177 li
353.041 101.056 li
cp
f
353.041 101.056 mo
349.919 104.177 li
353.041 107.298 li
356.162 104.177 li
353.041 101.056 li
353.041 101.056 li
cp
@
366.933 102.035 mo
363.812 105.157 li
366.933 108.278 li
370.054 105.157 li
366.933 102.035 li
cp
f
366.933 102.035 mo
363.812 105.157 li
366.933 108.278 li
370.054 105.157 li
366.933 102.035 li
366.933 102.035 li
cp
@
380.887 102.831 mo
377.766 105.952 li
380.887 109.073 li
384.008 105.952 li
380.887 102.831 li
cp
f
380.887 102.831 mo
377.766 105.952 li
380.887 109.073 li
384.008 105.952 li
380.887 102.831 li
380.887 102.831 li
cp
@
394.779 103.688 mo
391.658 106.809 li
394.779 109.93 li
397.901 106.809 li
394.779 103.688 li
cp
f
394.779 103.688 mo
391.658 106.809 li
394.779 109.93 li
397.901 106.809 li
394.779 103.688 li
394.779 103.688 li
cp
@
408.671 104.606 mo
405.55 107.727 li
408.671 110.848 li
411.792 107.727 li
408.671 104.606 li
cp
f
408.671 104.606 mo
405.55 107.727 li
408.671 110.848 li
411.792 107.727 li
408.671 104.606 li
408.671 104.606 li
cp
@
422.564 105.585 mo
419.443 108.706 li
422.564 111.827 li
425.685 108.706 li
422.564 105.585 li
cp
f
422.564 105.585 mo
419.443 108.706 li
422.564 111.827 li
425.685 108.706 li
422.564 105.585 li
422.564 105.585 li
cp
@
436.518 106.564 mo
433.396 109.685 li
436.518 112.807 li
439.639 109.685 li
436.518 106.564 li
cp
f
436.518 106.564 mo
433.396 109.685 li
436.518 112.807 li
439.639 109.685 li
436.518 106.564 li
436.518 106.564 li
cp
@
450.41 107.421 mo
447.289 110.542 li
450.41 113.664 li
453.532 110.542 li
450.41 107.421 li
cp
f
450.41 107.421 mo
447.289 110.542 li
450.41 113.664 li
453.532 110.542 li
450.41 107.421 li
450.41 107.421 li
cp
@
1.836 lw
405.367 21.1289 mo
408.671 24.1274 li
422.564 34.1646 li
436.518 42.4263 li
450.41 49.4644 li
.892363 .791409 0 0 cmyk
@
408.671 20.5171 mo
405.55 25.9023 li
411.792 25.9023 li
408.671 20.5171 li
cp
f
.918 lw
408.671 20.5171 mo
405.55 25.9023 li
411.792 25.9023 li
408.671 20.5171 li
408.671 20.5171 li
cp
@
422.564 30.5537 mo
419.443 35.9395 li
425.685 35.9395 li
422.564 30.5537 li
cp
f
422.564 30.5537 mo
419.443 35.9395 li
425.685 35.9395 li
422.564 30.5537 li
422.564 30.5537 li
cp
@
436.518 38.8159 mo
433.396 44.2012 li
439.639 44.2012 li
436.518 38.8159 li
cp
f
436.518 38.8159 mo
433.396 44.2012 li
439.639 44.2012 li
436.518 38.8159 li
436.518 38.8159 li
cp
@
450.41 45.8535 mo
447.289 51.3003 li
453.532 51.3003 li
450.41 45.8535 li
cp
f
450.41 45.8535 mo
447.289 51.3003 li
453.532 51.3003 li
450.41 45.8535 li
450.41 45.8535 li
cp
@
1.836 lw
[9.18 5.508 ] 0 dsh
450.471 109.318 mo
266.749 109.318 li
.43949 .376715 .225864 .00350958 cmyk
@
[1.836 5.508 ] 0 dsh
266.81 143.59 mo
450.41 143.59 li
.75021 .679683 .670222 .90164 cmyk
@
[] 0 dsh
266.81 143.59 mo
266.81 21.1899 li
@
.918 lw
266.81 45.6699 mo
272.93 45.6699 li
266.81 82.3901 mo
272.93 82.3901 li
266.81 119.11 mo
272.93 119.11 li
266.81 27.3101 mo
269.87 27.3101 li
266.81 64.0303 mo
269.87 64.0303 li
266.81 100.75 mo
269.87 100.75 li
266.81 137.47 mo
269.87 137.47 li
@
1.836 lw
55.3643 289.247 mo
69.3179 244.753 li
83.21 265.623 li
97.1025 258.584 li
111.056 261.707 li
124.948 259.38 li
138.841 260.543 li
152.733 259.748 li
166.687 260.238 li
180.579 259.871 li
194.472 260.115 li
208.364 259.931 li
222.318 260.054 li
236.21 259.931 li
.659174 .184604 1 .0302739 cmyk
@
58.3711 289.27 mo
58.3711 287.547 56.9731 286.149 55.25 286.149 cv
53.5273 286.149 52.1289 287.547 52.1289 289.27 cv
52.1289 290.993 53.5273 292.391 55.25 292.391 cv
56.9731 292.391 58.3711 290.993 58.3711 289.27 cv
58.3711 289.27 li
cp
f
.918 lw
58.3711 289.27 mo
58.3711 287.547 56.9731 286.149 55.25 286.149 cv
53.5273 286.149 52.1289 287.547 52.1289 289.27 cv
52.1289 290.993 53.5273 292.391 55.25 292.391 cv
56.9731 292.391 58.3711 290.993 58.3711 289.27 cv
@
72.5313 244.871 mo
72.5313 243.147 71.1328 241.75 69.4102 241.75 cv
67.687 241.75 66.2891 243.147 66.2891 244.871 cv
66.2891 246.593 67.687 247.992 69.4102 247.992 cv
71.1328 247.992 72.5313 246.593 72.5313 244.871 cv
72.5313 244.871 li
cp
f
72.5313 244.871 mo
72.5313 243.147 71.1328 241.75 69.4102 241.75 cv
67.687 241.75 66.2891 243.147 66.2891 244.871 cv
66.2891 246.593 67.687 247.992 69.4102 247.992 cv
71.1328 247.992 72.5313 246.593 72.5313 244.871 cv
@
86.3311 265.51 mo
86.3311 263.788 84.9331 262.389 83.21 262.389 cv
81.4873 262.389 80.0889 263.788 80.0889 265.51 cv
80.0889 267.233 81.4873 268.631 83.21 268.631 cv
84.9331 268.631 86.3311 267.233 86.3311 265.51 cv
86.3311 265.51 li
cp
f
86.3311 265.51 mo
86.3311 263.788 84.9331 262.389 83.21 262.389 cv
81.4873 262.389 80.0889 263.788 80.0889 265.51 cv
80.0889 267.233 81.4873 268.631 83.21 268.631 cv
84.9331 268.631 86.3311 267.233 86.3311 265.51 cv
@
100.131 258.55 mo
100.131 256.828 98.7329 255.429 97.0103 255.429 cv
95.2871 255.429 93.8887 256.828 93.8887 258.55 cv
93.8887 260.273 95.2871 261.671 97.0103 261.671 cv
98.7329 261.671 100.131 260.273 100.131 258.55 cv
100.131 258.55 li
cp
f
100.131 258.55 mo
100.131 256.828 98.7329 255.429 97.0103 255.429 cv
95.2871 255.429 93.8887 256.828 93.8887 258.55 cv
93.8887 260.273 95.2871 261.671 97.0103 261.671 cv
98.7329 261.671 100.131 260.273 100.131 258.55 cv
@
114.292 261.67 mo
114.292 259.947 112.893 258.549 111.17 258.549 cv
109.447 258.549 108.049 259.947 108.049 261.67 cv
108.049 263.393 109.447 264.792 111.17 264.792 cv
112.893 264.792 114.292 263.393 114.292 261.67 cv
114.292 261.67 li
cp
f
114.292 261.67 mo
114.292 259.947 112.893 258.549 111.17 258.549 cv
109.447 258.549 108.049 259.947 108.049 261.67 cv
108.049 263.393 109.447 264.792 111.17 264.792 cv
112.893 264.792 114.292 263.393 114.292 261.67 cv
@
127.971 259.27 mo
127.971 257.547 126.573 256.149 124.85 256.149 cv
123.127 256.149 121.729 257.547 121.729 259.27 cv
121.729 260.993 123.127 262.391 124.85 262.391 cv
126.573 262.391 127.971 260.993 127.971 259.27 cv
127.971 259.27 li
cp
f
127.971 259.27 mo
127.971 257.547 126.573 256.149 124.85 256.149 cv
123.127 256.149 121.729 257.547 121.729 259.27 cv
121.729 260.993 123.127 262.391 124.85 262.391 cv
126.573 262.391 127.971 260.993 127.971 259.27 cv
@
141.891 260.47 mo
141.891 258.748 140.493 257.349 138.77 257.349 cv
137.047 257.349 135.649 258.748 135.649 260.47 cv
135.649 262.193 137.047 263.591 138.77 263.591 cv
140.493 263.591 141.891 262.193 141.891 260.47 cv
141.891 260.47 li
cp
f
141.891 260.47 mo
141.891 258.748 140.493 257.349 138.77 257.349 cv
137.047 257.349 135.649 258.748 135.649 260.47 cv
135.649 262.193 137.047 263.591 138.77 263.591 cv
140.493 263.591 141.891 262.193 141.891 260.47 cv
@
155.811 259.75 mo
155.811 258.027 154.413 256.628 152.69 256.628 cv
150.967 256.628 149.569 258.027 149.569 259.75 cv
149.569 261.473 150.967 262.872 152.69 262.872 cv
154.413 262.872 155.811 261.473 155.811 259.75 cv
155.811 259.75 li
cp
f
155.811 259.75 mo
155.811 258.027 154.413 256.628 152.69 256.628 cv
150.967 256.628 149.569 258.027 149.569 259.75 cv
149.569 261.473 150.967 262.872 152.69 262.872 cv
154.413 262.872 155.811 261.473 155.811 259.75 cv
@
169.731 260.23 mo
169.731 258.507 168.333 257.109 166.61 257.109 cv
164.887 257.109 163.489 258.507 163.489 260.23 cv
163.489 261.953 164.887 263.351 166.61 263.351 cv
168.333 263.351 169.731 261.953 169.731 260.23 cv
169.731 260.23 li
cp
f
169.731 260.23 mo
169.731 258.507 168.333 257.109 166.61 257.109 cv
164.887 257.109 163.489 258.507 163.489 260.23 cv
163.489 261.953 164.887 263.351 166.61 263.351 cv
168.333 263.351 169.731 261.953 169.731 260.23 cv
@
183.651 259.871 mo
183.651 258.147 182.253 256.749 180.53 256.749 cv
178.807 256.749 177.409 258.147 177.409 259.871 cv
177.409 261.593 178.807 262.992 180.53 262.992 cv
182.253 262.992 183.651 261.593 183.651 259.871 cv
183.651 259.871 li
cp
f
183.651 259.871 mo
183.651 258.147 182.253 256.749 180.53 256.749 cv
178.807 256.749 177.409 258.147 177.409 259.871 cv
177.409 261.593 178.807 262.992 180.53 262.992 cv
182.253 262.992 183.651 261.593 183.651 259.871 cv
@
197.571 260.23 mo
197.571 258.507 196.173 257.109 194.45 257.109 cv
192.727 257.109 191.329 258.507 191.329 260.23 cv
191.329 261.953 192.727 263.351 194.45 263.351 cv
196.173 263.351 197.571 261.953 197.571 260.23 cv
197.571 260.23 li
cp
f
197.571 260.23 mo
197.571 258.507 196.173 257.109 194.45 257.109 cv
192.727 257.109 191.329 258.507 191.329 260.23 cv
191.329 261.953 192.727 263.351 194.45 263.351 cv
196.173 263.351 197.571 261.953 197.571 260.23 cv
@
211.491 259.99 mo
211.491 258.267 210.093 256.869 208.37 256.869 cv
206.647 256.869 205.249 258.267 205.249 259.99 cv
205.249 261.713 206.647 263.111 208.37 263.111 cv
210.093 263.111 211.491 261.713 211.491 259.99 cv
211.491 259.99 li
cp
f
211.491 259.99 mo
211.491 258.267 210.093 256.869 208.37 256.869 cv
206.647 256.869 205.249 258.267 205.249 259.99 cv
205.249 261.713 206.647 263.111 208.37 263.111 cv
210.093 263.111 211.491 261.713 211.491 259.99 cv
@
225.411 259.99 mo
225.411 258.267 224.013 256.869 222.29 256.869 cv
220.567 256.869 219.169 258.267 219.169 259.99 cv
219.169 261.713 220.567 263.111 222.29 263.111 cv
224.013 263.111 225.411 261.713 225.411 259.99 cv
225.411 259.99 li
cp
f
225.411 259.99 mo
225.411 258.267 224.013 256.869 222.29 256.869 cv
220.567 256.869 219.169 258.267 219.169 259.99 cv
219.169 261.713 220.567 263.111 222.29 263.111 cv
224.013 263.111 225.411 261.713 225.411 259.99 cv
@
239.331 259.99 mo
239.331 258.267 237.933 256.869 236.21 256.869 cv
234.487 256.869 233.089 258.267 233.089 259.99 cv
233.089 261.713 234.487 263.111 236.21 263.111 cv
237.933 263.111 239.331 261.713 239.331 259.99 cv
239.331 259.99 li
cp
f
239.331 259.99 mo
239.331 258.267 237.933 256.869 236.21 256.869 cv
234.487 256.869 233.089 258.267 233.089 259.99 cv
233.089 261.713 234.487 263.111 236.21 263.111 cv
237.933 263.111 239.331 261.713 239.331 259.99 cv
@
1.836 lw
55.3643 217.765 mo
69.3179 245.855 li
83.21 256.932 li
97.1025 258.279 li
111.056 259.38 li
124.948 259.564 li
138.841 259.748 li
152.733 259.809 li
166.687 259.931 li
180.579 259.931 li
194.472 259.931 li
208.364 259.931 li
222.318 259.993 li
236.21 259.993 li
.648646 1 .217533 .0788281 cmyk
@
52.7324 220.458 mo
52.7324 215.133 li
58.0566 215.133 li
58.0566 220.458 li
52.7324 220.458 li
cp
f
.918 lw
52.7324 220.458 mo
52.7324 215.133 li
58.0566 215.133 li
58.0566 220.458 li
52.7324 220.458 li
52.7324 220.458 li
cp
@
66.625 248.487 mo
66.625 243.224 li
71.9492 243.224 li
71.9492 248.487 li
66.625 248.487 li
cp
f
66.625 248.487 mo
66.625 243.224 li
71.9492 243.224 li
71.9492 248.487 li
66.625 248.487 li
66.625 248.487 li
cp
@
80.5786 259.625 mo
80.5786 254.301 li
85.8418 254.301 li
85.8418 259.625 li
80.5786 259.625 li
cp
f
80.5786 259.625 mo
80.5786 254.301 li
85.8418 254.301 li
85.8418 259.625 li
80.5786 259.625 li
80.5786 259.625 li
cp
@
94.4707 260.911 mo
94.4707 255.647 li
99.7954 255.647 li
99.7954 260.911 li
94.4707 260.911 li
cp
f
94.4707 260.911 mo
94.4707 255.647 li
99.7954 255.647 li
99.7954 260.911 li
94.4707 260.911 li
94.4707 260.911 li
cp
@
108.363 262.074 mo
108.363 256.749 li
113.688 256.749 li
113.688 262.074 li
108.363 262.074 li
cp
f
108.363 262.074 mo
108.363 256.749 li
113.688 256.749 li
113.688 262.074 li
108.363 262.074 li
108.363 262.074 li
cp
@
122.256 262.196 mo
122.256 256.932 li
127.58 256.932 li
127.58 262.196 li
122.256 262.196 li
cp
f
122.256 262.196 mo
122.256 256.932 li
127.58 256.932 li
127.58 262.196 li
122.256 262.196 li
122.256 262.196 li
cp
@
136.209 262.441 mo
136.209 257.116 li
141.473 257.116 li
141.473 262.441 li
136.209 262.441 li
cp
f
136.209 262.441 mo
136.209 257.116 li
141.473 257.116 li
141.473 262.441 li
136.209 262.441 li
136.209 262.441 li
cp
@
150.102 262.501 mo
150.102 257.177 li
155.426 257.177 li
155.426 262.501 li
150.102 262.501 li
cp
f
150.102 262.501 mo
150.102 257.177 li
155.426 257.177 li
155.426 262.501 li
150.102 262.501 li
150.102 262.501 li
cp
@
163.994 262.563 mo
163.994 257.239 li
169.318 257.239 li
169.318 262.563 li
163.994 262.563 li
cp
f
163.994 262.563 mo
163.994 257.239 li
169.318 257.239 li
169.318 262.563 li
163.994 262.563 li
163.994 262.563 li
cp
@
177.948 262.563 mo
177.948 257.299 li
183.211 257.299 li
183.211 262.563 li
177.948 262.563 li
cp
f
177.948 262.563 mo
177.948 257.299 li
183.211 257.299 li
183.211 262.563 li
177.948 262.563 li
177.948 262.563 li
cp
@
191.84 262.625 mo
191.84 257.299 li
197.165 257.299 li
197.165 262.625 li
191.84 262.625 li
cp
f
191.84 262.625 mo
191.84 257.299 li
197.165 257.299 li
197.165 262.625 li
191.84 262.625 li
191.84 262.625 li
cp
@
205.732 262.625 mo
205.732 257.299 li
211.057 257.299 li
211.057 262.625 li
205.732 262.625 li
cp
f
205.732 262.625 mo
205.732 257.299 li
211.057 257.299 li
211.057 262.625 li
205.732 262.625 li
205.732 262.625 li
cp
@
219.625 262.625 mo
219.625 257.299 li
224.949 257.299 li
224.949 262.625 li
219.625 262.625 li
cp
f
219.625 262.625 mo
219.625 257.299 li
224.949 257.299 li
224.949 262.625 li
219.625 262.625 li
219.625 262.625 li
cp
@
233.579 262.625 mo
233.579 257.299 li
238.842 257.299 li
238.842 262.625 li
233.579 262.625 li
cp
f
233.579 262.625 mo
233.579 257.299 li
238.842 257.299 li
238.842 262.625 li
233.579 262.625 li
233.579 262.625 li
cp
@
1.836 lw
66.0127 174.129 mo
69.3179 210.91 li
83.21 240.959 li
97.1025 252.465 li
111.056 256.198 li
124.948 258.095 li
138.841 258.891 li
152.733 259.319 li
166.687 259.564 li
180.579 259.687 li
194.472 259.809 li
208.364 259.871 li
222.318 259.871 li
236.21 259.931 li
0 .408423 1 0 cmyk
@
69.3179 207.789 mo
66.1963 210.91 li
69.3179 214.031 li
72.439 210.91 li
69.3179 207.789 li
cp
f
.918 lw
69.3179 207.789 mo
66.1963 210.91 li
69.3179 214.031 li
72.439 210.91 li
69.3179 207.789 li
69.3179 207.789 li
cp
@
83.21 237.838 mo
80.0889 240.959 li
83.21 244.081 li
86.3311 240.959 li
83.21 237.838 li
cp
f
83.21 237.838 mo
80.0889 240.959 li
83.21 244.081 li
86.3311 240.959 li
83.21 237.838 li
83.21 237.838 li
cp
@
97.1025 249.343 mo
93.9814 252.465 li
97.1025 255.586 li
100.224 252.465 li
97.1025 249.343 li
cp
f
97.1025 249.343 mo
93.9814 252.465 li
97.1025 255.586 li
100.224 252.465 li
97.1025 249.343 li
97.1025 249.343 li
cp
@
111.056 253.077 mo
107.935 256.198 li
111.056 259.319 li
114.177 256.198 li
111.056 253.077 li
cp
f
111.056 253.077 mo
107.935 256.198 li
111.056 259.319 li
114.177 256.198 li
111.056 253.077 li
111.056 253.077 li
cp
@
124.948 254.974 mo
121.827 258.095 li
124.948 261.216 li
128.07 258.095 li
124.948 254.974 li
cp
f
124.948 254.974 mo
121.827 258.095 li
124.948 261.216 li
128.07 258.095 li
124.948 254.974 li
124.948 254.974 li
cp
@
138.841 255.77 mo
135.72 258.891 li
138.841 262.012 li
141.962 258.891 li
138.841 255.77 li
cp
f
138.841 255.77 mo
135.72 258.891 li
138.841 262.012 li
141.962 258.891 li
138.841 255.77 li
138.841 255.77 li
cp
@
152.733 256.198 mo
149.612 259.319 li
152.733 262.441 li
155.854 259.319 li
152.733 256.198 li
cp
f
152.733 256.198 mo
149.612 259.319 li
152.733 262.441 li
155.854 259.319 li
152.733 256.198 li
152.733 256.198 li
cp
@
166.687 256.443 mo
163.565 259.564 li
166.687 262.685 li
169.808 259.564 li
166.687 256.443 li
cp
f
166.687 256.443 mo
163.565 259.564 li
166.687 262.685 li
169.808 259.564 li
166.687 256.443 li
166.687 256.443 li
cp
@
180.579 256.565 mo
177.458 259.687 li
180.579 262.808 li
183.701 259.687 li
180.579 256.565 li
cp
f
180.579 256.565 mo
177.458 259.687 li
180.579 262.808 li
183.701 259.687 li
180.579 256.565 li
180.579 256.565 li
cp
@
194.472 256.688 mo
191.351 259.809 li
194.472 262.93 li
197.593 259.809 li
194.472 256.688 li
cp
f
194.472 256.688 mo
191.351 259.809 li
194.472 262.93 li
197.593 259.809 li
194.472 256.688 li
194.472 256.688 li
cp
@
208.364 256.749 mo
205.243 259.871 li
208.364 262.992 li
211.485 259.871 li
208.364 256.749 li
cp
f
208.364 256.749 mo
205.243 259.871 li
208.364 262.992 li
211.485 259.871 li
208.364 256.749 li
208.364 256.749 li
cp
@
222.318 256.749 mo
219.196 259.871 li
222.318 262.992 li
225.439 259.871 li
222.318 256.749 li
cp
f
222.318 256.749 mo
219.196 259.871 li
222.318 262.992 li
225.439 259.871 li
222.318 256.749 li
222.318 256.749 li
cp
@
236.21 256.81 mo
233.089 259.931 li
236.21 263.052 li
239.331 259.931 li
236.21 256.81 li
cp
f
236.21 256.81 mo
233.089 259.931 li
236.21 263.052 li
239.331 259.931 li
236.21 256.81 li
236.21 256.81 li
cp
@
1.836 lw
161.546 174.129 mo
166.687 180.065 li
180.579 192.55 li
194.472 202.281 li
208.364 210.115 li
222.318 216.418 li
236.21 221.62 li
.892363 .791409 0 0 cmyk
@
166.687 176.455 mo
163.565 181.901 li
169.808 181.901 li
166.687 176.455 li
cp
f
.918 lw
166.687 176.455 mo
163.565 181.901 li
169.808 181.901 li
166.687 176.455 li
166.687 176.455 li
cp
@
180.579 188.939 mo
177.458 194.325 li
183.701 194.325 li
180.579 188.939 li
cp
f
180.579 188.939 mo
177.458 194.325 li
183.701 194.325 li
180.579 188.939 li
180.579 188.939 li
cp
@
194.472 198.67 mo
191.351 204.117 li
197.593 204.117 li
194.472 198.67 li
cp
f
194.472 198.67 mo
191.351 204.117 li
197.593 204.117 li
194.472 198.67 li
194.472 198.67 li
cp
@
208.364 206.504 mo
205.243 211.889 li
211.485 211.889 li
208.364 206.504 li
cp
f
208.364 206.504 mo
205.243 211.889 li
211.485 211.889 li
208.364 206.504 li
208.364 206.504 li
cp
@
222.318 212.807 mo
219.196 218.193 li
225.439 218.193 li
222.318 212.807 li
cp
f
222.318 212.807 mo
219.196 218.193 li
225.439 218.193 li
222.318 212.807 li
222.318 212.807 li
cp
@
236.21 218.009 mo
233.089 223.395 li
239.331 223.395 li
236.21 218.009 li
cp
f
236.21 218.009 mo
233.089 223.395 li
239.331 223.395 li
236.21 218.009 li
236.21 218.009 li
cp
@
1.836 lw
[9.18 5.508 ] 0 dsh
236.271 259.871 mo
52.5488 259.871 li
.43949 .376715 .225864 .00350958 cmyk
@
[] 0 dsh
52.6099 296.59 mo
52.6099 174.19 li
.75021 .679683 .670222 .90164 cmyk
@
.918 lw
52.6099 174.19 mo
58.73 174.19 li
52.6099 223.15 mo
58.73 223.15 li
52.6099 272.11 mo
58.73 272.11 li
52.6099 198.67 mo
55.6699 198.67 li
52.6099 247.63 mo
55.6699 247.63 li
52.6099 296.59 mo
55.6699 296.59 li
@
%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginHQKXDQ+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/two <1C60D8A8C9B7A73DE72BAD97A1AB14497350B04AEDCC89B810A7A7579EC67BBA1BB072CAE80FF5F224043D73141B835306B538E1A090321AB63325D8B3A58C70F1FD34F3553B37A8BF6164DDA11E437012DC022ABF8601BBE36E43FA1BA89215476687E89F4C0A4BCB6119B7B6C22E9A6D30709E37D3141BAD532924FFAD1DE501B4> |-systemdict /gcheck known {setglobal} if end {end} ifendHQKXDQ+Times-Roman /Encoding getdup 50 /two putpop%ADOEndSubsetFont
/HQKXDQ+Times-Roman*1 [45{/.notdef}rp /hyphen /period 2{/.notdef}rp /one /two /.notdef /four 2{/.notdef}rp /seven /eight 8{/.notdef}rp /A 4{/.notdef}rp /F /G /H 7{/.notdef}rp /P 2{/.notdef}rp /S /T 12{/.notdef}rp /a /.notdef /c /d 4{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n 3{/.notdef}rp /r /.notdef /t 4{/.notdef}rp /y 134{/.notdef}rp]HQKXDQ+Times-Roman nfHQKXDQ+Times-Roman*1 [17.136 0 0 -17.136 0 0 ]msf24.146 277.859 mo(-22)shHQKXDQ+Times-Roman*1 [17.136 0 0 -17.136 0 0 ]msf25.6226 228.898 mo(-21)sh%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginHQKXDQ+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/zero <1C60D8A8C9B7A73DB9A6590C6FE2B7096DCA6F9A5EA5CF6E8AC2157EC7418EBDC43117FA8257DD5995ADA72B55217A703B5CBF244854B4360CFDF4258ECD5C9DEB492AEA5EC77E976B17AE7E2222D3F2CC89571B26AFB82DDBE99926812437BF7851C7D506B52E7A7DE1242CAC6D81645AF838199FD3EBA9B534D647714BFDCAF64F05E4> |-systemdict /gcheck known {setglobal} if end {end} ifendHQKXDQ+Times-Roman /Encoding getdup 48 /zero putpop%ADOEndSubsetFont
/HQKXDQ+Times-Roman*1 [45{/.notdef}rp /hyphen /period /.notdef /zero /one /two /.notdef /four 2{/.notdef}rp /seven /eight 8{/.notdef}rp /A 4{/.notdef}rp /F /G /H 7{/.notdef}rp /P 2{/.notdef}rp /S /T 12{/.notdef}rp /a /.notdef /c /d 4{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n 3{/.notdef}rp /r /.notdef /t 4{/.notdef}rp /y 134{/.notdef}rp]HQKXDQ+Times-Roman nfHQKXDQ+Times-Roman*1 [17.136 0 0 -17.136 0 0 ]msf24.146 179.82 mo(-20)sh%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginHQKXDQ+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/space <1C60D8A8C9B8707C25> |-/C <1C60D8A8C9B64EDFFB7CD25A2C740A59FDB93875AB4231E871C9753C8B6A300598898747795E8627DC8620BB80ECD900DDAE8B58DA30E2436AA16ADF42BEC594B706F998147F79C1F65A6CEE2D82088E51946E10EFCD63A7019B6D8437591296EB402980B290E76FE407FE36EDE9B3E4CE928D54B5D8DF2EE62B30B242A3EA7270B807155AA2CFE1DF6C04CEECCAB5FA78944000A4C6412A> |-/E <1C60D8A8C9B7D8BE774DE3D4993979F28436928B4CDBB6751E52C565AE7CCBA8EF4A8B60A6B8197E06686ACB2016ED56C2648D7EE6DB00F4795EF397C2952CAB1D6175CF76712F75EC245199884C545C641796897CB85779F19EC0B1ACB7B44E696F11860B9E3F66C1DA5748D5D1E424917F78224170CF649A7E0788B4FB83A9B795649C6C2E1BEFBEC8CB7D4EE48916B040566E008F8D3458DA30E023107ECA6A58C1BE70A2768537> |-/e <1C60D8A8C9B77FE2CE67108D1280ADC9682165E381A1DB7E740A05B18E65167A034DB250F6D5492B270110B05E60263A42B2C42DDF9AB2E4A276D8ABFFBD6680C39C89C62CEAE031CFF89EF16FD9FC76CF19CB9F9E34BA9AA837F4D55163017EBBAC9FCE57F666560D76840A1E9FB941AF2DF15742DAEB79EA2886404B2375DA19EFBEAC2017EDAD03B37508> |-/g <1C60D8A8C9B7A73DA347F0DC0A4CC25AD3382B8351D419D81B2F540C0F665DA2122211CB75D621F53ADCDBE7815157FCF3A7D9C98329945893598F8138F5D5F74388A15B63DC4DDBDB1A01CEDC68DBC335D575F070C3086679BC845D2E738427D0F7B681E970CAECC1ECA0192676764BEA6F787CBC115862B9B44CFD83A96CAFA21CE91235F59FAB64DFE50A98E215046D4BF1AB210098434AE88D505933B6B31BEC443E9C48567AB352DDD15143CE343B08927EA9C965F9F904D0C1E9AE4FECE14141B4365C351A577CA516601FBE0AFA3AD74B770DF0E6D6A50EC77FBA93516C03FCA671EDEBF2CCDCA919590D5C9DEA3D43029A729D3EC913B24C08E5BEFE573AAB22339502EECDF5C8F0B813EECA1A3643E46181D1A26BD0E961251C6FA14F9824242DA4E6EBAD7E5F2872BFD0F6F6BE709AF20CDE3BC39F29118C3ABE69D00325A184273C17639A8F614CF5086AF810778C30368743992A90E37B88A00B0EFB39F462A8B7048C5ABBCF6C197AE88D4F99C80A2B8E1DBB> |-/o <1C60D8A8C9B7A73DEA5F658431FF26DE1C3CCABA5A5AF56EE1798CA324BEFFED162986DEB20473198E3AAB17E1F76DC8A1DBB020158974052802A30905F0338BF503D35906BB108F3CEAC35FDF3D8BC51C5542899E6D21063EDA8732DC154AFBF51B7EEDDA621E256B5E3E8A8E86389A77366F5766B3A5B4DE72C37DBEBA04E9D5CF3B75> |-/s <1C60D8A8C9B7361F4A471763AC73DF2CB4D0E822A2CECA1AE242CCF137FE2017E1B84759A659774165B7FAAFC754E62F16566CD871C047B4DA1FAE5370C0C235D54992A5E0FA7700C9EE743A2D940E9CA5D26B3831BD83BB30176B0537C44AA3FF8FCDF5B3ABFEF1C2B6D9ACB1822B29C0F334D4D83CA74FAA5037DE49F23F9CF057A26EA493317530A59C4D60B62C344BD8DC7AA9CDF22723A4837ACF83C7D482D9B0FF4236D5FDED500C27A8FA9429CB11EFEE5641EF6FB1753C2B2C35F423576031D731309BB9AC2BE1068E6CE69B054A642C61> |-systemdict /gcheck known {setglobal} if end {end} ifendHQKXDQ+Times-Roman /Encoding getdup 32 /space putdup 67 /C putdup 69 /E putdup 101 /e putdup 103 /g putdup 111 /o putdup 115 /s putpop%ADOEndSubsetFont
/HQKXDQ+Times-Roman*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /.notdef /zero /one /two /.notdef /four 2{/.notdef}rp /seven /eight 8{/.notdef}rp /A /.notdef /C /.notdef /E /F /G /H 7{/.notdef}rp /P 2{/.notdef}rp /S /T 12{/.notdef}rp /a /.notdef /c /d /e /.notdef /g /.notdef /i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r /s /t 4{/.notdef}rp /y 134{/.notdef}rp]HQKXDQ+Times-Roman nfHQKXDQ+Times-Roman*1 [0 -17.136 -17.136 0 0 0 ]msf14.2397 292.726 mo(Energy Constant)[-10.4678 -8.56738 -7.60547 -5.70703 -8.56836 -8.56738 -4.28418 -11.4297 -8.56787 -8.56787 -6.66895 -4.76074 -7.60547 -8.56836 0 ]ysh1.836 lw
483.764 292.306 mo
497.717 249.527 li
511.61 272.967 li
525.502 266.357 li
539.457 269.111 li
553.348 265.623 li
567.241 264.644 li
581.133 262.685 li
595.086 261.4 li
608.979 260.605 li
622.872 260.176 li
636.764 259.931 li
650.717 259.809 li
664.61 259.809 li
.659174 .184604 1 .0302739 cmyk
@
486.771 292.39 mo
486.771 290.667 485.373 289.269 483.65 289.269 cv
481.927 289.269 480.529 290.667 480.529 292.39 cv
480.529 294.113 481.927 295.511 483.65 295.511 cv
485.373 295.511 486.771 294.113 486.771 292.39 cv
486.771 292.39 li
cp
f
.918 lw
486.771 292.39 mo
486.771 290.667 485.373 289.269 483.65 289.269 cv
481.927 289.269 480.529 290.667 480.529 292.39 cv
480.529 294.113 481.927 295.511 483.65 295.511 cv
485.373 295.511 486.771 294.113 486.771 292.39 cv
@
500.931 249.43 mo
500.931 247.707 499.533 246.309 497.81 246.309 cv
496.087 246.309 494.689 247.707 494.689 249.43 cv
494.689 251.153 496.087 252.551 497.81 252.551 cv
499.533 252.551 500.931 251.153 500.931 249.43 cv
500.931 249.43 li
cp
f
500.931 249.43 mo
500.931 247.707 499.533 246.309 497.81 246.309 cv
496.087 246.309 494.689 247.707 494.689 249.43 cv
494.689 251.153 496.087 252.551 497.81 252.551 cv
499.533 252.551 500.931 251.153 500.931 249.43 cv
@
514.731 272.95 mo
514.731 271.227 513.333 269.829 511.61 269.829 cv
509.887 269.829 508.489 271.227 508.489 272.95 cv
508.489 274.673 509.887 276.072 511.61 276.072 cv
513.333 276.072 514.731 274.673 514.731 272.95 cv
514.731 272.95 li
cp
f
514.731 272.95 mo
514.731 271.227 513.333 269.829 511.61 269.829 cv
509.887 269.829 508.489 271.227 508.489 272.95 cv
508.489 274.673 509.887 276.072 511.61 276.072 cv
513.333 276.072 514.731 274.673 514.731 272.95 cv
@
528.531 266.47 mo
528.531 264.748 527.133 263.349 525.41 263.349 cv
523.687 263.349 522.289 264.748 522.289 266.47 cv
522.289 268.193 523.687 269.591 525.41 269.591 cv
527.133 269.591 528.531 268.193 528.531 266.47 cv
528.531 266.47 li
cp
f
528.531 266.47 mo
528.531 264.748 527.133 263.349 525.41 263.349 cv
523.687 263.349 522.289 264.748 522.289 266.47 cv
522.289 268.193 523.687 269.591 525.41 269.591 cv
527.133 269.591 528.531 268.193 528.531 266.47 cv
@
542.691 269.11 mo
542.691 267.387 541.292 265.989 539.57 265.989 cv
537.847 265.989 536.449 267.387 536.449 269.11 cv
536.449 270.833 537.847 272.231 539.57 272.231 cv
541.292 272.231 542.691 270.833 542.691 269.11 cv
542.691 269.11 li
cp
f
542.691 269.11 mo
542.691 267.387 541.292 265.989 539.57 265.989 cv
537.847 265.989 536.449 267.387 536.449 269.11 cv
536.449 270.833 537.847 272.231 539.57 272.231 cv
541.292 272.231 542.691 270.833 542.691 269.11 cv
@
556.372 265.51 mo
556.372 263.788 554.973 262.389 553.25 262.389 cv
551.527 262.389 550.128 263.788 550.128 265.51 cv
550.128 267.233 551.527 268.631 553.25 268.631 cv
554.973 268.631 556.372 267.233 556.372 265.51 cv
556.372 265.51 li
cp
f
556.372 265.51 mo
556.372 263.788 554.973 262.389 553.25 262.389 cv
551.527 262.389 550.128 263.788 550.128 265.51 cv
550.128 267.233 551.527 268.631 553.25 268.631 cv
554.973 268.631 556.372 267.233 556.372 265.51 cv
@
570.292 264.55 mo
570.292 262.828 568.893 261.429 567.17 261.429 cv
565.447 261.429 564.049 262.828 564.049 264.55 cv
564.049 266.273 565.447 267.671 567.17 267.671 cv
568.893 267.671 570.292 266.273 570.292 264.55 cv
570.292 264.55 li
cp
f
570.292 264.55 mo
570.292 262.828 568.893 261.429 567.17 261.429 cv
565.447 261.429 564.049 262.828 564.049 264.55 cv
564.049 266.273 565.447 267.671 567.17 267.671 cv
568.893 267.671 570.292 266.273 570.292 264.55 cv
@
584.211 262.63 mo
584.211 260.907 582.813 259.509 581.09 259.509 cv
579.367 259.509 577.969 260.907 577.969 262.63 cv
577.969 264.353 579.367 265.751 581.09 265.751 cv
582.813 265.751 584.211 264.353 584.211 262.63 cv
584.211 262.63 li
cp
f
584.211 262.63 mo
584.211 260.907 582.813 259.509 581.09 259.509 cv
579.367 259.509 577.969 260.907 577.969 262.63 cv
577.969 264.353 579.367 265.751 581.09 265.751 cv
582.813 265.751 584.211 264.353 584.211 262.63 cv
@
598.131 261.43 mo
598.131 259.708 596.733 258.309 595.01 258.309 cv
593.288 258.309 591.889 259.708 591.889 261.43 cv
591.889 263.153 593.288 264.551 595.01 264.551 cv
596.733 264.551 598.131 263.153 598.131 261.43 cv
598.131 261.43 li
cp
f
598.131 261.43 mo
598.131 259.708 596.733 258.309 595.01 258.309 cv
593.288 258.309 591.889 259.708 591.889 261.43 cv
591.889 263.153 593.288 264.551 595.01 264.551 cv
596.733 264.551 598.131 263.153 598.131 261.43 cv
@
612.051 260.71 mo
612.051 258.987 610.653 257.589 608.93 257.589 cv
607.208 257.589 605.809 258.987 605.809 260.71 cv
605.809 262.433 607.208 263.832 608.93 263.832 cv
610.653 263.832 612.051 262.433 612.051 260.71 cv
612.051 260.71 li
cp
f
612.051 260.71 mo
612.051 258.987 610.653 257.589 608.93 257.589 cv
607.208 257.589 605.809 258.987 605.809 260.71 cv
605.809 262.433 607.208 263.832 608.93 263.832 cv
610.653 263.832 612.051 262.433 612.051 260.71 cv
@
625.971 260.23 mo
625.971 258.507 624.573 257.109 622.85 257.109 cv
621.127 257.109 619.729 258.507 619.729 260.23 cv
619.729 261.953 621.127 263.351 622.85 263.351 cv
624.573 263.351 625.971 261.953 625.971 260.23 cv
625.971 260.23 li
cp
f
625.971 260.23 mo
625.971 258.507 624.573 257.109 622.85 257.109 cv
621.127 257.109 619.729 258.507 619.729 260.23 cv
619.729 261.953 621.127 263.351 622.85 263.351 cv
624.573 263.351 625.971 261.953 625.971 260.23 cv
@
639.891 259.99 mo
639.891 258.267 638.493 256.869 636.77 256.869 cv
635.047 256.869 633.649 258.267 633.649 259.99 cv
633.649 261.713 635.047 263.111 636.77 263.111 cv
638.493 263.111 639.891 261.713 639.891 259.99 cv
639.891 259.99 li
cp
f
639.891 259.99 mo
639.891 258.267 638.493 256.869 636.77 256.869 cv
635.047 256.869 633.649 258.267 633.649 259.99 cv
633.649 261.713 635.047 263.111 636.77 263.111 cv
638.493 263.111 639.891 261.713 639.891 259.99 cv
@
653.811 259.75 mo
653.811 258.027 652.413 256.628 650.69 256.628 cv
648.967 256.628 647.569 258.027 647.569 259.75 cv
647.569 261.473 648.967 262.872 650.69 262.872 cv
652.413 262.872 653.811 261.473 653.811 259.75 cv
653.811 259.75 li
cp
f
653.811 259.75 mo
653.811 258.027 652.413 256.628 650.69 256.628 cv
648.967 256.628 647.569 258.027 647.569 259.75 cv
647.569 261.473 648.967 262.872 650.69 262.872 cv
652.413 262.872 653.811 261.473 653.811 259.75 cv
@
667.731 259.75 mo
667.731 258.027 666.333 256.628 664.61 256.628 cv
662.887 256.628 661.489 258.027 661.489 259.75 cv
661.489 261.473 662.887 262.872 664.61 262.872 cv
666.333 262.872 667.731 261.473 667.731 259.75 cv
667.731 259.75 li
cp
f
667.731 259.75 mo
667.731 258.027 666.333 256.628 664.61 256.628 cv
662.887 256.628 661.489 258.027 661.489 259.75 cv
661.489 261.473 662.887 262.872 664.61 262.872 cv
666.333 262.872 667.731 261.473 667.731 259.75 cv
@
1.836 lw
483.764 218.376 mo
497.717 248.12 li
511.61 261.767 li
525.502 266.051 li
539.457 269.478 li
553.348 270.335 li
567.241 269.601 li
581.133 267.642 li
595.086 265.317 li
608.979 263.297 li
622.872 261.767 li
636.764 260.849 li
650.717 260.36 li
664.61 260.115 li
.648646 1 .217533 .0788281 cmyk
@
481.132 221.069 mo
481.132 215.745 li
486.457 215.745 li
486.457 221.069 li
481.132 221.069 li
cp
f
.918 lw
481.132 221.069 mo
481.132 215.745 li
486.457 215.745 li
486.457 221.069 li
481.132 221.069 li
481.132 221.069 li
cp
@
495.025 250.751 mo
495.025 245.488 li
500.349 245.488 li
500.349 250.751 li
495.025 250.751 li
cp
f
495.025 250.751 mo
495.025 245.488 li
500.349 245.488 li
500.349 250.751 li
495.025 250.751 li
495.025 250.751 li
cp
@
508.978 264.46 mo
508.978 259.136 li
514.242 259.136 li
514.242 264.46 li
508.978 264.46 li
cp
f
508.978 264.46 mo
508.978 259.136 li
514.242 259.136 li
514.242 264.46 li
508.978 264.46 li
508.978 264.46 li
cp
@
522.871 268.683 mo
522.871 263.359 li
528.195 263.359 li
528.195 268.683 li
522.871 268.683 li
cp
f
522.871 268.683 mo
522.871 263.359 li
528.195 263.359 li
528.195 268.683 li
522.871 268.683 li
522.871 268.683 li
cp
@
536.763 272.11 mo
536.763 266.786 li
542.087 266.786 li
542.087 272.11 li
536.763 272.11 li
cp
f
536.763 272.11 mo
536.763 266.786 li
542.087 266.786 li
542.087 272.11 li
536.763 272.11 li
536.763 272.11 li
cp
@
550.656 272.967 mo
550.656 267.642 li
555.98 267.642 li
555.98 272.967 li
550.656 272.967 li
cp
f
550.656 272.967 mo
550.656 267.642 li
555.98 267.642 li
555.98 272.967 li
550.656 272.967 li
550.656 272.967 li
cp
@
564.609 272.233 mo
564.609 266.969 li
569.873 266.969 li
569.873 272.233 li
564.609 272.233 li
cp
f
564.609 272.233 mo
564.609 266.969 li
569.873 266.969 li
569.873 272.233 li
564.609 272.233 li
564.609 272.233 li
cp
@
578.501 270.274 mo
578.501 264.95 li
583.826 264.95 li
583.826 270.274 li
578.501 270.274 li
cp
f
578.501 270.274 mo
578.501 264.95 li
583.826 264.95 li
583.826 270.274 li
578.501 270.274 li
578.501 270.274 li
cp
@
592.394 267.949 mo
592.394 262.685 li
597.718 262.685 li
597.718 267.949 li
592.394 267.949 li
cp
f
592.394 267.949 mo
592.394 262.685 li
597.718 262.685 li
597.718 267.949 li
592.394 267.949 li
592.394 267.949 li
cp
@
606.347 265.929 mo
606.347 260.605 li
611.611 260.605 li
611.611 265.929 li
606.347 265.929 li
cp
f
606.347 265.929 mo
606.347 260.605 li
611.611 260.605 li
611.611 265.929 li
606.347 265.929 li
606.347 265.929 li
cp
@
620.24 264.46 mo
620.24 259.136 li
625.564 259.136 li
625.564 264.46 li
620.24 264.46 li
cp
f
620.24 264.46 mo
620.24 259.136 li
625.564 259.136 li
625.564 264.46 li
620.24 264.46 li
620.24 264.46 li
cp
@
634.132 263.542 mo
634.132 258.217 li
639.457 258.217 li
639.457 263.542 li
634.132 263.542 li
cp
f
634.132 263.542 mo
634.132 258.217 li
639.457 258.217 li
639.457 263.542 li
634.132 263.542 li
634.132 263.542 li
cp
@
648.025 263.052 mo
648.025 257.728 li
653.349 257.728 li
653.349 263.052 li
648.025 263.052 li
cp
f
648.025 263.052 mo
648.025 257.728 li
653.349 257.728 li
653.349 263.052 li
648.025 263.052 li
648.025 263.052 li
cp
@
661.978 262.808 mo
661.978 257.483 li
667.242 257.483 li
667.242 262.808 li
661.978 262.808 li
cp
f
661.978 262.808 mo
661.978 257.483 li
667.242 257.483 li
667.242 262.808 li
661.978 262.808 li
661.978 262.808 li
cp
@
1.836 lw
494.352 174.129 mo
497.717 211.155 li
511.61 242.245 li
525.502 256.198 li
539.457 263.542 li
553.348 269.172 li
567.241 272.293 li
581.133 272.967 li
595.086 271.315 li
608.979 268.5 li
622.872 265.562 li
636.764 263.236 li
650.717 261.645 li
664.61 260.727 li
0 .408423 1 0 cmyk
@
497.717 208.034 mo
494.596 211.155 li
497.717 214.276 li
500.839 211.155 li
497.717 208.034 li
cp
f
.918 lw
497.717 208.034 mo
494.596 211.155 li
497.717 214.276 li
500.839 211.155 li
497.717 208.034 li
497.717 208.034 li
cp
@
511.61 239.124 mo
508.489 242.245 li
511.61 245.366 li
514.731 242.245 li
511.61 239.124 li
cp
f
511.61 239.124 mo
508.489 242.245 li
511.61 245.366 li
514.731 242.245 li
511.61 239.124 li
511.61 239.124 li
cp
@
525.502 253.077 mo
522.381 256.198 li
525.502 259.319 li
528.624 256.198 li
525.502 253.077 li
cp
f
525.502 253.077 mo
522.381 256.198 li
525.502 259.319 li
528.624 256.198 li
525.502 253.077 li
525.502 253.077 li
cp
@
539.457 260.421 mo
536.334 263.542 li
539.457 266.664 li
542.578 263.542 li
539.457 260.421 li
cp
f
539.457 260.421 mo
536.334 263.542 li
539.457 266.664 li
542.578 263.542 li
539.457 260.421 li
539.457 260.421 li
cp
@
553.348 266.051 mo
550.227 269.172 li
553.348 272.293 li
556.47 269.172 li
553.348 266.051 li
cp
f
553.348 266.051 mo
550.227 269.172 li
553.348 272.293 li
556.47 269.172 li
553.348 266.051 li
553.348 266.051 li
cp
@
567.241 269.172 mo
564.12 272.293 li
567.241 275.415 li
570.362 272.293 li
567.241 269.172 li
cp
f
567.241 269.172 mo
564.12 272.293 li
567.241 275.415 li
570.362 272.293 li
567.241 269.172 li
567.241 269.172 li
cp
@
581.133 269.846 mo
578.012 272.967 li
581.133 276.088 li
584.254 272.967 li
581.133 269.846 li
cp
f
581.133 269.846 mo
578.012 272.967 li
581.133 276.088 li
584.254 272.967 li
581.133 269.846 li
581.133 269.846 li
cp
@
595.086 268.193 mo
591.965 271.315 li
595.086 274.436 li
598.208 271.315 li
595.086 268.193 li
cp
f
595.086 268.193 mo
591.965 271.315 li
595.086 274.436 li
598.208 271.315 li
595.086 268.193 li
595.086 268.193 li
cp
@
608.979 265.378 mo
605.858 268.5 li
608.979 271.621 li
612.1 268.5 li
608.979 265.378 li
cp
f
608.979 265.378 mo
605.858 268.5 li
608.979 271.621 li
612.1 268.5 li
608.979 265.378 li
608.979 265.378 li
cp
@
622.872 262.441 mo
619.75 265.562 li
622.872 268.683 li
625.993 265.562 li
622.872 262.441 li
cp
f
622.872 262.441 mo
619.75 265.562 li
622.872 268.683 li
625.993 265.562 li
622.872 262.441 li
622.872 262.441 li
cp
@
636.764 260.115 mo
633.643 263.236 li
636.764 266.357 li
639.885 263.236 li
636.764 260.115 li
cp
f
636.764 260.115 mo
633.643 263.236 li
636.764 266.357 li
639.885 263.236 li
636.764 260.115 li
636.764 260.115 li
cp
@
650.717 258.524 mo
647.596 261.645 li
650.717 264.766 li
653.839 261.645 li
650.717 258.524 li
cp
f
650.717 258.524 mo
647.596 261.645 li
650.717 264.766 li
653.839 261.645 li
650.717 258.524 li
650.717 258.524 li
cp
@
664.61 257.606 mo
661.489 260.727 li
664.61 263.848 li
667.731 260.727 li
664.61 257.606 li
cp
f
664.61 257.606 mo
661.489 260.727 li
664.61 263.848 li
667.731 260.727 li
664.61 257.606 li
664.61 257.606 li
cp
@
1.836 lw
584.622 174.129 mo
595.086 194.325 li
608.979 217.214 li
622.872 234.595 li
636.764 246.345 li
650.717 253.322 li
664.61 257.055 li
.892363 .791409 0 0 cmyk
@
595.086 190.775 mo
591.965 196.161 li
598.208 196.161 li
595.086 190.775 li
cp
f
.918 lw
595.086 190.775 mo
591.965 196.161 li
598.208 196.161 li
595.086 190.775 li
595.086 190.775 li
cp
@
608.979 213.603 mo
605.858 219.05 li
612.1 219.05 li
608.979 213.603 li
cp
f
608.979 213.603 mo
605.858 219.05 li
612.1 219.05 li
608.979 213.603 li
608.979 213.603 li
cp
@
622.872 230.984 mo
619.75 236.431 li
625.993 236.431 li
622.872 230.984 li
cp
f
622.872 230.984 mo
619.75 236.431 li
625.993 236.431 li
622.872 230.984 li
622.872 230.984 li
cp
@
636.764 242.734 mo
633.643 248.12 li
639.885 248.12 li
636.764 242.734 li
cp
f
636.764 242.734 mo
633.643 248.12 li
639.885 248.12 li
636.764 242.734 li
636.764 242.734 li
cp
@
650.717 249.772 mo
647.596 255.158 li
653.839 255.158 li
650.717 249.772 li
cp
f
650.717 249.772 mo
647.596 255.158 li
653.839 255.158 li
650.717 249.772 li
650.717 249.772 li
cp
@
664.61 253.444 mo
661.489 258.891 li
667.731 258.891 li
664.61 253.444 li
cp
f
664.61 253.444 mo
661.489 258.891 li
667.731 258.891 li
664.61 253.444 li
664.61 253.444 li
cp
@
1.836 lw
[9.18 5.508 ] 0 dsh
664.671 262.318 mo
480.949 262.318 li
.43949 .376715 .225864 .00350958 cmyk
@
[1.836 5.508 ] 0 dsh
481.01 296.59 mo
664.61 296.59 li
.75021 .679683 .670222 .90164 cmyk
@
[] 0 dsh
481.01 296.59 mo
481.01 174.19 li
@
.918 lw
481.01 174.19 mo
487.13 174.19 li
481.01 223.15 mo
487.13 223.15 li
481.01 272.11 mo
487.13 272.11 li
481.01 198.67 mo
484.07 198.67 li
481.01 247.63 mo
484.07 247.63 li
481.01 296.59 mo
484.07 296.59 li
@
1.836 lw
55.3643 442.063 mo
69.3179 398.855 li
83.21 425.233 li
97.1025 416.419 li
111.056 419.113 li
124.948 417.888 li
138.841 419.418 li
152.733 417.95 li
166.687 418.746 li
180.579 418.378 li
194.472 418.623 li
208.364 418.378 li
222.318 418.623 li
236.21 418.5 li
.659174 .184604 1 .0302739 cmyk
@
58.3711 442.15 mo
58.3711 440.427 56.9731 439.029 55.25 439.029 cv
53.5273 439.029 52.1289 440.427 52.1289 442.15 cv
52.1289 443.873 53.5273 445.271 55.25 445.271 cv
56.9731 445.271 58.3711 443.873 58.3711 442.15 cv
58.3711 442.15 li
cp
f
.918 lw
58.3711 442.15 mo
58.3711 440.427 56.9731 439.029 55.25 439.029 cv
53.5273 439.029 52.1289 440.427 52.1289 442.15 cv
52.1289 443.873 53.5273 445.271 55.25 445.271 cv
56.9731 445.271 58.3711 443.873 58.3711 442.15 cv
@
72.5313 398.95 mo
72.5313 397.227 71.1328 395.829 69.4102 395.829 cv
67.687 395.829 66.2891 397.227 66.2891 398.95 cv
66.2891 400.673 67.687 402.072 69.4102 402.072 cv
71.1328 402.072 72.5313 400.673 72.5313 398.95 cv
72.5313 398.95 li
cp
f
72.5313 398.95 mo
72.5313 397.227 71.1328 395.829 69.4102 395.829 cv
67.687 395.829 66.2891 397.227 66.2891 398.95 cv
66.2891 400.673 67.687 402.072 69.4102 402.072 cv
71.1328 402.072 72.5313 400.673 72.5313 398.95 cv
@
86.3311 425.35 mo
86.3311 423.627 84.9331 422.229 83.21 422.229 cv
81.4873 422.229 80.0889 423.627 80.0889 425.35 cv
80.0889 427.073 81.4873 428.471 83.21 428.471 cv
84.9331 428.471 86.3311 427.073 86.3311 425.35 cv
86.3311 425.35 li
cp
f
86.3311 425.35 mo
86.3311 423.627 84.9331 422.229 83.21 422.229 cv
81.4873 422.229 80.0889 423.627 80.0889 425.35 cv
80.0889 427.073 81.4873 428.471 83.21 428.471 cv
84.9331 428.471 86.3311 427.073 86.3311 425.35 cv
@
100.131 416.47 mo
100.131 414.748 98.7329 413.349 97.0103 413.349 cv
95.2871 413.349 93.8887 414.748 93.8887 416.47 cv
93.8887 418.193 95.2871 419.591 97.0103 419.591 cv
98.7329 419.591 100.131 418.193 100.131 416.47 cv
100.131 416.47 li
cp
f
100.131 416.47 mo
100.131 414.748 98.7329 413.349 97.0103 413.349 cv
95.2871 413.349 93.8887 414.748 93.8887 416.47 cv
93.8887 418.193 95.2871 419.591 97.0103 419.591 cv
98.7329 419.591 100.131 418.193 100.131 416.47 cv
@
114.292 419.11 mo
114.292 417.387 112.893 415.989 111.17 415.989 cv
109.447 415.989 108.049 417.387 108.049 419.11 cv
108.049 420.833 109.447 422.231 111.17 422.231 cv
112.893 422.231 114.292 420.833 114.292 419.11 cv
114.292 419.11 li
cp
f
114.292 419.11 mo
114.292 417.387 112.893 415.989 111.17 415.989 cv
109.447 415.989 108.049 417.387 108.049 419.11 cv
108.049 420.833 109.447 422.231 111.17 422.231 cv
112.893 422.231 114.292 420.833 114.292 419.11 cv
@
127.971 417.91 mo
127.971 416.187 126.573 414.789 124.85 414.789 cv
123.127 414.789 121.729 416.187 121.729 417.91 cv
121.729 419.633 123.127 421.032 124.85 421.032 cv
126.573 421.032 127.971 419.633 127.971 417.91 cv
127.971 417.91 li
cp
f
127.971 417.91 mo
127.971 416.187 126.573 414.789 124.85 414.789 cv
123.127 414.789 121.729 416.187 121.729 417.91 cv
121.729 419.633 123.127 421.032 124.85 421.032 cv
126.573 421.032 127.971 419.633 127.971 417.91 cv
@
141.891 419.35 mo
141.891 417.627 140.493 416.229 138.77 416.229 cv
137.047 416.229 135.649 417.627 135.649 419.35 cv
135.649 421.073 137.047 422.471 138.77 422.471 cv
140.493 422.471 141.891 421.073 141.891 419.35 cv
141.891 419.35 li
cp
f
141.891 419.35 mo
141.891 417.627 140.493 416.229 138.77 416.229 cv
137.047 416.229 135.649 417.627 135.649 419.35 cv
135.649 421.073 137.047 422.471 138.77 422.471 cv
140.493 422.471 141.891 421.073 141.891 419.35 cv
@
155.811 417.91 mo
155.811 416.187 154.413 414.789 152.69 414.789 cv
150.967 414.789 149.569 416.187 149.569 417.91 cv
149.569 419.633 150.967 421.032 152.69 421.032 cv
154.413 421.032 155.811 419.633 155.811 417.91 cv
155.811 417.91 li
cp
f
155.811 417.91 mo
155.811 416.187 154.413 414.789 152.69 414.789 cv
150.967 414.789 149.569 416.187 149.569 417.91 cv
149.569 419.633 150.967 421.032 152.69 421.032 cv
154.413 421.032 155.811 419.633 155.811 417.91 cv
@
169.731 418.63 mo
169.731 416.908 168.333 415.509 166.61 415.509 cv
164.887 415.509 163.489 416.908 163.489 418.63 cv
163.489 420.353 164.887 421.751 166.61 421.751 cv
168.333 421.751 169.731 420.353 169.731 418.63 cv
169.731 418.63 li
cp
f
169.731 418.63 mo
169.731 416.908 168.333 415.509 166.61 415.509 cv
164.887 415.509 163.489 416.908 163.489 418.63 cv
163.489 420.353 164.887 421.751 166.61 421.751 cv
168.333 421.751 169.731 420.353 169.731 418.63 cv
@
183.651 418.39 mo
183.651 416.667 182.253 415.269 180.53 415.269 cv
178.807 415.269 177.409 416.667 177.409 418.39 cv
177.409 420.113 178.807 421.511 180.53 421.511 cv
182.253 421.511 183.651 420.113 183.651 418.39 cv
183.651 418.39 li
cp
f
183.651 418.39 mo
183.651 416.667 182.253 415.269 180.53 415.269 cv
178.807 415.269 177.409 416.667 177.409 418.39 cv
177.409 420.113 178.807 421.511 180.53 421.511 cv
182.253 421.511 183.651 420.113 183.651 418.39 cv
@
197.571 418.63 mo
197.571 416.908 196.173 415.509 194.45 415.509 cv
192.727 415.509 191.329 416.908 191.329 418.63 cv
191.329 420.353 192.727 421.751 194.45 421.751 cv
196.173 421.751 197.571 420.353 197.571 418.63 cv
197.571 418.63 li
cp
f
197.571 418.63 mo
197.571 416.908 196.173 415.509 194.45 415.509 cv
192.727 415.509 191.329 416.908 191.329 418.63 cv
191.329 420.353 192.727 421.751 194.45 421.751 cv
196.173 421.751 197.571 420.353 197.571 418.63 cv
@
211.491 418.39 mo
211.491 416.667 210.093 415.269 208.37 415.269 cv
206.647 415.269 205.249 416.667 205.249 418.39 cv
205.249 420.113 206.647 421.511 208.37 421.511 cv
210.093 421.511 211.491 420.113 211.491 418.39 cv
211.491 418.39 li
cp
f
211.491 418.39 mo
211.491 416.667 210.093 415.269 208.37 415.269 cv
206.647 415.269 205.249 416.667 205.249 418.39 cv
205.249 420.113 206.647 421.511 208.37 421.511 cv
210.093 421.511 211.491 420.113 211.491 418.39 cv
@
225.411 418.63 mo
225.411 416.908 224.013 415.509 222.29 415.509 cv
220.567 415.509 219.169 416.908 219.169 418.63 cv
219.169 420.353 220.567 421.751 222.29 421.751 cv
224.013 421.751 225.411 420.353 225.411 418.63 cv
225.411 418.63 li
cp
f
225.411 418.63 mo
225.411 416.908 224.013 415.509 222.29 415.509 cv
220.567 415.509 219.169 416.908 219.169 418.63 cv
219.169 420.353 220.567 421.751 222.29 421.751 cv
224.013 421.751 225.411 420.353 225.411 418.63 cv
@
239.331 418.39 mo
239.331 416.667 237.933 415.269 236.21 415.269 cv
234.487 415.269 233.089 416.667 233.089 418.39 cv
233.089 420.113 234.487 421.511 236.21 421.511 cv
237.933 421.511 239.331 420.113 239.331 418.39 cv
239.331 418.39 li
cp
f
239.331 418.39 mo
239.331 416.667 237.933 415.269 236.21 415.269 cv
234.487 415.269 233.089 416.667 233.089 418.39 cv
233.089 420.113 234.487 421.511 236.21 421.511 cv
237.933 421.511 239.331 420.113 239.331 418.39 cv
@
1.836 lw
55.3643 365.624 mo
69.3179 401.976 li
83.21 414.707 li
97.1025 416.297 li
111.056 417.705 li
124.948 418.072 li
138.841 418.255 li
152.733 418.378 li
166.687 418.439 li
180.579 418.439 li
194.472 418.5 li
208.364 418.5 li
222.318 418.5 li
236.21 418.5 li
.648646 1 .217533 .0788281 cmyk
@
52.7324 368.255 mo
52.7324 362.992 li
58.0566 362.992 li
58.0566 368.255 li
52.7324 368.255 li
cp
f
.918 lw
52.7324 368.255 mo
52.7324 362.992 li
58.0566 362.992 li
58.0566 368.255 li
52.7324 368.255 li
52.7324 368.255 li
cp
@
66.625 404.608 mo
66.625 399.284 li
71.9492 399.284 li
71.9492 404.608 li
66.625 404.608 li
cp
f
66.625 404.608 mo
66.625 399.284 li
71.9492 399.284 li
71.9492 404.608 li
66.625 404.608 li
66.625 404.608 li
cp
@
80.5786 417.337 mo
80.5786 412.013 li
85.8418 412.013 li
85.8418 417.337 li
80.5786 417.337 li
cp
f
80.5786 417.337 mo
80.5786 412.013 li
85.8418 412.013 li
85.8418 417.337 li
80.5786 417.337 li
80.5786 417.337 li
cp
@
94.4707 418.929 mo
94.4707 413.605 li
99.7954 413.605 li
99.7954 418.929 li
94.4707 418.929 li
cp
f
94.4707 418.929 mo
94.4707 413.605 li
99.7954 413.605 li
99.7954 418.929 li
94.4707 418.929 li
94.4707 418.929 li
cp
@
108.363 420.336 mo
108.363 415.074 li
113.688 415.074 li
113.688 420.336 li
108.363 420.336 li
cp
f
108.363 420.336 mo
108.363 415.074 li
113.688 415.074 li
113.688 420.336 li
108.363 420.336 li
108.363 420.336 li
cp
@
122.256 420.704 mo
122.256 415.379 li
127.58 415.379 li
127.58 420.704 li
122.256 420.704 li
cp
f
122.256 420.704 mo
122.256 415.379 li
127.58 415.379 li
127.58 420.704 li
122.256 420.704 li
122.256 420.704 li
cp
@
136.209 420.949 mo
136.209 415.625 li
141.473 415.625 li
141.473 420.949 li
136.209 420.949 li
cp
f
136.209 420.949 mo
136.209 415.625 li
141.473 415.625 li
141.473 420.949 li
136.209 420.949 li
136.209 420.949 li
cp
@
150.102 421.009 mo
150.102 415.685 li
155.426 415.685 li
155.426 421.009 li
150.102 421.009 li
cp
f
150.102 421.009 mo
150.102 415.685 li
155.426 415.685 li
155.426 421.009 li
150.102 421.009 li
150.102 421.009 li
cp
@
163.994 421.071 mo
163.994 415.808 li
169.318 415.808 li
169.318 421.071 li
163.994 421.071 li
cp
f
163.994 421.071 mo
163.994 415.808 li
169.318 415.808 li
169.318 421.071 li
163.994 421.071 li
163.994 421.071 li
cp
@
177.948 421.132 mo
177.948 415.808 li
183.211 415.808 li
183.211 421.132 li
177.948 421.132 li
cp
f
177.948 421.132 mo
177.948 415.808 li
183.211 415.808 li
183.211 421.132 li
177.948 421.132 li
177.948 421.132 li
cp
@
191.84 421.132 mo
191.84 415.808 li
197.165 415.808 li
197.165 421.132 li
191.84 421.132 li
cp
f
191.84 421.132 mo
191.84 415.808 li
197.165 415.808 li
197.165 421.132 li
191.84 421.132 li
191.84 421.132 li
cp
@
205.732 421.132 mo
205.732 415.869 li
211.057 415.869 li
211.057 421.132 li
205.732 421.132 li
cp
f
205.732 421.132 mo
205.732 415.869 li
211.057 415.869 li
211.057 421.132 li
205.732 421.132 li
205.732 421.132 li
cp
@
219.625 421.132 mo
219.625 415.869 li
224.949 415.869 li
224.949 421.132 li
219.625 421.132 li
cp
f
219.625 421.132 mo
219.625 415.869 li
224.949 415.869 li
224.949 421.132 li
219.625 421.132 li
219.625 421.132 li
cp
@
233.579 421.132 mo
233.579 415.869 li
238.842 415.869 li
238.842 421.132 li
233.579 421.132 li
cp
f
233.579 421.132 mo
233.579 415.869 li
238.842 415.869 li
238.842 421.132 li
233.579 421.132 li
233.579 421.132 li
cp
@
1.836 lw
67.1143 327.128 mo
69.3179 357.056 li
83.21 395.183 li
97.1025 409.259 li
111.056 413.911 li
124.948 416.175 li
138.841 417.154 li
152.733 417.766 li
166.687 418.011 li
180.579 418.195 li
194.472 418.317 li
208.364 418.378 li
222.318 418.439 li
236.21 418.439 li
0 .408423 1 0 cmyk
@
69.3179 353.934 mo
66.1963 357.056 li
69.3179 360.177 li
72.439 357.056 li
69.3179 353.934 li
cp
f
.918 lw
69.3179 353.934 mo
66.1963 357.056 li
69.3179 360.177 li
72.439 357.056 li
69.3179 353.934 li
69.3179 353.934 li
cp
@
83.21 392.062 mo
80.0889 395.183 li
83.21 398.304 li
86.3311 395.183 li
83.21 392.062 li
cp
f
83.21 392.062 mo
80.0889 395.183 li
83.21 398.304 li
86.3311 395.183 li
83.21 392.062 li
83.21 392.062 li
cp
@
97.1025 406.138 mo
93.9814 409.259 li
97.1025 412.38 li
100.224 409.259 li
97.1025 406.138 li
cp
f
97.1025 406.138 mo
93.9814 409.259 li
97.1025 412.38 li
100.224 409.259 li
97.1025 406.138 li
97.1025 406.138 li
cp
@
111.056 410.79 mo
107.935 413.911 li
111.056 417.032 li
114.177 413.911 li
111.056 410.79 li
cp
f
111.056 410.79 mo
107.935 413.911 li
111.056 417.032 li
114.177 413.911 li
111.056 410.79 li
111.056 410.79 li
cp
@
124.948 413.054 mo
121.827 416.175 li
124.948 419.296 li
128.07 416.175 li
124.948 413.054 li
cp
f
124.948 413.054 mo
121.827 416.175 li
124.948 419.296 li
128.07 416.175 li
124.948 413.054 li
124.948 413.054 li
cp
@
138.841 414.033 mo
135.72 417.154 li
138.841 420.275 li
141.962 417.154 li
138.841 414.033 li
cp
f
138.841 414.033 mo
135.72 417.154 li
138.841 420.275 li
141.962 417.154 li
138.841 414.033 li
138.841 414.033 li
cp
@
152.733 414.645 mo
149.612 417.766 li
152.733 420.887 li
155.854 417.766 li
152.733 414.645 li
cp
f
152.733 414.645 mo
149.612 417.766 li
152.733 420.887 li
155.854 417.766 li
152.733 414.645 li
152.733 414.645 li
cp
@
166.687 414.89 mo
163.565 418.011 li
166.687 421.132 li
169.808 418.011 li
166.687 414.89 li
cp
f
166.687 414.89 mo
163.565 418.011 li
166.687 421.132 li
169.808 418.011 li
166.687 414.89 li
166.687 414.89 li
cp
@
180.579 415.074 mo
177.458 418.195 li
180.579 421.316 li
183.701 418.195 li
180.579 415.074 li
cp
f
180.579 415.074 mo
177.458 418.195 li
180.579 421.316 li
183.701 418.195 li
180.579 415.074 li
180.579 415.074 li
cp
@
194.472 415.196 mo
191.351 418.317 li
194.472 421.438 li
197.593 418.317 li
194.472 415.196 li
cp
f
194.472 415.196 mo
191.351 418.317 li
194.472 421.438 li
197.593 418.317 li
194.472 415.196 li
194.472 415.196 li
cp
@
208.364 415.257 mo
205.243 418.378 li
208.364 421.5 li
211.485 418.378 li
208.364 415.257 li
cp
f
208.364 415.257 mo
205.243 418.378 li
208.364 421.5 li
211.485 418.378 li
208.364 415.257 li
208.364 415.257 li
cp
@
222.318 415.318 mo
219.196 418.439 li
222.318 421.56 li
225.439 418.439 li
222.318 415.318 li
cp
f
222.318 415.318 mo
219.196 418.439 li
222.318 421.56 li
225.439 418.439 li
222.318 415.318 li
222.318 415.318 li
cp
@
236.21 415.318 mo
233.089 418.439 li
236.21 421.56 li
239.331 418.439 li
236.21 415.318 li
cp
f
236.21 415.318 mo
233.089 418.439 li
236.21 421.56 li
239.331 418.439 li
236.21 415.318 li
236.21 415.318 li
cp
@
1.836 lw
182.293 327.128 mo
194.472 339.001 li
208.364 349.834 li
222.318 358.585 li
236.21 365.807 li
.892363 .791409 0 0 cmyk
@
194.472 335.391 mo
191.351 340.837 li
197.593 340.837 li
194.472 335.391 li
cp
f
.918 lw
194.472 335.391 mo
191.351 340.837 li
197.593 340.837 li
194.472 335.391 li
194.472 335.391 li
cp
@
208.364 346.223 mo
205.243 351.67 li
211.485 351.67 li
208.364 346.223 li
cp
f
208.364 346.223 mo
205.243 351.67 li
211.485 351.67 li
208.364 346.223 li
208.364 346.223 li
cp
@
222.318 355.036 mo
219.196 360.421 li
225.439 360.421 li
222.318 355.036 li
cp
f
222.318 355.036 mo
219.196 360.421 li
225.439 360.421 li
222.318 355.036 li
222.318 355.036 li
cp
@
236.21 362.197 mo
233.089 367.583 li
239.331 367.583 li
236.21 362.197 li
cp
f
236.21 362.197 mo
233.089 367.583 li
239.331 367.583 li
236.21 362.197 li
236.21 362.197 li
cp
@
1.836 lw
[9.18 5.508 ] 0 dsh
236.271 418.378 mo
52.5488 418.378 li
.43949 .376715 .225864 .00350958 cmyk
@
[] 0 dsh
52.6099 449.59 mo
236.21 449.59 li
.75021 .679683 .670222 .90164 cmyk
@
.918 lw
236.21 449.59 mo
236.21 443.47 li
180.579 449.59 mo
180.579 443.47 li
124.948 449.59 mo
124.948 443.47 li
69.3179 449.59 mo
69.3179 443.47 li
208.364 449.59 mo
208.364 446.53 li
152.733 449.59 mo
152.733 446.53 li
97.1025 449.59 mo
97.1025 446.53 li
@
HQKXDQ+Times-Roman*1 [17.136 0 0 -17.136 0 0 ]msf65.2163 467.218 mo(24)[55.6235 0 ]xsh%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginHQKXDQ+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/six <1C60D8A8C9B7A73DB6D2877672A15D933475028E1A563F35D9B429BC044364BBEA6C8D8E288B5629F6BF21219495DF799C22E6D194E7EF19D2BF50638A5DFD525E61CAA756DFB58BC6CF02B70355716B1567E587BDF24EE1CD60FDA306A5E8E3EC9A065FDF865555F45DE4B3A9666958B7C5B64C412BD6705A27F81BA359AA5385B74802E199214ED2C08D85C8D9515B8A71A37E696B11B788D46272326187B79B809C5ABF82FEBD4C4DE257125A17BA43> |-systemdict /gcheck known {setglobal} if end {end} ifendHQKXDQ+Times-Roman /Encoding getdup 54 /six putpop%ADOEndSubsetFont
/HQKXDQ+Times-Roman*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /.notdef /zero /one /two /.notdef /four /.notdef /six /seven /eight 8{/.notdef}rp /A /.notdef /C /.notdef /E /F /G /H 7{/.notdef}rp /P 2{/.notdef}rp /S /T 12{/.notdef}rp /a /.notdef /c /d /e /.notdef /g /.notdef /i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r /s /t 4{/.notdef}rp /y 134{/.notdef}rp]HQKXDQ+Times-Roman nfHQKXDQ+Times-Roman*1 [17.136 0 0 -17.136 0 0 ]msf176.591 467.453 mo(6)shHQKXDQ+Times-Roman*1 [17.136 0 0 -17.136 0 0 ]msf232.341 467.218 mo(8)sh%ADOBeginSubsetFont: Times-BoldItalic Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Times-BoldItalic def/FontInfo 5 dict dup begin/ItalicAngle 0 def/OrigFontType /TrueType defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 114 /r putdef/FontBBox {-319 -426 1612 1275} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/.notdef <1C60D8A8C9B6FF86FB9868E636EB1E4A833A4372C2AFE6669DD3E5F073F429C5C69647> |-/r <1C60D8A8C9B7361F02A7E8C7FC20DC466BE755B3B2176365881056F515C20A9E113687A377C6E010D882700E9761957FF47E38EBD093FDE0F8BE37160D48528D55AF73DDE762D4526612FD710078EF508012B15215BDE38F04DF2C996299879930A4D789824B0BED4AF576423BB3976BCDADEC46C05B8F628732A7170EC5CD57BA6E2B2D8625ADDFAA480EAF617EACDF9EF1A38CBD7B32ABC48AD9ABDE299498EB02C0AE5B> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/HQKXDR+Times-BoldItalic /Times-BoldItalic findfont ct_VMDictPut/HQKXDR+Times-BoldItalic*1 [114{/.notdef}rp /r 141{/.notdef}rp]HQKXDR+Times-BoldItalic nfHQKXDR+Times-BoldItalic*1 [17.136 0 0 -17.136 0 0 ]msf127.951 485.57 mo(r)sh%ADOBeginSubsetFont: Times-BoldItalic AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginHQKXDR+Times-BoldItalic dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/c <1C60D8A8C9B77FE29D6C434D879C1A7AFF8752847A1ABFF84E9003DA7EF603B4E9C5E789B9C4112701466E65B8859DB84AAE518789ED65AB48E56CF4746642D3FF05216A4B9D79A693C2FFA23DC03056A61A0F74055D08A0BCA768C587F6E867D6FEB75122C5C3325ADD92DE1837270C0B598824827CDB1940BD0C6A20A1CB27EE89A6F08EC1DA8F892A6DFDCA039BD0DC437E1C63E44AAD517994CD7F12E2BD6C7014820337A4DEE7902A22D9B23D5EF458A04D379C8D6F1D9D7B82> |-systemdict /gcheck known {setglobal} if end {end} ifendHQKXDR+Times-BoldItalic /Encoding getdup 99 /c putpop%ADOEndSubsetFont
/HQKXDR+Times-BoldItalic*1 [99{/.notdef}rp /c 14{/.notdef}rp /r 141{/.notdef}rp]HQKXDR+Times-BoldItalic nfHQKXDR+Times-BoldItalic*1 [12.1176 0 0 -12.1176 0 0 ]msf134.677 492.429 mo(c)sh%ADOBeginSubsetFont: Times-BoldItalic AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginHQKXDR+Times-BoldItalic dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/space <1C60D8A8C9B8707C25> |-/slash <1C60D8A8C9B854D07FA127B7414E52804EC643F3A186> |-/a <1C60D8A8C9B7A73DB9C40DE8FC203A1184855007CFF7617A8850D7F00088E5EA9111329A58AF04D4A11C6FFC9348E0546132E0B828659F742A17314F4DB336085207CB32029DE7203843667E458263D0E569A07540CCB63759DE4D6B5F477B206CCBA1D75A454276A87B2B30B15A3D6716DF916D8D904EF04135D2B1BC867FB894307F06AC574C6C7343AFE912CE7DA55A09A5A9C56C13E7B61DFC142A585EE22D466584F9141756A48B7D0526D8DB196295D5151723134C79205FBD6CAADC1C1F2B36C08B20A25B6BCCE932989CF00D0D00CD0936F4F4EF86DCA47477A56123DF704C6DA6EEE053F8F30505BBBDD4B3C33BD74C92B6ED20199DC5> |-systemdict /gcheck known {setglobal} if end {end} ifendHQKXDR+Times-BoldItalic /Encoding getdup 32 /space putdup 47 /slash putdup 97 /a putpop%ADOEndSubsetFont
/HQKXDR+Times-BoldItalic*1 [32{/.notdef}rp /space 14{/.notdef}rp /slash 49{/.notdef}rp /a /.notdef /c 14{/.notdef}rp /r 141{/.notdef}rp]HQKXDR+Times-BoldItalic nfHQKXDR+Times-BoldItalic*1 [17.136 0 0 -17.136 0 0 ]msf139.943 485.57 mo( / a)sh1.836 lw
52.6099 449.59 mo
52.6099 327.19 li
@
.918 lw
52.6099 327.19 mo
58.73 327.19 li
52.6099 388.39 mo
58.73 388.39 li
52.6099 449.59 mo
58.73 449.59 li
52.6099 357.791 mo
55.6699 357.791 li
52.6099 418.99 mo
55.6699 418.99 li
@
HQKXDQ+Times-Roman*1 [17.136 0 0 -17.136 0 0 ]msf25.6226 455.218 mo(-81)sh%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginHQKXDQ+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/nine <1C60D8A8C9B7A73DB9A896D23FCC66190904632D73F98CB9610A16993F6B122D7E1E78C0FD3CFB4BA7B04573F85C6AAF2DBC5FF0782821FB24CB9148C8554B2F1030920B61B0FCD80181994622E333F98E453CE9ADDE1282743A6D28C02F5A1E762172EE000BA8345C747F4D035036F2F72356957E99A085687800E644D881E70A8EFBE3A3E6E4B170FA116E5327D2CD42DA986FA6C800B44A5CE5DF369C3295EA45945F8EE425ED3E5B812A8DD33EE2E3340844A5314FF5267F47524653D6A9344C2AEC57094DFAB247907C47ADE2EB> |-systemdict /gcheck known {setglobal} if end {end} ifendHQKXDQ+Times-Roman /Encoding getdup 57 /nine putpop%ADOEndSubsetFont
/HQKXDQ+Times-Roman*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /.notdef /zero /one /two /.notdef /four /.notdef /six /seven /eight /nine 7{/.notdef}rp /A /.notdef /C /.notdef /E /F /G /H 7{/.notdef}rp /P 2{/.notdef}rp /S /T 12{/.notdef}rp /a /.notdef /c /d /e /.notdef /g /.notdef /i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r /s /t 4{/.notdef}rp /y 134{/.notdef}rp]HQKXDQ+Times-Roman nfHQKXDQ+Times-Roman*1 [17.136 0 0 -17.136 0 0 ]msf24.3882 393.89 mo(-79)shHQKXDQ+Times-Roman*1 [17.136 0 0 -17.136 0 0 ]msf24.646 332.703 mo(-77)sh52.6099 327.19 mo
52.6099 449.59 li
236.21 449.59 li
@
1.836 lw
269.564 442.185 mo
283.518 399.162 li
297.41 425.722 li
311.302 417.154 li
325.256 420.153 li
339.149 419.296 li
353.041 421.071 li
366.933 419.847 li
380.887 420.765 li
394.779 420.458 li
408.671 420.704 li
422.564 420.398 li
436.518 420.458 li
450.41 420.153 li
.659174 .184604 1 .0302739 cmyk
@
272.691 442.15 mo
272.691 440.427 271.293 439.029 269.57 439.029 cv
267.847 439.029 266.449 440.427 266.449 442.15 cv
266.449 443.873 267.847 445.271 269.57 445.271 cv
271.293 445.271 272.691 443.873 272.691 442.15 cv
272.691 442.15 li
cp
f
.918 lw
272.691 442.15 mo
272.691 440.427 271.293 439.029 269.57 439.029 cv
267.847 439.029 266.449 440.427 266.449 442.15 cv
266.449 443.873 267.847 445.271 269.57 445.271 cv
271.293 445.271 272.691 443.873 272.691 442.15 cv
@
286.611 399.19 mo
286.611 397.467 285.213 396.069 283.49 396.069 cv
281.767 396.069 280.369 397.467 280.369 399.19 cv
280.369 400.913 281.767 402.311 283.49 402.311 cv
285.213 402.311 286.611 400.913 286.611 399.19 cv
286.611 399.19 li
cp
f
286.611 399.19 mo
286.611 397.467 285.213 396.069 283.49 396.069 cv
281.767 396.069 280.369 397.467 280.369 399.19 cv
280.369 400.913 281.767 402.311 283.49 402.311 cv
285.213 402.311 286.611 400.913 286.611 399.19 cv
@
300.531 425.831 mo
300.531 424.107 299.133 422.708 297.41 422.708 cv
295.687 422.708 294.289 424.107 294.289 425.831 cv
294.289 427.553 295.687 428.952 297.41 428.952 cv
299.133 428.952 300.531 427.553 300.531 425.831 cv
300.531 425.831 li
cp
f
300.531 425.831 mo
300.531 424.107 299.133 422.708 297.41 422.708 cv
295.687 422.708 294.289 424.107 294.289 425.831 cv
294.289 427.553 295.687 428.952 297.41 428.952 cv
299.133 428.952 300.531 427.553 300.531 425.831 cv
@
314.451 417.19 mo
314.451 415.467 313.053 414.069 311.33 414.069 cv
309.607 414.069 308.209 415.467 308.209 417.19 cv
308.209 418.913 309.607 420.311 311.33 420.311 cv
313.053 420.311 314.451 418.913 314.451 417.19 cv
314.451 417.19 li
cp
f
314.451 417.19 mo
314.451 415.467 313.053 414.069 311.33 414.069 cv
309.607 414.069 308.209 415.467 308.209 417.19 cv
308.209 418.913 309.607 420.311 311.33 420.311 cv
313.053 420.311 314.451 418.913 314.451 417.19 cv
@
328.371 420.07 mo
328.371 418.347 326.973 416.949 325.25 416.949 cv
323.527 416.949 322.129 418.347 322.129 420.07 cv
322.129 421.793 323.527 423.191 325.25 423.191 cv
326.973 423.191 328.371 421.793 328.371 420.07 cv
328.371 420.07 li
cp
f
328.371 420.07 mo
328.371 418.347 326.973 416.949 325.25 416.949 cv
323.527 416.949 322.129 418.347 322.129 420.07 cv
322.129 421.793 323.527 423.191 325.25 423.191 cv
326.973 423.191 328.371 421.793 328.371 420.07 cv
@
342.292 419.35 mo
342.292 417.627 340.893 416.229 339.17 416.229 cv
337.447 416.229 336.049 417.627 336.049 419.35 cv
336.049 421.073 337.447 422.471 339.17 422.471 cv
340.893 422.471 342.292 421.073 342.292 419.35 cv
342.292 419.35 li
cp
f
342.292 419.35 mo
342.292 417.627 340.893 416.229 339.17 416.229 cv
337.447 416.229 336.049 417.627 336.049 419.35 cv
336.049 421.073 337.447 422.471 339.17 422.471 cv
340.893 422.471 342.292 421.073 342.292 419.35 cv
@
356.211 421.03 mo
356.211 419.307 354.813 417.909 353.09 417.909 cv
351.367 417.909 349.969 419.307 349.969 421.03 cv
349.969 422.753 351.367 424.151 353.09 424.151 cv
354.813 424.151 356.211 422.753 356.211 421.03 cv
356.211 421.03 li
cp
f
356.211 421.03 mo
356.211 419.307 354.813 417.909 353.09 417.909 cv
351.367 417.909 349.969 419.307 349.969 421.03 cv
349.969 422.753 351.367 424.151 353.09 424.151 cv
354.813 424.151 356.211 422.753 356.211 421.03 cv
@
370.131 419.831 mo
370.131 418.107 368.733 416.708 367.01 416.708 cv
365.288 416.708 363.889 418.107 363.889 419.831 cv
363.889 421.553 365.288 422.952 367.01 422.952 cv
368.733 422.952 370.131 421.553 370.131 419.831 cv
370.131 419.831 li
cp
f
370.131 419.831 mo
370.131 418.107 368.733 416.708 367.01 416.708 cv
365.288 416.708 363.889 418.107 363.889 419.831 cv
363.889 421.553 365.288 422.952 367.01 422.952 cv
368.733 422.952 370.131 421.553 370.131 419.831 cv
@
384.051 420.791 mo
384.051 419.067 382.653 417.668 380.93 417.668 cv
379.208 417.668 377.809 419.067 377.809 420.791 cv
377.809 422.513 379.208 423.912 380.93 423.912 cv
382.653 423.912 384.051 422.513 384.051 420.791 cv
384.051 420.791 li
cp
f
384.051 420.791 mo
384.051 419.067 382.653 417.668 380.93 417.668 cv
379.208 417.668 377.809 419.067 377.809 420.791 cv
377.809 422.513 379.208 423.912 380.93 423.912 cv
382.653 423.912 384.051 422.513 384.051 420.791 cv
@
397.971 420.55 mo
397.971 418.828 396.573 417.429 394.85 417.429 cv
393.127 417.429 391.729 418.828 391.729 420.55 cv
391.729 422.273 393.127 423.671 394.85 423.671 cv
396.573 423.671 397.971 422.273 397.971 420.55 cv
397.971 420.55 li
cp
f
397.971 420.55 mo
397.971 418.828 396.573 417.429 394.85 417.429 cv
393.127 417.429 391.729 418.828 391.729 420.55 cv
391.729 422.273 393.127 423.671 394.85 423.671 cv
396.573 423.671 397.971 422.273 397.971 420.55 cv
@
411.891 420.791 mo
411.891 419.067 410.493 417.668 408.77 417.668 cv
407.047 417.668 405.649 419.067 405.649 420.791 cv
405.649 422.513 407.047 423.912 408.77 423.912 cv
410.493 423.912 411.891 422.513 411.891 420.791 cv
411.891 420.791 li
cp
f
411.891 420.791 mo
411.891 419.067 410.493 417.668 408.77 417.668 cv
407.047 417.668 405.649 419.067 405.649 420.791 cv
405.649 422.513 407.047 423.912 408.77 423.912 cv
410.493 423.912 411.891 422.513 411.891 420.791 cv
@
425.572 420.31 mo
425.572 418.587 424.173 417.189 422.45 417.189 cv
420.727 417.189 419.329 418.587 419.329 420.31 cv
419.329 422.033 420.727 423.431 422.45 423.431 cv
424.173 423.431 425.572 422.033 425.572 420.31 cv
425.572 420.31 li
cp
f
425.572 420.31 mo
425.572 418.587 424.173 417.189 422.45 417.189 cv
420.727 417.189 419.329 418.587 419.329 420.31 cv
419.329 422.033 420.727 423.431 422.45 423.431 cv
424.173 423.431 425.572 422.033 425.572 420.31 cv
@
439.731 420.55 mo
439.731 418.828 438.333 417.429 436.61 417.429 cv
434.887 417.429 433.489 418.828 433.489 420.55 cv
433.489 422.273 434.887 423.671 436.61 423.671 cv
438.333 423.671 439.731 422.273 439.731 420.55 cv
439.731 420.55 li
cp
f
439.731 420.55 mo
439.731 418.828 438.333 417.429 436.61 417.429 cv
434.887 417.429 433.489 418.828 433.489 420.55 cv
433.489 422.273 434.887 423.671 436.61 423.671 cv
438.333 423.671 439.731 422.273 439.731 420.55 cv
@
453.531 420.07 mo
453.531 418.347 452.133 416.949 450.41 416.949 cv
448.687 416.949 447.289 418.347 447.289 420.07 cv
447.289 421.793 448.687 423.191 450.41 423.191 cv
452.133 423.191 453.531 421.793 453.531 420.07 cv
453.531 420.07 li
cp
f
453.531 420.07 mo
453.531 418.347 452.133 416.949 450.41 416.949 cv
448.687 416.949 447.289 418.347 447.289 420.07 cv
447.289 421.793 448.687 423.191 450.41 423.191 cv
452.133 423.191 453.531 421.793 453.531 420.07 cv
@
1.836 lw
269.564 365.624 mo
283.518 401.976 li
297.41 414.767 li
311.302 416.481 li
325.256 418.072 li
339.149 418.623 li
353.041 419.173 li
366.933 419.602 li
380.887 420.091 li
394.779 420.458 li
408.671 420.826 li
422.564 421.071 li
436.518 421.254 li
450.41 421.316 li
.648646 1 .217533 .0788281 cmyk
@
266.933 368.255 mo
266.933 362.992 li
272.257 362.992 li
272.257 368.255 li
266.933 368.255 li
cp
f
.918 lw
266.933 368.255 mo
266.933 362.992 li
272.257 362.992 li
272.257 368.255 li
266.933 368.255 li
266.933 368.255 li
cp
@
280.825 404.608 mo
280.825 399.345 li
286.149 399.345 li
286.149 404.608 li
280.825 404.608 li
cp
f
280.825 404.608 mo
280.825 399.345 li
286.149 399.345 li
286.149 404.608 li
280.825 404.608 li
280.825 404.608 li
cp
@
294.778 417.399 mo
294.778 412.135 li
300.042 412.135 li
300.042 417.399 li
294.778 417.399 li
cp
f
294.778 417.399 mo
294.778 412.135 li
300.042 412.135 li
300.042 417.399 li
294.778 417.399 li
294.778 417.399 li
cp
@
308.671 419.113 mo
308.671 413.789 li
313.995 413.789 li
313.995 419.113 li
308.671 419.113 li
cp
f
308.671 419.113 mo
308.671 413.789 li
313.995 413.789 li
313.995 419.113 li
308.671 419.113 li
308.671 419.113 li
cp
@
322.563 420.704 mo
322.563 415.441 li
327.888 415.441 li
327.888 420.704 li
322.563 420.704 li
cp
f
322.563 420.704 mo
322.563 415.441 li
327.888 415.441 li
327.888 420.704 li
322.563 420.704 li
322.563 420.704 li
cp
@
336.456 421.316 mo
336.456 415.992 li
341.78 415.992 li
341.78 421.316 li
336.456 421.316 li
cp
f
336.456 421.316 mo
336.456 415.992 li
341.78 415.992 li
341.78 421.316 li
336.456 421.316 li
336.456 421.316 li
cp
@
350.41 421.805 mo
350.41 416.542 li
355.672 416.542 li
355.672 421.805 li
350.41 421.805 li
cp
f
350.41 421.805 mo
350.41 416.542 li
355.672 416.542 li
355.672 421.805 li
350.41 421.805 li
350.41 421.805 li
cp
@
364.301 422.294 mo
364.301 416.97 li
369.626 416.97 li
369.626 422.294 li
364.301 422.294 li
cp
f
364.301 422.294 mo
364.301 416.97 li
369.626 416.97 li
369.626 422.294 li
364.301 422.294 li
364.301 422.294 li
cp
@
378.194 422.723 mo
378.194 417.46 li
383.518 417.46 li
383.518 422.723 li
378.194 422.723 li
cp
f
378.194 422.723 mo
378.194 417.46 li
383.518 417.46 li
383.518 422.723 li
378.194 422.723 li
378.194 422.723 li
cp
@
392.148 423.152 mo
392.148 417.828 li
397.411 417.828 li
397.411 423.152 li
392.148 423.152 li
cp
f
392.148 423.152 mo
392.148 417.828 li
397.411 417.828 li
397.411 423.152 li
392.148 423.152 li
392.148 423.152 li
cp
@
406.041 423.458 mo
406.041 418.195 li
411.365 418.195 li
411.365 423.458 li
406.041 423.458 li
cp
f
406.041 423.458 mo
406.041 418.195 li
411.365 418.195 li
411.365 423.458 li
406.041 423.458 li
406.041 423.458 li
cp
@
419.932 423.764 mo
419.932 418.439 li
425.257 418.439 li
425.257 423.764 li
419.932 423.764 li
cp
f
419.932 423.764 mo
419.932 418.439 li
425.257 418.439 li
425.257 423.764 li
419.932 423.764 li
419.932 423.764 li
cp
@
433.825 423.886 mo
433.825 418.623 li
439.149 418.623 li
439.149 423.886 li
433.825 423.886 li
cp
f
433.825 423.886 mo
433.825 418.623 li
439.149 418.623 li
439.149 423.886 li
433.825 423.886 li
433.825 423.886 li
cp
@
447.779 423.948 mo
447.779 418.623 li
453.042 418.623 li
453.042 423.948 li
447.779 423.948 li
cp
f
447.779 423.948 mo
447.779 418.623 li
453.042 418.623 li
453.042 423.948 li
447.779 423.948 li
447.779 423.948 li
cp
@
1.836 lw
281.314 327.128 mo
283.518 357.056 li
297.41 395.183 li
311.302 409.259 li
325.256 413.911 li
339.149 416.236 li
353.041 417.277 li
366.933 418.072 li
380.887 418.623 li
394.779 419.173 li
408.671 419.724 li
422.564 420.275 li
436.518 420.826 li
450.41 421.316 li
0 .408423 1 0 cmyk
@
283.518 353.934 mo
280.396 357.056 li
283.518 360.177 li
286.639 357.056 li
283.518 353.934 li
cp
f
.918 lw
283.518 353.934 mo
280.396 357.056 li
283.518 360.177 li
286.639 357.056 li
283.518 353.934 li
283.518 353.934 li
cp
@
297.41 392.062 mo
294.289 395.183 li
297.41 398.304 li
300.531 395.183 li
297.41 392.062 li
cp
f
297.41 392.062 mo
294.289 395.183 li
297.41 398.304 li
300.531 395.183 li
297.41 392.062 li
297.41 392.062 li
cp
@
311.302 406.138 mo
308.181 409.259 li
311.302 412.38 li
314.424 409.259 li
311.302 406.138 li
cp
f
311.302 406.138 mo
308.181 409.259 li
311.302 412.38 li
314.424 409.259 li
311.302 406.138 li
311.302 406.138 li
cp
@
325.256 410.79 mo
322.135 413.911 li
325.256 417.032 li
328.377 413.911 li
325.256 410.79 li
cp
f
325.256 410.79 mo
322.135 413.911 li
325.256 417.032 li
328.377 413.911 li
325.256 410.79 li
325.256 410.79 li
cp
@
339.149 413.115 mo
336.027 416.236 li
339.149 419.357 li
342.27 416.236 li
339.149 413.115 li
cp
f
339.149 413.115 mo
336.027 416.236 li
339.149 419.357 li
342.27 416.236 li
339.149 413.115 li
339.149 413.115 li
cp
@
353.041 414.156 mo
349.919 417.277 li
353.041 420.398 li
356.162 417.277 li
353.041 414.156 li
cp
f
353.041 414.156 mo
349.919 417.277 li
353.041 420.398 li
356.162 417.277 li
353.041 414.156 li
353.041 414.156 li
cp
@
366.933 414.951 mo
363.812 418.072 li
366.933 421.193 li
370.054 418.072 li
366.933 414.951 li
cp
f
366.933 414.951 mo
363.812 418.072 li
366.933 421.193 li
370.054 418.072 li
366.933 414.951 li
366.933 414.951 li
cp
@
380.887 415.501 mo
377.766 418.623 li
380.887 421.744 li
384.008 418.623 li
380.887 415.501 li
cp
f
380.887 415.501 mo
377.766 418.623 li
380.887 421.744 li
384.008 418.623 li
380.887 415.501 li
380.887 415.501 li
cp
@
394.779 416.052 mo
391.658 419.173 li
394.779 422.294 li
397.901 419.173 li
394.779 416.052 li
cp
f
394.779 416.052 mo
391.658 419.173 li
394.779 422.294 li
397.901 419.173 li
394.779 416.052 li
394.779 416.052 li
cp
@
408.671 416.603 mo
405.55 419.724 li
408.671 422.845 li
411.792 419.724 li
408.671 416.603 li
cp
f
408.671 416.603 mo
405.55 419.724 li
408.671 422.845 li
411.792 419.724 li
408.671 416.603 li
408.671 416.603 li
cp
@
422.564 417.154 mo
419.443 420.275 li
422.564 423.397 li
425.685 420.275 li
422.564 417.154 li
cp
f
422.564 417.154 mo
419.443 420.275 li
422.564 423.397 li
425.685 420.275 li
422.564 417.154 li
422.564 417.154 li
cp
@
436.518 417.705 mo
433.396 420.826 li
436.518 423.948 li
439.639 420.826 li
436.518 417.705 li
cp
f
436.518 417.705 mo
433.396 420.826 li
436.518 423.948 li
439.639 420.826 li
436.518 417.705 li
436.518 417.705 li
cp
@
450.41 418.195 mo
447.289 421.316 li
450.41 424.437 li
453.532 421.316 li
450.41 418.195 li
cp
f
450.41 418.195 mo
447.289 421.316 li
450.41 424.437 li
453.532 421.316 li
450.41 418.195 li
450.41 418.195 li
cp
@
1.836 lw
398.635 327.128 mo
408.671 336.493 li
422.564 346.713 li
436.518 355.159 li
450.41 362.319 li
.892363 .791409 0 0 cmyk
@
408.671 332.881 mo
405.55 338.267 li
411.792 338.267 li
408.671 332.881 li
cp
f
.918 lw
408.671 332.881 mo
405.55 338.267 li
411.792 338.267 li
408.671 332.881 li
408.671 332.881 li
cp
@
422.564 343.102 mo
419.443 348.549 li
425.685 348.549 li
422.564 343.102 li
cp
f
422.564 343.102 mo
419.443 348.549 li
425.685 348.549 li
422.564 343.102 li
422.564 343.102 li
cp
@
436.518 351.547 mo
433.396 356.933 li
439.639 356.933 li
436.518 351.547 li
cp
f
436.518 351.547 mo
433.396 356.933 li
439.639 356.933 li
436.518 351.547 li
436.518 351.547 li
cp
@
450.41 358.708 mo
447.289 364.155 li
453.532 364.155 li
450.41 358.708 li
cp
f
450.41 358.708 mo
447.289 364.155 li
453.532 364.155 li
450.41 358.708 li
450.41 358.708 li
cp
@
1.836 lw
[9.18 5.508 ] 0 dsh
450.471 421.132 mo
266.749 421.132 li
.43949 .376715 .225864 .00350958 cmyk
@
[] 0 dsh
266.81 449.59 mo
450.41 449.59 li
.75021 .679683 .670222 .90164 cmyk
@
.918 lw
450.41 449.59 mo
450.41 443.47 li
394.779 449.59 mo
394.779 443.47 li
339.149 449.59 mo
339.149 443.47 li
283.518 449.59 mo
283.518 443.47 li
422.564 449.59 mo
422.564 446.53 li
366.933 449.59 mo
366.933 446.53 li
311.302 449.59 mo
311.302 446.53 li
@
HQKXDQ+Times-Roman*1 [17.136 0 0 -17.136 0 0 ]msf279.404 467.218 mo(24)[55.6235 0 ]xshHQKXDQ+Times-Roman*1 [17.136 0 0 -17.136 0 0 ]msf390.802 467.453 mo(6)shHQKXDQ+Times-Roman*1 [17.136 0 0 -17.136 0 0 ]msf446.552 467.218 mo(8)shHQKXDR+Times-BoldItalic*1 [17.136 0 0 -17.136 0 0 ]msf342.146 485.57 mo(r)shHQKXDR+Times-BoldItalic*1 [12.1176 0 0 -12.1176 0 0 ]msf348.88 492.429 mo(c)shHQKXDR+Times-BoldItalic*1 [17.136 0 0 -17.136 0 0 ]msf354.138 485.57 mo( / a)sh1.836 lw
266.81 449.59 mo
266.81 327.19 li
@
.918 lw
266.81 327.19 mo
266.81 449.59 li
450.41 449.59 li
266.81 327.19 mo
272.93 327.19 li
266.81 388.39 mo
272.93 388.39 li
266.81 449.59 mo
272.93 449.59 li
266.81 357.791 mo
269.87 357.791 li
266.81 418.99 mo
269.87 418.99 li
@
1.836 lw
480.949 390.655 mo
483.764 445.123 li
497.717 404.241 li
511.61 432.699 li
525.502 424.804 li
539.457 426.824 li
553.348 424.621 li
567.241 423.703 li
581.133 421.193 li
595.086 420.153 li
608.979 419.296 li
622.872 418.806 li
636.764 418.562 li
650.717 418.439 li
664.61 418.378 li
.659174 .184604 1 .0302739 cmyk
@
486.771 445.03 mo
486.771 443.307 485.373 441.909 483.65 441.909 cv
481.927 441.909 480.529 443.307 480.529 445.03 cv
480.529 446.753 481.927 448.151 483.65 448.151 cv
485.373 448.151 486.771 446.753 486.771 445.03 cv
486.771 445.03 li
cp
f
.918 lw
486.771 445.03 mo
486.771 443.307 485.373 441.909 483.65 441.909 cv
481.927 441.909 480.529 443.307 480.529 445.03 cv
480.529 446.753 481.927 448.151 483.65 448.151 cv
485.373 448.151 486.771 446.753 486.771 445.03 cv
@
500.931 404.23 mo
500.931 402.507 499.533 401.109 497.81 401.109 cv
496.087 401.109 494.689 402.507 494.689 404.23 cv
494.689 405.953 496.087 407.351 497.81 407.351 cv
499.533 407.351 500.931 405.953 500.931 404.23 cv
500.931 404.23 li
cp
f
500.931 404.23 mo
500.931 402.507 499.533 401.109 497.81 401.109 cv
496.087 401.109 494.689 402.507 494.689 404.23 cv
494.689 405.953 496.087 407.351 497.81 407.351 cv
499.533 407.351 500.931 405.953 500.931 404.23 cv
@
514.731 432.791 mo
514.731 431.067 513.333 429.668 511.61 429.668 cv
509.887 429.668 508.489 431.067 508.489 432.791 cv
508.489 434.513 509.887 435.912 511.61 435.912 cv
513.333 435.912 514.731 434.513 514.731 432.791 cv
514.731 432.791 li
cp
f
514.731 432.791 mo
514.731 431.067 513.333 429.668 511.61 429.668 cv
509.887 429.668 508.489 431.067 508.489 432.791 cv
508.489 434.513 509.887 435.912 511.61 435.912 cv
513.333 435.912 514.731 434.513 514.731 432.791 cv
@
528.531 424.871 mo
528.531 423.147 527.133 421.749 525.41 421.749 cv
523.687 421.749 522.289 423.147 522.289 424.871 cv
522.289 426.593 523.687 427.992 525.41 427.992 cv
527.133 427.992 528.531 426.593 528.531 424.871 cv
528.531 424.871 li
cp
f
528.531 424.871 mo
528.531 423.147 527.133 421.749 525.41 421.749 cv
523.687 421.749 522.289 423.147 522.289 424.871 cv
522.289 426.593 523.687 427.992 525.41 427.992 cv
527.133 427.992 528.531 426.593 528.531 424.871 cv
@
542.691 426.791 mo
542.691 425.067 541.292 423.668 539.57 423.668 cv
537.847 423.668 536.449 425.067 536.449 426.791 cv
536.449 428.513 537.847 429.912 539.57 429.912 cv
541.292 429.912 542.691 428.513 542.691 426.791 cv
542.691 426.791 li
cp
f
542.691 426.791 mo
542.691 425.067 541.292 423.668 539.57 423.668 cv
537.847 423.668 536.449 425.067 536.449 426.791 cv
536.449 428.513 537.847 429.912 539.57 429.912 cv
541.292 429.912 542.691 428.513 542.691 426.791 cv
@
556.372 424.63 mo
556.372 422.908 554.973 421.509 553.25 421.509 cv
551.527 421.509 550.128 422.908 550.128 424.63 cv
550.128 426.353 551.527 427.751 553.25 427.751 cv
554.973 427.751 556.372 426.353 556.372 424.63 cv
556.372 424.63 li
cp
f
556.372 424.63 mo
556.372 422.908 554.973 421.509 553.25 421.509 cv
551.527 421.509 550.128 422.908 550.128 424.63 cv
550.128 426.353 551.527 427.751 553.25 427.751 cv
554.973 427.751 556.372 426.353 556.372 424.63 cv
@
570.292 423.67 mo
570.292 421.947 568.893 420.549 567.17 420.549 cv
565.447 420.549 564.049 421.947 564.049 423.67 cv
564.049 425.393 565.447 426.792 567.17 426.792 cv
568.893 426.792 570.292 425.393 570.292 423.67 cv
570.292 423.67 li
cp
f
570.292 423.67 mo
570.292 421.947 568.893 420.549 567.17 420.549 cv
565.447 420.549 564.049 421.947 564.049 423.67 cv
564.049 425.393 565.447 426.792 567.17 426.792 cv
568.893 426.792 570.292 425.393 570.292 423.67 cv
@
584.211 421.27 mo
584.211 419.547 582.813 418.149 581.09 418.149 cv
579.367 418.149 577.969 419.547 577.969 421.27 cv
577.969 422.993 579.367 424.391 581.09 424.391 cv
582.813 424.391 584.211 422.993 584.211 421.27 cv
584.211 421.27 li
cp
f
584.211 421.27 mo
584.211 419.547 582.813 418.149 581.09 418.149 cv
579.367 418.149 577.969 419.547 577.969 421.27 cv
577.969 422.993 579.367 424.391 581.09 424.391 cv
582.813 424.391 584.211 422.993 584.211 421.27 cv
@
598.131 420.07 mo
598.131 418.347 596.733 416.949 595.01 416.949 cv
593.288 416.949 591.889 418.347 591.889 420.07 cv
591.889 421.793 593.288 423.191 595.01 423.191 cv
596.733 423.191 598.131 421.793 598.131 420.07 cv
598.131 420.07 li
cp
f
598.131 420.07 mo
598.131 418.347 596.733 416.949 595.01 416.949 cv
593.288 416.949 591.889 418.347 591.889 420.07 cv
591.889 421.793 593.288 423.191 595.01 423.191 cv
596.733 423.191 598.131 421.793 598.131 420.07 cv
@
612.051 419.35 mo
612.051 417.627 610.653 416.229 608.93 416.229 cv
607.208 416.229 605.809 417.627 605.809 419.35 cv
605.809 421.073 607.208 422.471 608.93 422.471 cv
610.653 422.471 612.051 421.073 612.051 419.35 cv
612.051 419.35 li
cp
f
612.051 419.35 mo
612.051 417.627 610.653 416.229 608.93 416.229 cv
607.208 416.229 605.809 417.627 605.809 419.35 cv
605.809 421.073 607.208 422.471 608.93 422.471 cv
610.653 422.471 612.051 421.073 612.051 419.35 cv
@
625.971 418.871 mo
625.971 417.147 624.573 415.749 622.85 415.749 cv
621.127 415.749 619.729 417.147 619.729 418.871 cv
619.729 420.593 621.127 421.992 622.85 421.992 cv
624.573 421.992 625.971 420.593 625.971 418.871 cv
625.971 418.871 li
cp
f
625.971 418.871 mo
625.971 417.147 624.573 415.749 622.85 415.749 cv
621.127 415.749 619.729 417.147 619.729 418.871 cv
619.729 420.593 621.127 421.992 622.85 421.992 cv
624.573 421.992 625.971 420.593 625.971 418.871 cv
@
639.891 418.63 mo
639.891 416.908 638.493 415.509 636.77 415.509 cv
635.047 415.509 633.649 416.908 633.649 418.63 cv
633.649 420.353 635.047 421.751 636.77 421.751 cv
638.493 421.751 639.891 420.353 639.891 418.63 cv
639.891 418.63 li
cp
f
639.891 418.63 mo
639.891 416.908 638.493 415.509 636.77 415.509 cv
635.047 415.509 633.649 416.908 633.649 418.63 cv
633.649 420.353 635.047 421.751 636.77 421.751 cv
638.493 421.751 639.891 420.353 639.891 418.63 cv
@
653.811 418.39 mo
653.811 416.667 652.413 415.269 650.69 415.269 cv
648.967 415.269 647.569 416.667 647.569 418.39 cv
647.569 420.113 648.967 421.511 650.69 421.511 cv
652.413 421.511 653.811 420.113 653.811 418.39 cv
653.811 418.39 li
cp
f
653.811 418.39 mo
653.811 416.667 652.413 415.269 650.69 415.269 cv
648.967 415.269 647.569 416.667 647.569 418.39 cv
647.569 420.113 648.967 421.511 650.69 421.511 cv
652.413 421.511 653.811 420.113 653.811 418.39 cv
@
667.731 418.39 mo
667.731 416.667 666.333 415.269 664.61 415.269 cv
662.887 415.269 661.489 416.667 661.489 418.39 cv
661.489 420.113 662.887 421.511 664.61 421.511 cv
666.333 421.511 667.731 420.113 667.731 418.39 cv
667.731 418.39 li
cp
f
667.731 418.39 mo
667.731 416.667 666.333 415.269 664.61 415.269 cv
662.887 415.269 661.489 416.667 661.489 418.39 cv
661.489 420.113 662.887 421.511 664.61 421.511 cv
666.333 421.511 667.731 420.113 667.731 418.39 cv
@
1.836 lw
482.846 327.128 mo
483.764 366.297 li
497.717 404.302 li
511.61 419.724 li
525.502 424.375 li
539.457 428.17 li
553.348 429.272 li
567.241 428.476 li
581.133 426.457 li
595.086 424.07 li
608.979 421.927 li
622.872 420.398 li
636.764 419.48 li
650.717 418.929 li
664.61 418.684 li
.648646 1 .217533 .0788281 cmyk
@
481.132 368.928 mo
481.132 363.666 li
486.457 363.666 li
486.457 368.928 li
481.132 368.928 li
cp
f
.918 lw
481.132 368.928 mo
481.132 363.666 li
486.457 363.666 li
486.457 368.928 li
481.132 368.928 li
481.132 368.928 li
cp
@
495.025 406.934 mo
495.025 401.67 li
500.349 401.67 li
500.349 406.934 li
495.025 406.934 li
cp
f
495.025 406.934 mo
495.025 401.67 li
500.349 401.67 li
500.349 406.934 li
495.025 406.934 li
495.025 406.934 li
cp
@
508.978 422.356 mo
508.978 417.093 li
514.242 417.093 li
514.242 422.356 li
508.978 422.356 li
cp
f
508.978 422.356 mo
508.978 417.093 li
514.242 417.093 li
514.242 422.356 li
508.978 422.356 li
508.978 422.356 li
cp
@
522.871 427.069 mo
522.871 421.744 li
528.195 421.744 li
528.195 427.069 li
522.871 427.069 li
cp
f
522.871 427.069 mo
522.871 421.744 li
528.195 421.744 li
528.195 427.069 li
522.871 427.069 li
522.871 427.069 li
cp
@
536.763 430.801 mo
536.763 425.539 li
542.087 425.539 li
542.087 430.801 li
536.763 430.801 li
cp
f
536.763 430.801 mo
536.763 425.539 li
542.087 425.539 li
542.087 430.801 li
536.763 430.801 li
536.763 430.801 li
cp
@
550.656 431.903 mo
550.656 426.579 li
555.98 426.579 li
555.98 431.903 li
550.656 431.903 li
cp
f
550.656 431.903 mo
550.656 426.579 li
555.98 426.579 li
555.98 431.903 li
550.656 431.903 li
550.656 431.903 li
cp
@
564.609 431.168 mo
564.609 425.844 li
569.873 425.844 li
569.873 431.168 li
564.609 431.168 li
cp
f
564.609 431.168 mo
564.609 425.844 li
569.873 425.844 li
569.873 431.168 li
564.609 431.168 li
564.609 431.168 li
cp
@
578.501 429.149 mo
578.501 423.825 li
583.826 423.825 li
583.826 429.149 li
578.501 429.149 li
cp
f
578.501 429.149 mo
578.501 423.825 li
583.826 423.825 li
583.826 429.149 li
578.501 429.149 li
578.501 429.149 li
cp
@
592.394 426.762 mo
592.394 421.438 li
597.718 421.438 li
597.718 426.762 li
592.394 426.762 li
cp
f
592.394 426.762 mo
592.394 421.438 li
597.718 421.438 li
597.718 426.762 li
592.394 426.762 li
592.394 426.762 li
cp
@
606.347 424.621 mo
606.347 419.296 li
611.611 419.296 li
611.611 424.621 li
606.347 424.621 li
cp
f
606.347 424.621 mo
606.347 419.296 li
611.611 419.296 li
611.611 424.621 li
606.347 424.621 li
606.347 424.621 li
cp
@
620.24 423.03 mo
620.24 417.766 li
625.564 417.766 li
625.564 423.03 li
620.24 423.03 li
cp
f
620.24 423.03 mo
620.24 417.766 li
625.564 417.766 li
625.564 423.03 li
620.24 423.03 li
620.24 423.03 li
cp
@
634.132 422.111 mo
634.132 416.787 li
639.457 416.787 li
639.457 422.111 li
634.132 422.111 li
cp
f
634.132 422.111 mo
634.132 416.787 li
639.457 416.787 li
639.457 422.111 li
634.132 422.111 li
634.132 422.111 li
cp
@
648.025 421.56 mo
648.025 416.297 li
653.349 416.297 li
653.349 421.56 li
648.025 421.56 li
cp
f
648.025 421.56 mo
648.025 416.297 li
653.349 416.297 li
653.349 421.56 li
648.025 421.56 li
648.025 421.56 li
cp
@
661.978 421.316 mo
661.978 416.052 li
667.242 416.052 li
667.242 421.316 li
661.978 421.316 li
cp
f
661.978 421.316 mo
661.978 416.052 li
667.242 416.052 li
667.242 421.316 li
661.978 421.316 li
661.978 421.316 li
cp
@
1.836 lw
495.514 327.128 mo
497.717 357.24 li
511.61 396.53 li
525.502 413.115 li
539.457 421.56 li
553.348 427.68 li
567.241 431.168 li
581.133 431.903 li
595.086 430.312 li
608.979 427.375 li
622.872 424.375 li
636.764 421.927 li
650.717 420.275 li
664.61 419.296 li
0 .408423 1 0 cmyk
@
497.717 354.118 mo
494.596 357.24 li
497.717 360.361 li
500.839 357.24 li
497.717 354.118 li
cp
f
.918 lw
497.717 354.118 mo
494.596 357.24 li
497.717 360.361 li
500.839 357.24 li
497.717 354.118 li
497.717 354.118 li
cp
@
511.61 393.409 mo
508.489 396.53 li
511.61 399.651 li
514.731 396.53 li
511.61 393.409 li
cp
f
511.61 393.409 mo
508.489 396.53 li
511.61 399.651 li
514.731 396.53 li
511.61 393.409 li
511.61 393.409 li
cp
@
525.502 409.994 mo
522.381 413.115 li
525.502 416.236 li
528.624 413.115 li
525.502 409.994 li
cp
f
525.502 409.994 mo
522.381 413.115 li
525.502 416.236 li
528.624 413.115 li
525.502 409.994 li
525.502 409.994 li
cp
@
539.457 418.439 mo
536.334 421.56 li
539.457 424.682 li
542.578 421.56 li
539.457 418.439 li
cp
f
539.457 418.439 mo
536.334 421.56 li
539.457 424.682 li
542.578 421.56 li
539.457 418.439 li
539.457 418.439 li
cp
@
553.348 424.559 mo
550.227 427.68 li
553.348 430.801 li
556.47 427.68 li
553.348 424.559 li
cp
f
553.348 424.559 mo
550.227 427.68 li
553.348 430.801 li
556.47 427.68 li
553.348 424.559 li
553.348 424.559 li
cp
@
567.241 428.047 mo
564.12 431.168 li
567.241 434.291 li
570.362 431.168 li
567.241 428.047 li
cp
f
567.241 428.047 mo
564.12 431.168 li
567.241 434.291 li
570.362 431.168 li
567.241 428.047 li
567.241 428.047 li
cp
@
581.133 428.782 mo
578.012 431.903 li
581.133 435.025 li
584.254 431.903 li
581.133 428.782 li
cp
f
581.133 428.782 mo
578.012 431.903 li
581.133 435.025 li
584.254 431.903 li
581.133 428.782 li
581.133 428.782 li
cp
@
595.086 427.191 mo
591.965 430.312 li
595.086 433.433 li
598.208 430.312 li
595.086 427.191 li
cp
f
595.086 427.191 mo
591.965 430.312 li
595.086 433.433 li
598.208 430.312 li
595.086 427.191 li
595.086 427.191 li
cp
@
608.979 424.253 mo
605.858 427.375 li
608.979 430.496 li
612.1 427.375 li
608.979 424.253 li
cp
f
608.979 424.253 mo
605.858 427.375 li
608.979 430.496 li
612.1 427.375 li
608.979 424.253 li
608.979 424.253 li
cp
@
622.872 421.254 mo
619.75 424.375 li
622.872 427.497 li
625.993 424.375 li
622.872 421.254 li
cp
f
622.872 421.254 mo
619.75 424.375 li
622.872 427.497 li
625.993 424.375 li
622.872 421.254 li
622.872 421.254 li
cp
@
636.764 418.806 mo
633.643 421.927 li
636.764 425.049 li
639.885 421.927 li
636.764 418.806 li
cp
f
636.764 418.806 mo
633.643 421.927 li
636.764 425.049 li
639.885 421.927 li
636.764 418.806 li
636.764 418.806 li
cp
@
650.717 417.154 mo
647.596 420.275 li
650.717 423.397 li
653.839 420.275 li
650.717 417.154 li
cp
f
650.717 417.154 mo
647.596 420.275 li
650.717 423.397 li
653.839 420.275 li
650.717 417.154 li
650.717 417.154 li
cp
@
664.61 416.175 mo
661.489 419.296 li
664.61 422.417 li
667.731 419.296 li
664.61 416.175 li
cp
f
664.61 416.175 mo
661.489 419.296 li
664.61 422.417 li
667.731 419.296 li
664.61 416.175 li
664.61 416.175 li
cp
@
1.836 lw
595.026 327.128 mo
595.086 327.19 li
608.979 359.136 li
622.872 383.372 li
636.764 399.651 li
650.717 409.381 li
664.61 414.523 li
.892363 .791409 0 0 cmyk
@
595.086 323.58 mo
591.965 329.026 li
598.208 329.026 li
595.086 323.58 li
cp
f
.918 lw
595.086 323.58 mo
591.965 329.026 li
598.208 329.026 li
595.086 323.58 li
595.086 323.58 li
cp
@
608.979 355.526 mo
605.858 360.972 li
612.1 360.972 li
608.979 355.526 li
cp
f
608.979 355.526 mo
605.858 360.972 li
612.1 360.972 li
608.979 355.526 li
608.979 355.526 li
cp
@
622.872 379.761 mo
619.75 385.147 li
625.993 385.147 li
622.872 379.761 li
cp
f
622.872 379.761 mo
619.75 385.147 li
625.993 385.147 li
622.872 379.761 li
622.872 379.761 li
cp
@
636.764 396.041 mo
633.643 401.425 li
639.885 401.425 li
636.764 396.041 li
cp
f
636.764 396.041 mo
633.643 401.425 li
639.885 401.425 li
636.764 396.041 li
636.764 396.041 li
cp
@
650.717 405.771 mo
647.596 411.157 li
653.839 411.157 li
650.717 405.771 li
cp
f
650.717 405.771 mo
647.596 411.157 li
653.839 411.157 li
650.717 405.771 li
650.717 405.771 li
cp
@
664.61 410.912 mo
661.489 416.297 li
667.731 416.297 li
664.61 410.912 li
cp
f
664.61 410.912 mo
661.489 416.297 li
667.731 416.297 li
664.61 410.912 li
664.61 410.912 li
cp
@
1.836 lw
[9.18 5.508 ] 0 dsh
664.671 421.132 mo
480.949 421.132 li
.43949 .376715 .225864 .00350958 cmyk
@
[] 0 dsh
481.01 449.59 mo
664.61 449.59 li
.75021 .679683 .670222 .90164 cmyk
@
.918 lw
664.61 449.59 mo
664.61 443.47 li
608.979 449.59 mo
608.979 443.47 li
553.348 449.59 mo
553.348 443.47 li
497.717 449.59 mo
497.717 443.47 li
636.764 449.59 mo
636.764 446.53 li
581.133 449.59 mo
581.133 446.53 li
525.502 449.59 mo
525.502 446.53 li
@
HQKXDQ+Times-Roman*1 [17.136 0 0 -17.136 0 0 ]msf493.623 467.218 mo(24)[55.623 0 ]xshHQKXDQ+Times-Roman*1 [17.136 0 0 -17.136 0 0 ]msf604.998 467.453 mo(6)shHQKXDQ+Times-Roman*1 [17.136 0 0 -17.136 0 0 ]msf660.755 467.218 mo(8)shHQKXDR+Times-BoldItalic*1 [17.136 0 0 -17.136 0 0 ]msf556.349 485.57 mo(r)shHQKXDR+Times-BoldItalic*1 [12.1176 0 0 -12.1176 0 0 ]msf563.076 492.429 mo(c)shHQKXDR+Times-BoldItalic*1 [17.136 0 0 -17.136 0 0 ]msf568.341 485.57 mo( / a)sh1.836 lw
481.01 449.59 mo
481.01 327.19 li
@
.918 lw
481.01 327.19 mo
481.01 449.59 li
664.61 449.59 li
481.01 327.19 mo
487.13 327.19 li
481.01 388.39 mo
487.13 388.39 li
481.01 449.59 mo
487.13 449.59 li
481.01 357.791 mo
484.07 357.791 li
481.01 418.99 mo
484.07 418.99 li
@
1.836 lw
483.764 138.816 mo
497.717 79.3301 li
511.61 120.457 li
525.502 116.356 li
539.457 120.824 li
553.348 115.744 li
567.241 113.602 li
581.133 110.481 li
595.086 107.727 li
608.979 106.38 li
622.872 105.585 li
636.764 105.279 li
650.717 105.034 li
664.61 104.973 li
.659174 .184604 1 .0302739 cmyk
@
486.771 138.79 mo
486.771 137.067 485.373 135.669 483.65 135.669 cv
481.927 135.669 480.529 137.067 480.529 138.79 cv
480.529 140.513 481.927 141.911 483.65 141.911 cv
485.373 141.911 486.771 140.513 486.771 138.79 cv
486.771 138.79 li
cp
f
.918 lw
486.771 138.79 mo
486.771 137.067 485.373 135.669 483.65 135.669 cv
481.927 135.669 480.529 137.067 480.529 138.79 cv
480.529 140.513 481.927 141.911 483.65 141.911 cv
485.373 141.911 486.771 140.513 486.771 138.79 cv
@
500.931 79.27 mo
500.931 77.5474 499.533 76.1489 497.81 76.1489 cv
496.087 76.1489 494.689 77.5474 494.689 79.27 cv
494.689 80.9932 496.087 82.3911 497.81 82.3911 cv
499.533 82.3911 500.931 80.9932 500.931 79.27 cv
500.931 79.27 li
cp
f
500.931 79.27 mo
500.931 77.5474 499.533 76.1489 497.81 76.1489 cv
496.087 76.1489 494.689 77.5474 494.689 79.27 cv
494.689 80.9932 496.087 82.3911 497.81 82.3911 cv
499.533 82.3911 500.931 80.9932 500.931 79.27 cv
@
514.731 120.55 mo
514.731 118.827 513.333 117.429 511.61 117.429 cv
509.887 117.429 508.489 118.827 508.489 120.55 cv
508.489 122.273 509.887 123.671 511.61 123.671 cv
513.333 123.671 514.731 122.273 514.731 120.55 cv
514.731 120.55 li
cp
f
514.731 120.55 mo
514.731 118.827 513.333 117.429 511.61 117.429 cv
509.887 117.429 508.489 118.827 508.489 120.55 cv
508.489 122.273 509.887 123.671 511.61 123.671 cv
513.333 123.671 514.731 122.273 514.731 120.55 cv
@
528.531 116.47 mo
528.531 114.747 527.133 113.349 525.41 113.349 cv
523.687 113.349 522.289 114.747 522.289 116.47 cv
522.289 118.193 523.687 119.591 525.41 119.591 cv
527.133 119.591 528.531 118.193 528.531 116.47 cv
528.531 116.47 li
cp
f
528.531 116.47 mo
528.531 114.747 527.133 113.349 525.41 113.349 cv
523.687 113.349 522.289 114.747 522.289 116.47 cv
522.289 118.193 523.687 119.591 525.41 119.591 cv
527.133 119.591 528.531 118.193 528.531 116.47 cv
@
542.691 120.79 mo
542.691 119.067 541.292 117.669 539.57 117.669 cv
537.847 117.669 536.449 119.067 536.449 120.79 cv
536.449 122.513 537.847 123.911 539.57 123.911 cv
541.292 123.911 542.691 122.513 542.691 120.79 cv
542.691 120.79 li
cp
f
542.691 120.79 mo
542.691 119.067 541.292 117.669 539.57 117.669 cv
537.847 117.669 536.449 119.067 536.449 120.79 cv
536.449 122.513 537.847 123.911 539.57 123.911 cv
541.292 123.911 542.691 122.513 542.691 120.79 cv
@
556.372 115.75 mo
556.372 114.027 554.973 112.629 553.25 112.629 cv
551.527 112.629 550.128 114.027 550.128 115.75 cv
550.128 117.473 551.527 118.871 553.25 118.871 cv
554.973 118.871 556.372 117.473 556.372 115.75 cv
556.372 115.75 li
cp
f
556.372 115.75 mo
556.372 114.027 554.973 112.629 553.25 112.629 cv
551.527 112.629 550.128 114.027 550.128 115.75 cv
550.128 117.473 551.527 118.871 553.25 118.871 cv
554.973 118.871 556.372 117.473 556.372 115.75 cv
@
570.292 113.59 mo
570.292 111.867 568.893 110.469 567.17 110.469 cv
565.447 110.469 564.049 111.867 564.049 113.59 cv
564.049 115.313 565.447 116.711 567.17 116.711 cv
568.893 116.711 570.292 115.313 570.292 113.59 cv
570.292 113.59 li
cp
f
570.292 113.59 mo
570.292 111.867 568.893 110.469 567.17 110.469 cv
565.447 110.469 564.049 111.867 564.049 113.59 cv
564.049 115.313 565.447 116.711 567.17 116.711 cv
568.893 116.711 570.292 115.313 570.292 113.59 cv
@
584.211 110.47 mo
584.211 108.747 582.813 107.349 581.09 107.349 cv
579.367 107.349 577.969 108.747 577.969 110.47 cv
577.969 112.193 579.367 113.591 581.09 113.591 cv
582.813 113.591 584.211 112.193 584.211 110.47 cv
584.211 110.47 li
cp
f
584.211 110.47 mo
584.211 108.747 582.813 107.349 581.09 107.349 cv
579.367 107.349 577.969 108.747 577.969 110.47 cv
577.969 112.193 579.367 113.591 581.09 113.591 cv
582.813 113.591 584.211 112.193 584.211 110.47 cv
@
598.131 107.83 mo
598.131 106.107 596.733 104.709 595.01 104.709 cv
593.288 104.709 591.889 106.107 591.889 107.83 cv
591.889 109.553 593.288 110.951 595.01 110.951 cv
596.733 110.951 598.131 109.553 598.131 107.83 cv
598.131 107.83 li
cp
f
598.131 107.83 mo
598.131 106.107 596.733 104.709 595.01 104.709 cv
593.288 104.709 591.889 106.107 591.889 107.83 cv
591.889 109.553 593.288 110.951 595.01 110.951 cv
596.733 110.951 598.131 109.553 598.131 107.83 cv
@
612.051 106.39 mo
612.051 104.667 610.653 103.269 608.93 103.269 cv
607.208 103.269 605.809 104.667 605.809 106.39 cv
605.809 108.113 607.208 109.511 608.93 109.511 cv
610.653 109.511 612.051 108.113 612.051 106.39 cv
612.051 106.39 li
cp
f
612.051 106.39 mo
612.051 104.667 610.653 103.269 608.93 103.269 cv
607.208 103.269 605.809 104.667 605.809 106.39 cv
605.809 108.113 607.208 109.511 608.93 109.511 cv
610.653 109.511 612.051 108.113 612.051 106.39 cv
@
625.971 105.67 mo
625.971 103.947 624.573 102.549 622.85 102.549 cv
621.127 102.549 619.729 103.947 619.729 105.67 cv
619.729 107.393 621.127 108.792 622.85 108.792 cv
624.573 108.792 625.971 107.393 625.971 105.67 cv
625.971 105.67 li
cp
f
625.971 105.67 mo
625.971 103.947 624.573 102.549 622.85 102.549 cv
621.127 102.549 619.729 103.947 619.729 105.67 cv
619.729 107.393 621.127 108.792 622.85 108.792 cv
624.573 108.792 625.971 107.393 625.971 105.67 cv
@
639.891 105.19 mo
639.891 103.467 638.493 102.069 636.77 102.069 cv
635.047 102.069 633.649 103.467 633.649 105.19 cv
633.649 106.913 635.047 108.312 636.77 108.312 cv
638.493 108.312 639.891 106.913 639.891 105.19 cv
639.891 105.19 li
cp
f
639.891 105.19 mo
639.891 103.467 638.493 102.069 636.77 102.069 cv
635.047 102.069 633.649 103.467 633.649 105.19 cv
633.649 106.913 635.047 108.312 636.77 108.312 cv
638.493 108.312 639.891 106.913 639.891 105.19 cv
@
653.811 104.95 mo
653.811 103.227 652.413 101.829 650.69 101.829 cv
648.967 101.829 647.569 103.227 647.569 104.95 cv
647.569 106.673 648.967 108.071 650.69 108.071 cv
652.413 108.071 653.811 106.673 653.811 104.95 cv
653.811 104.95 li
cp
f
653.811 104.95 mo
653.811 103.227 652.413 101.829 650.69 101.829 cv
648.967 101.829 647.569 103.227 647.569 104.95 cv
647.569 106.673 648.967 108.071 650.69 108.071 cv
652.413 108.071 653.811 106.673 653.811 104.95 cv
@
667.731 104.95 mo
667.731 103.227 666.333 101.829 664.61 101.829 cv
662.887 101.829 661.489 103.227 661.489 104.95 cv
661.489 106.673 662.887 108.071 664.61 108.071 cv
666.333 108.071 667.731 106.673 667.731 104.95 cv
667.731 104.95 li
cp
f
667.731 104.95 mo
667.731 103.227 666.333 101.829 664.61 101.829 cv
662.887 101.829 661.489 103.227 661.489 104.95 cv
661.489 106.673 662.887 108.071 664.61 108.071 cv
666.333 108.071 667.731 106.673 667.731 104.95 cv
@
1.836 lw
483.764 58.2163 mo
497.717 85.2666 li
511.61 110.542 li
525.502 118.131 li
539.457 123.517 li
553.348 124.924 li
567.241 123.578 li
581.133 119.845 li
595.086 115.5 li
608.979 111.644 li
622.872 108.89 li
636.764 107.115 li
650.717 106.197 li
664.61 105.769 li
.648646 1 .217533 .0788281 cmyk
@
481.132 60.8477 mo
481.132 55.5234 li
486.457 55.5234 li
486.457 60.8477 li
481.132 60.8477 li
cp
f
.918 lw
481.132 60.8477 mo
481.132 55.5234 li
486.457 55.5234 li
486.457 60.8477 li
481.132 60.8477 li
481.132 60.8477 li
cp
@
495.025 87.8979 mo
495.025 82.6348 li
500.349 82.6348 li
500.349 87.8979 li
495.025 87.8979 li
cp
f
495.025 87.8979 mo
495.025 82.6348 li
500.349 82.6348 li
500.349 87.8979 li
495.025 87.8979 li
495.025 87.8979 li
cp
@
508.978 113.235 mo
508.978 107.911 li
514.242 107.911 li
514.242 113.235 li
508.978 113.235 li
cp
f
508.978 113.235 mo
508.978 107.911 li
514.242 107.911 li
514.242 113.235 li
508.978 113.235 li
508.978 113.235 li
cp
@
522.871 120.763 mo
522.871 115.438 li
528.195 115.438 li
528.195 120.763 li
522.871 120.763 li
cp
f
522.871 120.763 mo
522.871 115.438 li
528.195 115.438 li
528.195 120.763 li
522.871 120.763 li
522.871 120.763 li
cp
@
536.763 126.148 mo
536.763 120.824 li
542.087 120.824 li
542.087 126.148 li
536.763 126.148 li
cp
f
536.763 126.148 mo
536.763 120.824 li
542.087 120.824 li
542.087 126.148 li
536.763 126.148 li
536.763 126.148 li
cp
@
550.656 127.617 mo
550.656 122.292 li
555.98 122.292 li
555.98 127.617 li
550.656 127.617 li
cp
f
550.656 127.617 mo
550.656 122.292 li
555.98 122.292 li
555.98 127.617 li
550.656 127.617 li
550.656 127.617 li
cp
@
564.609 126.209 mo
564.609 120.946 li
569.873 120.946 li
569.873 126.209 li
564.609 126.209 li
cp
f
564.609 126.209 mo
564.609 120.946 li
569.873 120.946 li
569.873 126.209 li
564.609 126.209 li
564.609 126.209 li
cp
@
578.501 122.537 mo
578.501 117.213 li
583.826 117.213 li
583.826 122.537 li
578.501 122.537 li
cp
f
578.501 122.537 mo
578.501 117.213 li
583.826 117.213 li
583.826 122.537 li
578.501 122.537 li
578.501 122.537 li
cp
@
592.394 118.131 mo
592.394 112.807 li
597.718 112.807 li
597.718 118.131 li
592.394 118.131 li
cp
f
592.394 118.131 mo
592.394 112.807 li
597.718 112.807 li
597.718 118.131 li
592.394 118.131 li
592.394 118.131 li
cp
@
606.347 114.336 mo
606.347 109.012 li
611.611 109.012 li
611.611 114.336 li
606.347 114.336 li
cp
f
606.347 114.336 mo
606.347 109.012 li
611.611 109.012 li
611.611 114.336 li
606.347 114.336 li
606.347 114.336 li
cp
@
620.24 111.521 mo
620.24 106.258 li
625.564 106.258 li
625.564 111.521 li
620.24 111.521 li
cp
f
620.24 111.521 mo
620.24 106.258 li
625.564 106.258 li
625.564 111.521 li
620.24 111.521 li
620.24 111.521 li
cp
@
634.132 109.808 mo
634.132 104.483 li
639.457 104.483 li
639.457 109.808 li
634.132 109.808 li
cp
f
634.132 109.808 mo
634.132 104.483 li
639.457 104.483 li
639.457 109.808 li
634.132 109.808 li
634.132 109.808 li
cp
@
648.025 108.89 mo
648.025 103.565 li
653.349 103.565 li
653.349 108.89 li
648.025 108.89 li
cp
f
648.025 108.89 mo
648.025 103.565 li
653.349 103.565 li
653.349 108.89 li
648.025 108.89 li
648.025 108.89 li
cp
@
661.978 108.4 mo
661.978 103.137 li
667.242 103.137 li
667.242 108.4 li
661.978 108.4 li
cp
f
661.978 108.4 mo
661.978 103.137 li
667.242 103.137 li
667.242 108.4 li
661.978 108.4 li
661.978 108.4 li
cp
@
1.836 lw
496.494 21.1289 mo
497.717 39.7949 li
511.61 82.1455 li
525.502 102.402 li
539.457 114.03 li
553.348 123.639 li
567.241 129.086 li
581.133 130.004 li
595.086 126.882 li
608.979 121.558 li
622.872 115.989 li
636.764 111.583 li
650.717 108.583 li
664.61 106.931 li
0 .408423 1 0 cmyk
@
497.717 36.6738 mo
494.596 39.7949 li
497.717 42.916 li
500.839 39.7949 li
497.717 36.6738 li
cp
f
.918 lw
497.717 36.6738 mo
494.596 39.7949 li
497.717 42.916 li
500.839 39.7949 li
497.717 36.6738 li
497.717 36.6738 li
cp
@
511.61 79.0239 mo
508.489 82.1455 li
511.61 85.2666 li
514.731 82.1455 li
511.61 79.0239 li
cp
f
511.61 79.0239 mo
508.489 82.1455 li
511.61 85.2666 li
514.731 82.1455 li
511.61 79.0239 li
511.61 79.0239 li
cp
@
525.502 99.2813 mo
522.381 102.402 li
525.502 105.524 li
528.624 102.402 li
525.502 99.2813 li
cp
f
525.502 99.2813 mo
522.381 102.402 li
525.502 105.524 li
528.624 102.402 li
525.502 99.2813 li
525.502 99.2813 li
cp
@
539.457 110.909 mo
536.334 114.03 li
539.457 117.152 li
542.578 114.03 li
539.457 110.909 li
cp
f
539.457 110.909 mo
536.334 114.03 li
539.457 117.152 li
542.578 114.03 li
539.457 110.909 li
539.457 110.909 li
cp
@
553.348 120.518 mo
550.227 123.639 li
553.348 126.76 li
556.47 123.639 li
553.348 120.518 li
cp
f
553.348 120.518 mo
550.227 123.639 li
553.348 126.76 li
556.47 123.639 li
553.348 120.518 li
553.348 120.518 li
cp
@
567.241 125.964 mo
564.12 129.086 li
567.241 132.207 li
570.362 129.086 li
567.241 125.964 li
cp
f
567.241 125.964 mo
564.12 129.086 li
567.241 132.207 li
570.362 129.086 li
567.241 125.964 li
567.241 125.964 li
cp
@
581.133 126.882 mo
578.012 130.004 li
581.133 133.125 li
584.254 130.004 li
581.133 126.882 li
cp
f
581.133 126.882 mo
578.012 130.004 li
581.133 133.125 li
584.254 130.004 li
581.133 126.882 li
581.133 126.882 li
cp
@
595.086 123.761 mo
591.965 126.882 li
595.086 130.004 li
598.208 126.882 li
595.086 123.761 li
cp
f
595.086 123.761 mo
591.965 126.882 li
595.086 130.004 li
598.208 126.882 li
595.086 123.761 li
595.086 123.761 li
cp
@
608.979 118.437 mo
605.858 121.558 li
608.979 124.679 li
612.1 121.558 li
608.979 118.437 li
cp
f
608.979 118.437 mo
605.858 121.558 li
608.979 124.679 li
612.1 121.558 li
608.979 118.437 li
608.979 118.437 li
cp
@
622.872 112.868 mo
619.75 115.989 li
622.872 119.11 li
625.993 115.989 li
622.872 112.868 li
cp
f
622.872 112.868 mo
619.75 115.989 li
622.872 119.11 li
625.993 115.989 li
622.872 112.868 li
622.872 112.868 li
cp
@
636.764 108.461 mo
633.643 111.583 li
636.764 114.704 li
639.885 111.583 li
636.764 108.461 li
cp
f
636.764 108.461 mo
633.643 111.583 li
636.764 114.704 li
639.885 111.583 li
636.764 108.461 li
636.764 108.461 li
cp
@
650.717 105.462 mo
647.596 108.583 li
650.717 111.705 li
653.839 108.583 li
650.717 105.462 li
cp
f
650.717 105.462 mo
647.596 108.583 li
650.717 111.705 li
653.839 108.583 li
650.717 105.462 li
650.717 105.462 li
cp
@
664.61 103.81 mo
661.489 106.931 li
664.61 110.052 li
667.731 106.931 li
664.61 103.81 li
cp
f
664.61 103.81 mo
661.489 106.931 li
664.61 110.052 li
667.731 106.931 li
664.61 103.81 li
664.61 103.81 li
cp
@
1.836 lw
597.107 21.1289 mo
608.979 47.4448 li
622.872 71.0068 li
636.764 86.9189 li
650.717 96.4048 li
664.61 101.484 li
.892363 .791409 0 0 cmyk
@
608.979 43.8955 mo
605.858 49.2808 li
612.1 49.2808 li
608.979 43.8955 li
cp
f
.918 lw
608.979 43.8955 mo
605.858 49.2808 li
612.1 49.2808 li
608.979 43.8955 li
608.979 43.8955 li
cp
@
622.872 67.396 mo
619.75 72.7817 li
625.993 72.7817 li
622.872 67.396 li
cp
f
622.872 67.396 mo
619.75 72.7817 li
625.993 72.7817 li
622.872 67.396 li
622.872 67.396 li
cp
@
636.764 83.3081 mo
633.643 88.6938 li
639.885 88.6938 li
636.764 83.3081 li
cp
f
636.764 83.3081 mo
633.643 88.6938 li
639.885 88.6938 li
636.764 83.3081 li
636.764 83.3081 li
cp
@
650.717 92.8555 mo
647.596 98.2407 li
653.839 98.2407 li
650.717 92.8555 li
cp
f
650.717 92.8555 mo
647.596 98.2407 li
653.839 98.2407 li
650.717 92.8555 li
650.717 92.8555 li
cp
@
664.61 97.8735 mo
661.489 103.32 li
667.731 103.32 li
664.61 97.8735 li
cp
f
664.61 97.8735 mo
661.489 103.32 li
667.731 103.32 li
664.61 97.8735 li
664.61 97.8735 li
cp
@
1.836 lw
[9.18 5.508 ] 0 dsh
664.671 109.318 mo
480.949 109.318 li
.43949 .376715 .225864 .00350958 cmyk
@
[1.836 5.508 ] 0 dsh
481.01 143.59 mo
664.61 143.59 li
.75021 .679683 .670222 .90164 cmyk
@
[] 0 dsh
481.01 143.59 mo
481.01 21.1899 li
@
.918 lw
481.01 45.6699 mo
487.13 45.6699 li
481.01 82.3901 mo
487.13 82.3901 li
481.01 119.11 mo
487.13 119.11 li
481.01 27.3101 mo
484.07 27.3101 li
481.01 64.0303 mo
484.07 64.0303 li
481.01 100.75 mo
484.07 100.75 li
481.01 137.47 mo
484.07 137.47 li
@
1.836 lw
266.749 259.197 mo
269.564 289.369 li
283.518 244.999 li
297.41 266.173 li
311.302 259.258 li
325.256 262.747 li
339.149 260.666 li
353.041 262.134 li
366.933 261.583 li
380.887 262.196 li
394.779 261.89 li
408.671 262.074 li
422.564 261.829 li
436.518 261.829 li
450.41 261.523 li
.659174 .184604 1 .0302739 cmyk
@
272.691 289.27 mo
272.691 287.547 271.293 286.149 269.57 286.149 cv
267.847 286.149 266.449 287.547 266.449 289.27 cv
266.449 290.993 267.847 292.391 269.57 292.391 cv
271.293 292.391 272.691 290.993 272.691 289.27 cv
272.691 289.27 li
cp
f
.918 lw
272.691 289.27 mo
272.691 287.547 271.293 286.149 269.57 286.149 cv
267.847 286.149 266.449 287.547 266.449 289.27 cv
266.449 290.993 267.847 292.391 269.57 292.391 cv
271.293 292.391 272.691 290.993 272.691 289.27 cv
@
286.611 245.11 mo
286.611 243.387 285.213 241.989 283.49 241.989 cv
281.767 241.989 280.369 243.387 280.369 245.11 cv
280.369 246.833 281.767 248.232 283.49 248.232 cv
285.213 248.232 286.611 246.833 286.611 245.11 cv
286.611 245.11 li
cp
f
286.611 245.11 mo
286.611 243.387 285.213 241.989 283.49 241.989 cv
281.767 241.989 280.369 243.387 280.369 245.11 cv
280.369 246.833 281.767 248.232 283.49 248.232 cv
285.213 248.232 286.611 246.833 286.611 245.11 cv
@
300.531 266.23 mo
300.531 264.507 299.133 263.109 297.41 263.109 cv
295.687 263.109 294.289 264.507 294.289 266.23 cv
294.289 267.953 295.687 269.351 297.41 269.351 cv
299.133 269.351 300.531 267.953 300.531 266.23 cv
300.531 266.23 li
cp
f
300.531 266.23 mo
300.531 264.507 299.133 263.109 297.41 263.109 cv
295.687 263.109 294.289 264.507 294.289 266.23 cv
294.289 267.953 295.687 269.351 297.41 269.351 cv
299.133 269.351 300.531 267.953 300.531 266.23 cv
@
314.451 259.27 mo
314.451 257.547 313.053 256.149 311.33 256.149 cv
309.607 256.149 308.209 257.547 308.209 259.27 cv
308.209 260.993 309.607 262.391 311.33 262.391 cv
313.053 262.391 314.451 260.993 314.451 259.27 cv
314.451 259.27 li
cp
f
314.451 259.27 mo
314.451 257.547 313.053 256.149 311.33 256.149 cv
309.607 256.149 308.209 257.547 308.209 259.27 cv
308.209 260.993 309.607 262.391 311.33 262.391 cv
313.053 262.391 314.451 260.993 314.451 259.27 cv
@
328.371 262.63 mo
328.371 260.907 326.973 259.509 325.25 259.509 cv
323.527 259.509 322.129 260.907 322.129 262.63 cv
322.129 264.353 323.527 265.751 325.25 265.751 cv
326.973 265.751 328.371 264.353 328.371 262.63 cv
328.371 262.63 li
cp
f
328.371 262.63 mo
328.371 260.907 326.973 259.509 325.25 259.509 cv
323.527 259.509 322.129 260.907 322.129 262.63 cv
322.129 264.353 323.527 265.751 325.25 265.751 cv
326.973 265.751 328.371 264.353 328.371 262.63 cv
@
342.292 260.71 mo
342.292 258.987 340.893 257.589 339.17 257.589 cv
337.447 257.589 336.049 258.987 336.049 260.71 cv
336.049 262.433 337.447 263.832 339.17 263.832 cv
340.893 263.832 342.292 262.433 342.292 260.71 cv
342.292 260.71 li
cp
f
342.292 260.71 mo
342.292 258.987 340.893 257.589 339.17 257.589 cv
337.447 257.589 336.049 258.987 336.049 260.71 cv
336.049 262.433 337.447 263.832 339.17 263.832 cv
340.893 263.832 342.292 262.433 342.292 260.71 cv
@
356.211 262.15 mo
356.211 260.427 354.813 259.029 353.09 259.029 cv
351.367 259.029 349.969 260.427 349.969 262.15 cv
349.969 263.873 351.367 265.271 353.09 265.271 cv
354.813 265.271 356.211 263.873 356.211 262.15 cv
356.211 262.15 li
cp
f
356.211 262.15 mo
356.211 260.427 354.813 259.029 353.09 259.029 cv
351.367 259.029 349.969 260.427 349.969 262.15 cv
349.969 263.873 351.367 265.271 353.09 265.271 cv
354.813 265.271 356.211 263.873 356.211 262.15 cv
@
370.131 261.67 mo
370.131 259.947 368.733 258.549 367.01 258.549 cv
365.288 258.549 363.889 259.947 363.889 261.67 cv
363.889 263.393 365.288 264.792 367.01 264.792 cv
368.733 264.792 370.131 263.393 370.131 261.67 cv
370.131 261.67 li
cp
f
370.131 261.67 mo
370.131 259.947 368.733 258.549 367.01 258.549 cv
365.288 258.549 363.889 259.947 363.889 261.67 cv
363.889 263.393 365.288 264.792 367.01 264.792 cv
368.733 264.792 370.131 263.393 370.131 261.67 cv
@
384.051 262.15 mo
384.051 260.427 382.653 259.029 380.93 259.029 cv
379.208 259.029 377.809 260.427 377.809 262.15 cv
377.809 263.873 379.208 265.271 380.93 265.271 cv
382.653 265.271 384.051 263.873 384.051 262.15 cv
384.051 262.15 li
cp
f
384.051 262.15 mo
384.051 260.427 382.653 259.029 380.93 259.029 cv
379.208 259.029 377.809 260.427 377.809 262.15 cv
377.809 263.873 379.208 265.271 380.93 265.271 cv
382.653 265.271 384.051 263.873 384.051 262.15 cv
@
397.971 261.91 mo
397.971 260.187 396.573 258.789 394.85 258.789 cv
393.127 258.789 391.729 260.187 391.729 261.91 cv
391.729 263.633 393.127 265.032 394.85 265.032 cv
396.573 265.032 397.971 263.633 397.971 261.91 cv
397.971 261.91 li
cp
f
397.971 261.91 mo
397.971 260.187 396.573 258.789 394.85 258.789 cv
393.127 258.789 391.729 260.187 391.729 261.91 cv
391.729 263.633 393.127 265.032 394.85 265.032 cv
396.573 265.032 397.971 263.633 397.971 261.91 cv
@
411.891 262.15 mo
411.891 260.427 410.493 259.029 408.77 259.029 cv
407.047 259.029 405.649 260.427 405.649 262.15 cv
405.649 263.873 407.047 265.271 408.77 265.271 cv
410.493 265.271 411.891 263.873 411.891 262.15 cv
411.891 262.15 li
cp
f
411.891 262.15 mo
411.891 260.427 410.493 259.029 408.77 259.029 cv
407.047 259.029 405.649 260.427 405.649 262.15 cv
405.649 263.873 407.047 265.271 408.77 265.271 cv
410.493 265.271 411.891 263.873 411.891 262.15 cv
@
425.572 261.91 mo
425.572 260.187 424.173 258.789 422.45 258.789 cv
420.727 258.789 419.329 260.187 419.329 261.91 cv
419.329 263.633 420.727 265.032 422.45 265.032 cv
424.173 265.032 425.572 263.633 425.572 261.91 cv
425.572 261.91 li
cp
f
425.572 261.91 mo
425.572 260.187 424.173 258.789 422.45 258.789 cv
420.727 258.789 419.329 260.187 419.329 261.91 cv
419.329 263.633 420.727 265.032 422.45 265.032 cv
424.173 265.032 425.572 263.633 425.572 261.91 cv
@
439.731 261.91 mo
439.731 260.187 438.333 258.789 436.61 258.789 cv
434.887 258.789 433.489 260.187 433.489 261.91 cv
433.489 263.633 434.887 265.032 436.61 265.032 cv
438.333 265.032 439.731 263.633 439.731 261.91 cv
439.731 261.91 li
cp
f
439.731 261.91 mo
439.731 260.187 438.333 258.789 436.61 258.789 cv
434.887 258.789 433.489 260.187 433.489 261.91 cv
433.489 263.633 434.887 265.032 436.61 265.032 cv
438.333 265.032 439.731 263.633 439.731 261.91 cv
@
453.531 261.43 mo
453.531 259.708 452.133 258.309 450.41 258.309 cv
448.687 258.309 447.289 259.708 447.289 261.43 cv
447.289 263.153 448.687 264.551 450.41 264.551 cv
452.133 264.551 453.531 263.153 453.531 261.43 cv
453.531 261.43 li
cp
f
453.531 261.43 mo
453.531 259.708 452.133 258.309 450.41 258.309 cv
448.687 258.309 447.289 259.708 447.289 261.43 cv
447.289 263.153 448.687 264.551 450.41 264.551 cv
452.133 264.551 453.531 263.153 453.531 261.43 cv
@
1.836 lw
268.462 174.129 mo
269.564 217.765 li
283.518 245.855 li
297.41 256.994 li
311.302 258.462 li
325.256 259.748 li
339.149 260.115 li
353.041 260.666 li
366.933 261.033 li
380.887 261.523 li
394.779 261.89 li
408.671 262.196 li
422.564 262.441 li
436.518 262.625 li
450.41 262.625 li
.648646 1 .217533 .0788281 cmyk
@
266.933 220.458 mo
266.933 215.133 li
272.257 215.133 li
272.257 220.458 li
266.933 220.458 li
cp
f
.918 lw
266.933 220.458 mo
266.933 215.133 li
272.257 215.133 li
272.257 220.458 li
266.933 220.458 li
266.933 220.458 li
cp
@
280.825 248.548 mo
280.825 243.224 li
286.149 243.224 li
286.149 248.548 li
280.825 248.548 li
cp
f
280.825 248.548 mo
280.825 243.224 li
286.149 243.224 li
286.149 248.548 li
280.825 248.548 li
280.825 248.548 li
cp
@
294.778 259.687 mo
294.778 254.362 li
300.042 254.362 li
300.042 259.687 li
294.778 259.687 li
cp
f
294.778 259.687 mo
294.778 254.362 li
300.042 254.362 li
300.042 259.687 li
294.778 259.687 li
294.778 259.687 li
cp
@
308.671 261.094 mo
308.671 255.77 li
313.995 255.77 li
313.995 261.094 li
308.671 261.094 li
cp
f
308.671 261.094 mo
308.671 255.77 li
313.995 255.77 li
313.995 261.094 li
308.671 261.094 li
308.671 261.094 li
cp
@
322.563 262.379 mo
322.563 257.055 li
327.888 257.055 li
327.888 262.379 li
322.563 262.379 li
cp
f
322.563 262.379 mo
322.563 257.055 li
327.888 257.055 li
327.888 262.379 li
322.563 262.379 li
322.563 262.379 li
cp
@
336.456 262.808 mo
336.456 257.483 li
341.78 257.483 li
341.78 262.808 li
336.456 262.808 li
cp
f
336.456 262.808 mo
336.456 257.483 li
341.78 257.483 li
341.78 262.808 li
336.456 262.808 li
336.456 262.808 li
cp
@
350.41 263.297 mo
350.41 257.973 li
355.672 257.973 li
355.672 263.297 li
350.41 263.297 li
cp
f
350.41 263.297 mo
350.41 257.973 li
355.672 257.973 li
355.672 263.297 li
350.41 263.297 li
350.41 263.297 li
cp
@
364.301 263.665 mo
364.301 258.401 li
369.626 258.401 li
369.626 263.665 li
364.301 263.665 li
cp
f
364.301 263.665 mo
364.301 258.401 li
369.626 258.401 li
369.626 263.665 li
364.301 263.665 li
364.301 263.665 li
cp
@
378.194 264.154 mo
378.194 258.83 li
383.518 258.83 li
383.518 264.154 li
378.194 264.154 li
cp
f
378.194 264.154 mo
378.194 258.83 li
383.518 258.83 li
383.518 264.154 li
378.194 264.154 li
378.194 264.154 li
cp
@
392.148 264.521 mo
392.148 259.197 li
397.411 259.197 li
397.411 264.521 li
392.148 264.521 li
cp
f
392.148 264.521 mo
392.148 259.197 li
397.411 259.197 li
397.411 264.521 li
392.148 264.521 li
392.148 264.521 li
cp
@
406.041 264.888 mo
406.041 259.564 li
411.365 259.564 li
411.365 264.888 li
406.041 264.888 li
cp
f
406.041 264.888 mo
406.041 259.564 li
411.365 259.564 li
411.365 264.888 li
406.041 264.888 li
406.041 264.888 li
cp
@
419.932 265.133 mo
419.932 259.809 li
425.257 259.809 li
425.257 265.133 li
419.932 265.133 li
cp
f
419.932 265.133 mo
419.932 259.809 li
425.257 259.809 li
425.257 265.133 li
419.932 265.133 li
419.932 265.133 li
cp
@
433.825 265.255 mo
433.825 259.931 li
439.149 259.931 li
439.149 265.255 li
433.825 265.255 li
cp
f
433.825 265.255 mo
433.825 259.931 li
439.149 259.931 li
439.149 265.255 li
433.825 265.255 li
433.825 265.255 li
cp
@
447.779 265.317 mo
447.779 259.993 li
453.042 259.993 li
453.042 265.317 li
447.779 265.317 li
cp
f
447.779 265.317 mo
447.779 259.993 li
453.042 259.993 li
453.042 265.317 li
447.779 265.317 li
447.779 265.317 li
cp
@
1.836 lw
280.213 174.129 mo
283.518 210.91 li
297.41 240.959 li
311.302 252.465 li
325.256 256.198 li
339.149 258.095 li
353.041 259.013 li
366.933 259.625 li
380.887 260.115 li
394.779 260.605 li
408.671 261.156 li
422.564 261.707 li
436.518 262.196 li
450.41 262.685 li
0 .408423 1 0 cmyk
@
283.518 207.789 mo
280.396 210.91 li
283.518 214.031 li
286.639 210.91 li
283.518 207.789 li
cp
f
.918 lw
283.518 207.789 mo
280.396 210.91 li
283.518 214.031 li
286.639 210.91 li
283.518 207.789 li
283.518 207.789 li
cp
@
297.41 237.838 mo
294.289 240.959 li
297.41 244.081 li
300.531 240.959 li
297.41 237.838 li
cp
f
297.41 237.838 mo
294.289 240.959 li
297.41 244.081 li
300.531 240.959 li
297.41 237.838 li
297.41 237.838 li
cp
@
311.302 249.343 mo
308.181 252.465 li
311.302 255.586 li
314.424 252.465 li
311.302 249.343 li
cp
f
311.302 249.343 mo
308.181 252.465 li
311.302 255.586 li
314.424 252.465 li
311.302 249.343 li
311.302 249.343 li
cp
@
325.256 253.077 mo
322.135 256.198 li
325.256 259.319 li
328.377 256.198 li
325.256 253.077 li
cp
f
325.256 253.077 mo
322.135 256.198 li
325.256 259.319 li
328.377 256.198 li
325.256 253.077 li
325.256 253.077 li
cp
@
339.149 254.974 mo
336.027 258.095 li
339.149 261.216 li
342.27 258.095 li
339.149 254.974 li
cp
f
339.149 254.974 mo
336.027 258.095 li
339.149 261.216 li
342.27 258.095 li
339.149 254.974 li
339.149 254.974 li
cp
@
353.041 255.892 mo
349.919 259.013 li
353.041 262.134 li
356.162 259.013 li
353.041 255.892 li
cp
f
353.041 255.892 mo
349.919 259.013 li
353.041 262.134 li
356.162 259.013 li
353.041 255.892 li
353.041 255.892 li
cp
@
366.933 256.504 mo
363.812 259.625 li
366.933 262.747 li
370.054 259.625 li
366.933 256.504 li
cp
f
366.933 256.504 mo
363.812 259.625 li
366.933 262.747 li
370.054 259.625 li
366.933 256.504 li
366.933 256.504 li
cp
@
380.887 256.994 mo
377.766 260.115 li
380.887 263.236 li
384.008 260.115 li
380.887 256.994 li
cp
f
380.887 256.994 mo
377.766 260.115 li
380.887 263.236 li
384.008 260.115 li
380.887 256.994 li
380.887 256.994 li
cp
@
394.779 257.483 mo
391.658 260.605 li
394.779 263.726 li
397.901 260.605 li
394.779 257.483 li
cp
f
394.779 257.483 mo
391.658 260.605 li
394.779 263.726 li
397.901 260.605 li
394.779 257.483 li
394.779 257.483 li
cp
@
408.671 258.034 mo
405.55 261.156 li
408.671 264.277 li
411.792 261.156 li
408.671 258.034 li
cp
f
408.671 258.034 mo
405.55 261.156 li
408.671 264.277 li
411.792 261.156 li
408.671 258.034 li
408.671 258.034 li
cp
@
422.564 258.584 mo
419.443 261.707 li
422.564 264.828 li
425.685 261.707 li
422.564 258.584 li
cp
f
422.564 258.584 mo
419.443 261.707 li
422.564 264.828 li
425.685 261.707 li
422.564 258.584 li
422.564 258.584 li
cp
@
436.518 259.075 mo
433.396 262.196 li
436.518 265.317 li
439.639 262.196 li
436.518 259.075 li
cp
f
436.518 259.075 mo
433.396 262.196 li
436.518 265.317 li
439.639 262.196 li
436.518 259.075 li
436.518 259.075 li
cp
@
450.41 259.564 mo
447.289 262.685 li
450.41 265.806 li
453.532 262.685 li
450.41 259.564 li
cp
f
450.41 259.564 mo
447.289 262.685 li
450.41 265.806 li
453.532 262.685 li
450.41 259.564 li
450.41 259.564 li
cp
@
1.836 lw
376.419 174.129 mo
380.887 179.208 li
394.779 191.204 li
408.671 200.506 li
422.564 207.85 li
436.518 213.97 li
450.41 219.111 li
.892363 .791409 0 0 cmyk
@
380.887 175.598 mo
377.766 180.983 li
384.008 180.983 li
380.887 175.598 li
cp
f
.918 lw
380.887 175.598 mo
377.766 180.983 li
384.008 180.983 li
380.887 175.598 li
380.887 175.598 li
cp
@
394.779 187.593 mo
391.658 192.979 li
397.901 192.979 li
394.779 187.593 li
cp
f
394.779 187.593 mo
391.658 192.979 li
397.901 192.979 li
394.779 187.593 li
394.779 187.593 li
cp
@
408.671 196.896 mo
405.55 202.281 li
411.792 202.281 li
408.671 196.896 li
cp
f
408.671 196.896 mo
405.55 202.281 li
411.792 202.281 li
408.671 196.896 li
408.671 196.896 li
cp
@
422.564 204.239 mo
419.443 209.686 li
425.685 209.686 li
422.564 204.239 li
cp
f
422.564 204.239 mo
419.443 209.686 li
425.685 209.686 li
422.564 204.239 li
422.564 204.239 li
cp
@
436.518 210.359 mo
433.396 215.745 li
439.639 215.745 li
436.518 210.359 li
cp
f
436.518 210.359 mo
433.396 215.745 li
439.639 215.745 li
436.518 210.359 li
436.518 210.359 li
cp
@
450.41 215.5 mo
447.289 220.947 li
453.532 220.947 li
450.41 215.5 li
cp
f
450.41 215.5 mo
447.289 220.947 li
453.532 220.947 li
450.41 215.5 li
450.41 215.5 li
cp
@
1.836 lw
[9.18 5.508 ] 0 dsh
450.471 262.318 mo
266.749 262.318 li
.43949 .376715 .225864 .00350958 cmyk
@
[1.836 5.508 ] 0 dsh
266.81 296.59 mo
450.41 296.59 li
.75021 .679683 .670222 .90164 cmyk
@
[] 0 dsh
266.81 296.59 mo
266.81 174.19 li
@
.918 lw
266.81 174.19 mo
272.93 174.19 li
266.81 223.15 mo
272.93 223.15 li
266.81 272.11 mo
272.93 272.11 li
266.81 198.67 mo
270.237 198.67 li
266.81 247.63 mo
270.237 247.63 li
266.81 296.59 mo
270.237 296.59 li
@
%ADOBeginSubsetFont: Times-Italic Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Times-Italic def/FontInfo 5 dict dup begin/ItalicAngle 0 def/OrigFontType /TrueType defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 49 /one putdup 97 /a putdup 99 /c putdup 101 /e putdup 105 /i putdup 108 /l putdup 115 /s putdup 116 /t putdef/FontBBox {-296 -413 1661 1205} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings10 dict dup begin/.notdef <1C60D8A8C9B7D8BE1853B203EFE351B1CDFA12DF07B00368C22E31EFC3300D63209ED6> |-/space <1C60D8A8C9B8707C25> |-/one <1C60D8A8C9B7A73DF20AACD81F51CDF035203AD98E8BE9F8F6DCE87E5CF3C389E734A875E4C87814E53C39CEBDA5DEB0A2209A3CE4850A1519A46C78A1BAD9B717AC6802F3722C5F0C5FB572C56DC28BEB55FE019ED23E0252F5CE5EA1026734AE05F045FA0E8B2FF2C12476C08FABE0AD5FBEA4C540DB5C83896BF115B84E961C81431EE93E8A6F2EA4B686E9E0CDE6> |-/a <1C60D8A8C9B7A73DB6B88E0E8F18436A1F09B15968F061B1DDAEA063D5C477A798AC6CCDE7B463CEDE9DF10C85BF943B1A23D3A955ECB71BCB056FB9145F938F3DC645B315F646528EB3B53DD647687CCAEEE4F42707FCD1F2C3675EA58B243E03636F03F49CA1B8745B188F869696A9EBF8EE67DE9F54B2262AFB12ECFE1B5AFC17FF258A2E69BF5FDBED1B3699875019E7BFDF5BACBDFFF080973A7F059B475B810D35DF16A240D17D43785DACF46760EB7C69CB24393FA52B17A18DAC3BB84FCEE1276951F7D05FC09AF0FFF01CC340EF8E3D1B60A8413593334DB81EDDB8E689D59958B942D922AA6D47B5EA98AF3FD94329F39900DC6C7A3E34CC1BEDC577F37F7177CEB364983D36A3C88B53058AE816834C770ECA0A9F48A7FAA038CBEBBEE56B6C67BCB16529CEF4CFB3FD5C9A0E29> |-/c <1C60D8A8C9B77FE2CED306AAE853DF6763ABBC1F195078D45F35AC812BA176B02CD229DD186FFB355299AFEDCDA3C3E7A2BBB8C0138FFC2F675F24D8A1A2064E210ACB5567CC4FF99B2DB190FFC6CD745653327D6267B9720C3E2FAD72FF086DC8533109E5D3541C360CBF9F8DE6E15D008E77916480B96C5C762C587981712A1AA76B3128B5597081D3A484E43F2332F97E00EB8CA70E92480D1BBD05BF5279454393B0CF9B35A14103B3932D2CBA> |-/e <1C60D8A8C9B77FE2937C57D511D7B2D85185E1E61A4651B494CF7984DAD547D0B44C659E0993602A01A0508DD4246E85558E4C72973FC23C60AC4035E6E9D0E422570DD5D38DF226B21995C7BA61F8EB00A50CA6D70806ABFD5AD7ABBFDB00B34E6EACD0CED09AB1732A7C4141621EA5AC5DA00EFABAA2E93A825555212DDCFFA292FEA081906B69270F2F05CDFC3ACE97B091CB5EEF0831DFCA492B9DD5B67AA24B4E41578EC78B32C9D391999DC5E0E0310611AD025B836A14191D7D8F5A10> |-/i <1C60D8A8C9B854D0F4594DE2CB230C00D72A8CCCE2ED8277F493FC10530BA725C23B7C5D26CC1DD529FAE26E52F10603EC22FA434A5EF589284E8D896B14DE3C8E9013A43C0BFBD48FDBD41845BD7C76773CBE6AD8D328F71F5EB664393E92995FCC5BC5635E470649C6BA303A1FC97AF04ACCD05A0991A8BEF1CC5D25BC2BAAD39CE1C6888E27BDA0C5DAD2B2DEF6529C8F477FC2CD60CCFB7D1E5F121F78DD2D61A9BDDDD66832C06CF970B6465E11B9DBFFCA3559D4996DEEC891508DB90A89509F3CB209B732203D177FEE5740FB955889645019ADCD680F1EA155C06327806A2C9546A05C56> |-/l <1C60D8A8C9B854D0C3437F4F75DAA30F079F9030DD04473DAF4EDB98D6AE7D76B255812E711AD6FEB0F1D3EAB33054CD89502F62B172DF2B972086F82916544C8ABC3E938B6A6F34309A4E5501DFE51E47D9902C8B32B667C046A6123FECCF9B74909C58F1BA4B097C7FEDCC0EC75868836CAA9EA97D1DBF2806EF8E2E500800140B3953BEF57EF4B7653ABD426AA2C6EC78D9495ABFB6569F8A0F8A6F580F4A7D63CA> |-/s <1C60D8A8C9B7361F6FE833EBC5233F08984389D77FB6B8A83F76643BC2F633983CDC51718BBB8C354566EC82EB0333F6910C1E2FF8386A90ED6FAD546E54E6130794D6A3B06BE8AADA3099432325C0A84895D7A1797A5E133A09FBD72E340C7AD5EC3779F91D42CAC7DECA404663BDF32122BDEC1F78EEF4947AE6135A38C1EDD44771BEF7191ACFC7ED05840C4673550E76EBFB9560CBC793DF675B9B909F7CC3B4E758C0E1E98A0611191EECC2B214E4FC7284093D88D157CC9BBBE2B40DA416E572C088B7AAFF58A9D9152D1BE1794E0BD308E3FD5558953D1414B9E68B20AB8EB0> |-/t <1C60D8A8C9B854D0B361E19027CEEF8FD2D54396C85DA9E4D75EBDBD81F1AC8D8D89CCB529371905FB88E8C672DA56CE6373C5F306F6D800C6421BB3535C1CE57B1054E3952FAF7BB933B92222380068B94C8250FB2A82AD2B50FD6BCE69676A831CBBDA1AD9AF95D0F1273C57F4D28940817AB24D70E2917B660D827A327D57C68FF29FBDAD6D47C886C83040C9E0139F754E6CDC6055994C4C5FB073D2E9DCCD2C2CC51F29C870D78E88085143EF> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/HQKXDS+Times-Italic /Times-Italic findfont ct_VMDictPut/HQKXDS+Times-Italic*1 [32{/.notdef}rp /space 16{/.notdef}rp /one 47{/.notdef}rp /a /.notdef /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l 6{/.notdef}rp /s /t 139{/.notdef}rp]HQKXDS+Times-Italic nfHQKXDS+Times-Italic*1 [17.136 0 0 -17.136 0 0 ]msf362.529 94.2651 mo(sc 111 lattice)[6.66895 7.60547 4.28418 8.56738 8.56836 8.56836 4.28418 4.76074 8.56738 4.76172 4.76074 4.76074 7.60547 0 ]xsh%ADOBeginSubsetFont: Times-Italic AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginHQKXDS+Times-Italic dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/zero <1C60D8A8C9B7A73DB97D28CE021B49950835179F81DB06CBF930B6C6D5706D9ED6014632ABEADAA0D048E67029BA27E752F6AABF2BF3925FA80CF6D165732BF65C6EA4D3C751E18327714EA7621A55C0DF161D6AB71192F2116C05690BDC8199A704B3BDCB601C35C000C936CEADD76518E5903B4437D88DA3559D6E35C0BFCF02F2B6192168CA3B70> |-/b <1C60D8A8C9B7A73DECFF5E6E3150EFE9360E675624A0A0F5E39A817FE8337118E070A47B35A6DDDF6E18EF6E6EF41A9C1905D80BB7EF0FDC3B5698DA595AE379FFFB849DB26F15367BE78E05015481142F09F9C75474F587888070D50BFACEB79578D0A28EADDF845C7209C8DC03A84040956AE14CB360D794DDFA971A03C44F636490F38EDAA88827E91D7750E9A2CD63AAD839C98FC62789B6599CFEDE36457D8B1A4BD9AAF08C6FD6E56FB8E79295FAED4FD5D9F4467220890AA9DA3C55A4AD94845643FE2B0B5255435A818AEB62D1C6803E8E25B6801FCCB07A2665EF> |-systemdict /gcheck known {setglobal} if end {end} ifendHQKXDS+Times-Italic /Encoding getdup 48 /zero putdup 98 /b putpop%ADOEndSubsetFont
/HQKXDS+Times-Italic*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero /one 47{/.notdef}rp /a /b /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l 6{/.notdef}rp /s /t 139{/.notdef}rp]HQKXDS+Times-Italic nfHQKXDS+Times-Italic*1 [17.136 0 0 -17.136 0 0 ]msf352.919 251.664 mo(bcc 011 lattice)[8.56836 7.60547 7.60547 4.28418 8.56836 8.56738 8.56836 4.28418 4.76074 8.56836 4.76074 4.76074 4.76074 7.60547 0 ]xsh%ADOBeginSubsetFont: Times-Italic AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginHQKXDS+Times-Italic dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/f <1C60D8A8C9B854D0FBE4FBD5D39A2379AF3B49B3E971A875DFEA072EA93D4ECD44CDE1E055AEBBEC34FE56424EA93858CA688BB627B46150FAA78813F0743F0E5C685D61EA483364C2E3B4D346331F362E96FB479BE465F2C1B7F49944CC18431058F57E55B8816D06A7B92A4FBE80299B8D2D07BB238B99CFBB987A61E52070EF5862742556EEA8726E2B414CB1C0DF26C6FA2E0BDAB61FC1CF29A5D49ECFC3A2CFB72618CAF056F4EB0ACB57717D468612597BD4D88690C20CE93DEA87F1F30A14B928014ECCEB1A4F8153DD92E22BD7CDD8F683C812AAE00D9EDFCF4F0885D79B3D61DA> |-systemdict /gcheck known {setglobal} if end {end} ifendHQKXDS+Times-Italic /Encoding getdup 102 /f putpop%ADOEndSubsetFont
/HQKXDS+Times-Italic*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero /one 47{/.notdef}rp /a /b /c /.notdef /e /f 2{/.notdef}rp /i 2{/.notdef}rp /l 6{/.notdef}rp /s /t 139{/.notdef}rp]HQKXDS+Times-Italic nfHQKXDS+Times-Italic*1 [17.136 0 0 -17.136 0 0 ]msf356.779 407.476 mo(fcc 111 lattice)[4.76074 7.60645 7.60547 4.28418 8.56738 8.56836 8.56836 4.2832 4.76172 8.56738 4.76074 4.76172 4.76074 7.60547 0 ]xsh%ADOBeginSubsetFont: Times-BoldItalic AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginHQKXDR+Times-BoldItalic dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/d <1C60D8A8C9B7A73DB93CBCF75A9EF0C75F1A147F46502012CF4882014240A44E02EFF5353AACFB74EF75CEB720ED7004ADC75CB583B842D3E6DB412312383ACA4B0A009BD6DDDED086AB3236583030AF2F1B526B27DC7F458EBD399A95E01DA21AF09D4D6111E1AEEBA1264772A02F22794AE9886504A1E3169375C5F9CA98093050F099E4C40C499A0A6764BE536242F29C4E78732F481CC07EACD6BCD03AF96390158BB723B574213366A630300E948E2E79284D1E43B09D01F64C080691A10B3F222E6DA8FF19E777C5C39404FDE9FB663552CDC5563FF72E65F3A267E531C21C3B075F47CDD3FB5B6259F78E85AF521319F7384B3278C406517F1F275B724EA19CF48A39F31991328468720E95351074A586D2E3> |-/e <1C60D8A8C9B77FE2CEC41D709C5F76BBA8B1350D77016E39055AD616149848FA9495A33F76CD53155F2762E044373106ADF8A107379AA3B6E619A1566E41C80E2FBD40F50114FCAA7A22B02A3842EDC5636A7CF695B4EA2EB3BA157D4990EC4F6E115D1B6A391B4BD6F91EC5FC59A59512A89F5360ACCF9BD906D704E7AC4A954A71BC2F1B5490545B408EB8BA132C8D06E0FFDA79A308AEF523CEFC6191FE1B053596F8290B8F9BD061D5615AB0ABB4B1B6> |-/m <1C60D8A8C9B6FF86F5F26458C50B8298BDF101C072B89D256198CA2230B3839796F63695C5F96D9707FCF58570E349D587A87005553FA27C8147FB5DFF968D0564FB517810C0F9B7551176C409BD87F553E72A630B464AAD027FED2C657C47C1741E026A4E7F66ADD2E06871A9CD0C131C382559E5EFF20396C179008D265B215BA46C4917D629350A460610F7724C4763137D78D95B0AB2B31F2D6072C4D702ACF5531E08AD2AC4483F512599E65B090FD0F9D353D48EE73FBBAA0640C48D41D937D4EFE527636F31ADD8C4BCB7B51B6DA98F665FBD52226463B8BE42BFAA8537759DE2DC6A50192D2DBA2346DE7836E51ABB05A105F0066491BEAC07DE43787988B2EDC2EA029085296F7AD187CD53C99432633AB89375BA2A20F8685A2C77A76BD9D0D1DF574AAF62B03E7708B495F172369E029F6F50DB66A646054EC7CDF0678887035782A5D32A81A153753B51CAD983AE9002439EF42434A7A3AF3722CFC464DBEDEF18BBB36BA5680DB0> |-/n <1C60D8A8C9B7EF322B31F1DD9A06052D4F1E042F9856DA34F4FB95EBE7FD9236D214CC260A2A1AFB6C5D63D70D08ADD7D8BE2814599E72450A0808EED7703B10F3E2D6FB3FD0D6BFEFD8D07B06BA9DBF6F7C5F8C0017617008AC88F5632D50930E555B03C215B35B3EA61465AA5D63B384369254037B15B91E319F22557A0CFCE103E1867A50A6F9CE97E3E50B43DE70255CC654D7B0E98F5AFBE1A540F38484E993AD37AC117BCB35A4508B455F2346FD66190D78EF7080A6AB62DBF2B5D642E4D591D1DBFF2E2E4CB42F8112A638F2281DC82E1478414BB6C649268E00B29B042BA52663D049054CA13E97D7604AF517AEDC20EF46116CCEA7DFC947FE3813A6> |-/p <1C60D8A8C9B7A73D7479BFC26ECC5AA03DFBD791F583D775B357E320B055E633BD3320F1A0DE8A3BC7A6D82BA5EFA61FF305BEDAFCBA7A08918FDEDE4AD82C8803C46A0F3ACC509B1C18FB5BF0A2FC0914BEA06C28E81B0DA8DAE60812416253EF2E1DC6BEB3EA06871475B54F4746803B154EC3493492811184FC3ABEC3C9524FAC34489149248EE6FF3EA959482C4A4ABBE37A295922226E3E406BD15C9A54D758F22C7327858864DEA0329BE3977CC0FB6109D703C2482CE7420A63102F928C9F92FD5334F5C1FFDA61E56BE75D7B8218989F27F9F43D6C00592551DB2851BD5D484FDB26769E4BA81AA8B15D26027DD029EF511D5978CF78CEA269B0> |-/u <1C60D8A8C9B7EF32617101A26AFF67ADDEB523EE478EC2808F5390FE165BB125FACEA3A564E7D9A861026D11DF10C62FCF7285D8EF317C36ED0753B875039FF2EFFE0810B143DCF15760F05DF42BDB82E6E68C4F93680B14AB27428AEB9419B33247AD13034095044DD403430261876C53862F272AE7C47961A74A4E5CB057FCF779D97A5F5A9275E687F7405EB442E022367B6A9933533A01E5CB7D2DB68E73AEB31B2630FC94BD3374FC8668D3354BC4971EC4EBB38507FD168ECA0105D6A0447E008C752DAFE4A84F4F25161F32B15EC27D587C57DF95CF369E1BD30AEC1118ACDAF3F7354B2D9F58F3A7761C43A43CC264F98CB76FC09D0424E0F33550997B1B1F2DA4359BF01C90DB3E2D007956C825BA9A21D9> |-systemdict /gcheck known {setglobal} if end {end} ifendHQKXDR+Times-BoldItalic /Encoding getdup 100 /d putdup 101 /e putdup 109 /m putdup 110 /n putdup 112 /p putdup 117 /u putpop%ADOEndSubsetFont
/HQKXDR+Times-BoldItalic*1 [32{/.notdef}rp /space 14{/.notdef}rp /slash 49{/.notdef}rp /a /.notdef /c /d /e 7{/.notdef}rp /m /n /.notdef /p /.notdef /r 2{/.notdef}rp /u 138{/.notdef}rp]HQKXDR+Times-BoldItalic nfHQKXDR+Times-BoldItalic*1 [17.136 0 0 -17.136 0 0 ]msf99.7397 17.5776 mo(undamped)sh%ADOBeginSubsetFont: Symbol Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Symbol def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 4 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 97 /alpha putdef/FontBBox {-167 -299 1094 827} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/.notdef <1C60D8A8C9B7C3C9ED9313AFF691AF9DEA7EFE9F59246D6675CBE223F5D9796E7E2CD60A70D0> |-/alpha <1C60D8A8C9B66A6BAA2CFDED1D2EFA75F98BE0B51FA91D3486C6EC805643E81B99653CCA64E30B935978931127908C09443CBECCD6A571D8D3FCEC93A5A158423091AB4239ED9928E003300569B255F0D943F8F5D35F0EC6E967A5B49AEA36AE1B3BC22B43FD3533BC2C31AA72284108ABA1BE9C11F8548B89711F627A5A5FF6711878104FE7A8510F67AD235FAEA6A6736F2AD678C58B65FCA7756B07A21F636B65B5EE976BEE3D808AD91A855908C05561ACFAAC8EC0A089FC85F3C70E7AD807445570518FD0DAC061976FAF4B8F48D79A7BC0B7> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/HQKXDT+Symbol /Symbol findfont ct_VMDictPut/HQKXDT+Symbol*1 [97{/.notdef}rp /alpha 158{/.notdef}rp]HQKXDT+Symbol nfHQKXDT+Symbol*1 [17.136 0 0 -17.136 0 0 ]msf329.544 20.9448 mo(a)sh%ADOBeginSubsetFont: Symbol AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginHQKXDT+Symbol dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/asteriskmath <1C60D8A8C9B7A73DB9DE1B3CC10299FADD46195FC955FA61D6A39043BE3AB4393B6865A5D00916485ED62E4B41B89A3D11E1C05F1F7C1B230CED470EA677014CF67F359137B95AC02C9FBF3AB828D33528054FD3D5AA26BD1C5A523B5D20989E3899217CCDA5F2D99D98A4B350348DDE67AB2F2711FFA5C41F1FAD87FC9F42579923941381774987F5F9ED5B58275A09C5461A68A4B670887DCD63A7DB3B106B69FE56E6253A808FF902B42A4B3670113AC956EC1130F412F020750E954FC83D0A4A65798924CFCE29A5B563688ECBCDDA61F076134F32F8776D262DC939198C458204B692254636CC64A35993880C86E2CAEA2A1A3DBE2E07E021F045B2B21F988018D585126745AA590398E607A28FCECE691791F0AA2522F85E936A2C289362BF211C7B6939C85631F67B03011F974B018FABE46B60E2A8AE58A09F83EC05789096306005D7ED99F529BD9209DCED66E5485E4D7B06EE4359C95D311DCE29B9753E5D48CAAA> |-systemdict /gcheck known {setglobal} if end {end} ifendHQKXDT+Symbol /Encoding getdup 42 /asteriskmath putpop%ADOEndSubsetFont
/HQKXDT+Symbol*1 [42{/.notdef}rp /asteriskmath 54{/.notdef}rp /alpha 158{/.notdef}rp]HQKXDT+Symbol nfHQKXDT+Symbol*1 [12.1176 0 0 -12.1176 0 0 ]msf340.302 10.6636 mo(*)sh%ADOBeginSubsetFont: Times-BoldItalic AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginHQKXDR+Times-BoldItalic dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B8707CC5B078844218A4ED5C051499B87FE94DD10DEF371EE14B3E20228CBDDF82C9C660536AB71285F63214B47238D278EDD9B88C32D9C68A7EDC1D99DB50E808> |-/zero <1C60D8A8C9B7A73DB91A7B07FA862A14F917301CEE121FC5396E02F60D0C1074E6C8ECCD3FD62629366C04D3D27E540A592ED9957FED221764C3321E46E80DAC04B78B4BF386DDCADED1FA34E35877F5693E9AB517D0D80724CBC5B58D12B184475BC86CD0E31BBF4D60CF2CBD126424A91EAD02DA7868EB32BA1FC3F8CFF0B6B94C1190135DAA6218C4778309834DFF0FE29C38F34680A978D77B0F0464A99933F0> |-/two <1C60D8A8C9B7A73D218325071F9151631B3148CBB48AC7B48297A919D3B8459EE101BBF04CBA61A707EE89C2B67D54F882A9DAC9F5D0668CEE2F72666656E7FA0D7788635C7E8A6D2FA6BBDB2DE7C87A5E26E5668A626FD7E1F5DF45C756BBF2EE852EAEF85C223FB253DF8DC2F3130A73E9ECB19C8C1FDBC742FFDC06343FB5AB53D67978827538528190EB25B1F222> |-/equal <1C60D8A8C9B7E1F8EBA72A825E946B228AFC12DEBAEC75AF1BF3DB1252B3B6049A0656CEDA69> |-systemdict /gcheck known {setglobal} if end {end} ifendHQKXDR+Times-BoldItalic /Encoding getdup 46 /period putdup 48 /zero putdup 50 /two putdup 61 /equal putpop%ADOEndSubsetFont
/HQKXDR+Times-BoldItalic*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /slash /zero /.notdef /two 10{/.notdef}rp /equal 35{/.notdef}rp /a /.notdef /c /d /e 7{/.notdef}rp /m /n /.notdef /p /.notdef /r 2{/.notdef}rp /u 138{/.notdef}rp]HQKXDR+Times-BoldItalic nfHQKXDR+Times-BoldItalic*1 [17.136 0 0 -17.136 0 0 ]msf346.31 20.9448 mo( = )sh364.642 20.9448 mo(0.2)[8.56836 4.28418 0 ]xshHQKXDT+Symbol*1 [17.136 0 0 -17.136 0 0 ]msf527.771 20.9448 mo(a)shHQKXDT+Symbol*1 [12.1176 0 0 -12.1176 0 0 ]msf538.591 10.6636 mo(*)sh%ADOBeginSubsetFont: Times-BoldItalic AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.systemdict beginHQKXDR+Times-BoldItalic dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/four <1C60D8A8C9B7A73D8FBF1C12A94E4BF246AFD1F08E71C27ED584171E3E92588D4481C2C88A88A8619F8522C148F4491B29B93A47869F381D0C0AEB> |-systemdict /gcheck known {setglobal} if end {end} ifendHQKXDR+Times-BoldItalic /Encoding getdup 52 /four putpop%ADOEndSubsetFont
/HQKXDR+Times-BoldItalic*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /slash /zero /.notdef /two /.notdef /four 8{/.notdef}rp /equal 35{/.notdef}rp /a /.notdef /c /d /e 7{/.notdef}rp /m /n /.notdef /p /.notdef /r 2{/.notdef}rp /u 138{/.notdef}rp]HQKXDR+Times-BoldItalic nfHQKXDR+Times-BoldItalic*1 [17.136 0 0 -17.136 0 0 ]msf544.599 20.9448 mo( = )sh562.931 20.9448 mo(0.4)[8.56836 4.28418 0 ]xsh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/HQKXDT+Symbol*1 uf/HQKXDT+Symbol uf/Symbol uf/HQKXDQ+Times-Roman*1 uf/HQKXDQ+Times-Roman uf/Times-Roman uf/HQKXDS+Times-Italic*1 uf/HQKXDS+Times-Italic uf/Times-Italic uf/HQKXDR+Times-BoldItalic*1 uf/HQKXDR+Times-BoldItalic uf/Times-BoldItalic ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 16.0%%AI8_CreatorVersion: 16.0.4%%For: (Dan Gezelter) ()%%Title: (Quadrupoles_rcut_threeAlpha.eps)%%CreationDate: 7/23/14 10:43 AM%%Canvassize: 16383%AI9_DataStream%Gb!R&LO/6sdK"T#J9QMhKFYHTU_#43#t[\VL#O@'Zr$JLlTG-rW467T)d)jq^MA=gJ1YK2dEH99UsXG#`SkX[kmfn7_gcaqGh/FA%]@1$9SP0;AYIE)rO=%OO;*L1t@aPV)B2I8T1s*eeVue'#B/q$`.Lk.=^,238`l#5AR>Ac;E'27Q`BVUuqkX%=hDF'_;Qi%WO1X%[%[_GgB.`9(:'tsOoD[h'WH,tEam7WYa`N\5>W.#g`S%W]Doq4;2Fl\=Z[EI6:eE]_t[Bs*s9YOQ=4fL1VpR>)?017gFa:#2j=h!!C%Sb64839O%JH$C<Y`P]E]T^ebM_fp?qIQd%m-^W8'MD0qaK\GpQ-hkYr>bS(CFHR;^oJ`&\VD</hKbFRiI6fhf-/AL?$gFEJR?!cc%mVqY8TJ4F(;85-jT%KJ[W,X-V8%n%aU6D(*-J`Yo"eWq]=qZf8Q\m&_Hm4bF\.d8#2OS`dKkrT0jAYJWL;QeXH%cU$J%F'XEpfCG%lptW<aMN1Jg&3S@%%g(0*;Lju/nR7\Hp-]1KF.,r9/(WHlps9=?ERZ"2),1&J%Y>D$=#I/+4:j#n$"_Q%-?7^"p)tJ^%k/"P2lq"%Z]R)S)W'CY7KeD=Peag5[ua-ld6&Y6&5p%:7*<cpj"a/3q'7OZ44"=M*auq?5gt->mXB6_3SM%9CN\G"-mXlig_o[6q]F(]rm.nM%8Oq0qVc.:p4,uj-4Ah4R(Ho;S!3SKt2%H'\5a[XQB2e4,l:MXcbb3IU2UPGeL!X.ircK%W9VmThbFsFU3..T$n<qP<V^SjKnMpH+%a5Lkt%WCBIo!VGIg8%b!"f5*Gpm"H;WDj3sV,EQcCGVH61>+4CaeF8]4.Cq%fdrA>Dt"(06kN%J,1I;qGU&)BVG_uSPtEM0[4;u:%?`B,JUrT:GUd"u+GmcL_qfpoXKhj*#@tIK)"_2!d-1>50n-NZ67.:NCAsa]`@8-.s^L0J!#qZ`OOd9EDn-S-0^[MrW">C-?$%+-)%j+:&T;lRPg2F#Q0Jn'C$JgL1;29Ep2mn)D.h[">f3L_6oK)C7!0L#8bQH0Jt;3Q37`o&M7K(6)`-<MF6@=7PN^L2.oro'(5*1jqn%P_/GA-^dCi,m:CS5!WX8!'Oue_rcpMO'iu#&\Kj2OHGa`6dJ?=#[Ge5RkIZkrIZjZ3_#Mk3iGbB:#<b^i"J]pqM+MPS<1>O$"[Ld%/h`u9`]F<E"9P977`10c(puZU$)J2:@!ofQPi/,)NaSEn-$Y'6ZPd1],CP>F$p&*ne0j_,5LOViR=q$NS.j\>(+T)$TjNN.8KF.a%EN?rZ$r75t'C'1OYL"B@<bR;/\h_G;bK;q4Nu04;[Xnt>=4U^_QaBD#niV^-_-\B$H2:;Ja;a4oq$0P/r)<TXIkGXp8Y.>[ahMqd%r)Wf[J!g`@S]NS<)>^O5+E*LZjBo/_IOfoi5F8iY,#=H<jBoGkIOfoi5>M2Jj>kF)I$/b$^Y(:2(QD3]Ll#Z=Pi+'W6DdWnP4Yr6%s&S&6>pA1Jmn+m3JeEG7AgSt2VkaHE;pmn.D8tPFO;?:6$*`C#OA;/#$2e8?dj9N9+;H[$]T>\lkZs<;a0=a`('km4"7MBSq&fTg%^As%:-ach)/1Ok%`eB.PimR<8q>sHc*^Ci"TXP6+KkcqSJRSZY`V>$^Yjqo0r6Jd?.>f!J#M1TWSt]D&oUjPBYlMJql"g@4A2/r'%LD*5uQlARlktL%p1),72gOS0a7&a"kW2U6&.:eBiK!$H;:qDV?9WEE!a3A6fX.!5%5NGP/a7-BNSgjj]?E`8rc]Jt\[G^ma&`t,!%<0@RC,=Y>Q,9G]-cO3kY3KYlP&i*3rm5WV8oYV9n0P:P]Kh2&O.J6["]MbBGO]Y*Ack$1Ypg$ePH^>OP8$In^hF[`UNo_$1/Wf[7%$lB3U"m<C^'`nQm8LB\rWqm!Y:r%>=)*]:GV8]0fj-&1.>WY6J+S6;V$h["q3e=i;6<],lb*W>*6r81W#agp'c$Uo.R*((3nAkde%isKKh``,6<"6!OYj/+u5rP3>-:eT"<RMm$<)1hJkf-\jD>QNWA^pL$!>"VFS>*R(DZeEbfJB"1uDtL)$>GW$/B>$hq5:J:sQH#'n%YU3ri*2u`1To_e\.UiUkTVH2EhaLR$SHa@,9-tN`&`+\ZKh*rj]8XJ#'b1s<7J7LAKf^10Oku5sBe"*7[9s;2hd\,Zo7M??b.NdK%?RTNLXIfpM(i(61dWFWE/B+iLqT%;VfZZ)l#<>:"'u2/$;99B[%_)YPXAF3d9j9#RH;>tF#d%1&>cN`o5NtT@jpq,RH(Q5s^m(E&%b<W$D1K`WcCK7(&?CBmC<,s`b"^]*?W/XI`Uf`1E7@(_=PXu8I2"41*9UChpWY@E)lrst`6S&o_;.Ed$U[R8fQM^q80R=<\a]&XM%-*U6nYWAI\0(;C>6A86/BmK&ik!bR-V"98D7X:'8itps9aGcERRBI0'(U2-*;TNPr>L6L4pii%H913LhIh'WZ:Cd?JM!ua^"jV\(%ihm'*)RtAk98]?84:)SJL`b)j9W<+@;/[),$fM5:<lcYf%IKmP!j2M5O8:/$$Xa3\"f4]DB=dNI\D^#QN!<>.`7&B`?tKtZ((jN!%1,K.Sl^`@0621Ia/(<$5D=A@`-\<ET[1LuT^G3G*/5+>oMDI)h!ft?bL67Wr^aH#Q$D7IZ%dP\jN0qsk#&jam!+UPc6j^70fEY#@%Oh"OA(3CmtlepJ&=$hdA-i)%u$(2+<D&=XFk/qD6`M6Qc@gYN.K4cW+efM,O!rXgD$*S1iQC8KlVDU5!6H<f!)Zb6gYXI]g!&>3Z%3h_)g(]DBQ%[H]Qgksn$=A2'9Bfbis7]F0^W-='<&;?=V0ZPtd-cr\uaY^m9@$U"iKQFB;`FkT^9$5',$(-K]9j(r+AN?/5jU%O-%V#%4e)4;r(mgA#MI@KRV:n4[GQ"E?BFM=nMAm7GH4g1)8FKeQD6F:MFJ%E_2!ou2e!3,[S"as+m79"RS&$%BgbN1c-RBd"-*Wi09%r>2Y*XA;Fr6r-diSL#k>D1si"T(/p,q9h#%@=;@6.AgSf>oM8U0TDF[Pt&Q8;aE!$763?<qIAn5<\#F9;EEI?j^]!j.r.V6m/`oZ%]HQmK_Gl]W*3Y$A*?E_oEa#n>TJjc2Ja"NRXf.1YBcG7f1>j,6;r)NK^D,<2EF,f?QMZtGl,#l#/YS8[M?Y\=a47k)/.OcD+s#<N%WO=Ph=V+]Z.Zh(7/=RA0@iViO8fI%(KQDu^Y"34gNWQO*&F:t!]9DSEeR&I4/taFtFrcdk#uN6ONN5>3a"6j?P:Xcn4OKTHedJ:o%kq^]GMaZkSA[!eM<G7B80Si:di<(Y&"^!k-/0IP"8W1+I8^IUYJo!:F:+B@A;ti\W8MY1X&MhOqX:Iu0AD02sj4(Yq+DX+DVLr[,%-U827QPE_"X)DK"2kd].a;RQc"+eT>AhQu0!IGU6VHTKjk#$J_oLbDMZjhTM^BE^<]i+Pe0M>L%'!pIDXXU)F$3X%$GTBcJq)j+0%(,H@0i3cB<DDIt\qc<3hf=_RA#/D`dZGJ/+3bn"3Tkh;WEtB83.QTQ)``,d1=O.PIjAJAV#>-65V=]]1ie12E?(=3S(m=9ZA:\c(%6<PU*^R0*C.tu]E]W@YZcCf5%K(amMX=P5VR8AfVm8n#aC(7jQd;j1EirO47Q:[T'?9:EP&3l0&7i56\>/>^kcpuM5QP["pXEUPJ%=fg.O4V[/67$m#f-bMs:itOV,hEiase63'cR4</HTB/mP<!W%90n[K6L&\F7Q3JhUg-<t`_$2;%GW"nTF%&,??Mj7T(>-,_Ns;-^%PtR7i!<4E%/NQa$:s.6h^K>7q3a"oPSXs4`enDA)R@oOJD%4qrX?bh_N"FQ3Z(gI>Y^Vf1J5b#+l:ICHj]El!cr8;=0a;2oJk]2E%X;!ph<GTM!&$1,D^cK8S;\gN.:3CgJZZ19\b^o.X_K\fhX+OMT5]MZ\<QVg-oC_$[eCl:[T_`VqXk5Co.FptVd'q1+I4:tk"iI08%feT9:5#k)I:M''@TJp7u;>sMe8!u)HAMJU9<4#S5I47<gI%bfJcko(.YkC`\$ERFA@!:%B'i!0HJ#6q:M@O"/hGths_<7MS66anI%'b>rf5I2f(s68fEAjk4l$Uh<:M"[TW&4p3:!(mB0,*N%=,'R#W4@/?cd^E?&kD>O/dEbCB=DF)"'IkW=&UTk0p!3nZ)Vs.53mIV!%=!C"jA)D0\oYII7j%uL0#-H"L?u4bm1X@u!Cm(lElMC.V8ttUM`D?c.5F;=;e:2A2VS4^r5^KS_X47@2>DfTEL_"cm2t/b3,'t(d%rP+R0.@"EL29XD^g5-Jg8[,"8#-jIl+mTP^`].$gSY[%LN:?k3c7r%N'da#NE'7YK-XJH+$Y<pS&?I=0GrDE7-_M2#6-iL-^8sgm%$II<FO'&3+UOAsp:N\O?mmL_Q@/C#WVY7^WL-RM"[\ae@i;$g8@THW)jB7X'0<2Q4ek(G[/L\%2p'f))02MYrYPFtl$i?sPA8TB`%2=+OHLc:W-<CPqN\n<5Am%On)ld>r>-RSglGuk*T#2QFO@=GS"XOn2fnfX(hFBhskhjKa]EKOgR5[ZAe6oWu(_T?iaBR]3p"Ot^B%@5ikA<n)1_Zu^&=J1mG[A\_DZ/P0Lmn-RXhArL7'h5`jrJUXj70Z.R@I^b!u[X_pf`3sAKd2"/>H+sLK:0t>(J[>G)Vr_2"#$LJ#%A(Z#QjkVGH*JW9!@k3/uTa8#JAl/TDA%\aa4TKD8\LpO^UfO)Ira[P//nL./Sk=S$G\Cn[[^QjH>XI$[QsnoD`\I*=UFnk+o2CV`%8V\Lha0ZOla/#BaFeLQ^.5/X$rD6ZmZa3M0gFBK40&(eVXpK3/=ghe_4r`$#YpY,!aI'Z7X<jr#gETQ[;qb1D?"D]^Xt!,OO_Hs'%b'I<DfMNN&"j/nTCj/V9+_$X5O+tfK<;'Zu?6m+2b<$pc,P%uFWm?ga1+c;TnPce9Ad>@+X0MWmN%!88J8J,M&QTie9\EHHmC4RO%Mr0bUX<;j>ZGr/;4.Tp&L%(7o,@rC/T\*%S\ehF'E?Ps*I`I.^%CYN:g&k]")?$Jej(+=:rNFTU'_qo;?"U-g/5&kU\o18RSLdpK%/I.SHRd@P[nQ?K6bCR@GCcO3pmo8f/7`_TZ.s;`8@KEZ8&_h>?CgZ[Q[TeW8`Tb)=X:c^`^T"*Q0FSdj=(HYZ[cIk7<[M_kjWiD[%Nr^7`),J8;O]!`=O$0qL19u$kG%#Xb*6;V^MZOqIr[eb@QD]'aCntVtX/mn<?%Vg<^leiUJUN6S@;6T'R3GJn3)0-C&kpb*OF<iY%hGqUs"PslihJTXf6dJupI@jIB\')UHiI)<d6Y/KA=KBNs;EQSU1'3AqcmS+h>(]fCmU<_21E1/cfG95;7BjtVMWF8e:_@l+W)Zn#%9+DG0JJXHmZWO3JhVA7AP%:[bhH_9d6`c&2Ih[h*19tY?][%a/$3ImpK=OD,r?b\sh0T^`HPQ*H$F+f256Y`&5gNC@SQ=UX@.k>p%H?b2%P-Zb0Nm'<6Mj8G'[/.7(:8RVE*K_pcous&7(,BmVf0Eh"WL6b40_[1kBT5Qm$9hh4C][^_LkOrTlks!3d+Y5&E7@pJ]TUIq%PeT8_,;#hgYj$M*25-76aseoO]`kSDj;HKNl27dZYYS$G*^+Qu<u-.`jV(4e<OJC88cmR_=j_'H$@MbFdjCcSMUj#QfU?NbQ6A-m%[8]a)H6+N7BE3.GeQN!9,O?;A2,23"Z?!3u#:N0F.\_.&8Cb,i)N7<E%'p\)l>*IZqOM"PODKEq*]*eqPd5<"els2;i2AO/-4]ol%'Rmn/@5l3DhXH01PJ?-:QdTt6E]q"ng"=Ve30biH_+.:AB2c'rEUt7YNcW5JSZXe=D^Ma+(qkrdD5l"OopW.+ZTXdMZ.!Erf9'NT%XI(M]/_=[!,#-irXP*$%gU$m+:\m$$<6C=!:#'u_2(mjVY*_VW8uenS>d[4nmufG3<LL!pAq6@p`J12TOH^ccaq!O=6dh5;.68\B%B1c$&CaPM91d=1"ENFdR-qU[%_KTfOQ,Ys(`C+H.'L8`Wlh.&fCt'F,#"G4><28=jFBUh\V(n"/5co0<mG[9T\GPeVND7I<NW_'O%1"$:E>]_ZiG,4k7Tc?.`oU:t>Qi(OHRn`b8_+Z;rrr/#aZ2RGsfJQ`jr>gn[mh0B84-8BI^H$#SHLQP%BVOZ(qThj(^`Y_VrsWAb%^[5@6O1un(lF*0F<'d\[hA`32SaXS=$r+.Z+&712qc*A[0Hp+8h%>Tn12=7o=Fj.8JJ&q#;iV<<7Ksm_V3ocQIkW#j']V[9&(2g(%V*$+945GCt5Thi1A=VQ#hqlCJ18EsaG_g^(3CW?pre6h_`SS4?^m$qmjOaaS)0UNqn6@JkenRr*\V'Y^.Q[MJc6e?8>d8m<7*DV!%"[X)<\T;>6RR?ZD:ee*JEhPiuk_p3:;mjZcI7?h6P7lL4B!07V%a<F5dZ(5@PDSK^gLHoNYsaI,gR',i9,!>/`BIpeO61]<mkn`V%`.u6]oGq^+;*EN2)+V%ZO']":ZbDZFT;%YtXp9lant8.!R'<+XPseWWi2Xg7I1W1"8[-Fh"0%7?*NSJ>)UG4[59n9.,ZW3W-@cK?%<;hcTMle!\M$DGKMokJ1n!L!5g3]L2Us0.DaZWLm`TCpgkg:WIii+&CoBCK.&Z#%TC\H,9<3/0+7fmE$7j[;J#]TmP8kD`b/,8)_%1H\2i,]0I8B!9[3Iug9Xp2S/WCc!2VAo/fO];W[tX=C1E9K%(FQTgjU(S=FAOQZkijlWo6=EB-Fr(DC!c,<4PDq]:@I"I4`,j,(V%%6c&HOPldN%g`e>MQ]LVQmCmD7HeV3Y(.?=fBERtA6p4g)1#:'%qhZT_>DU@06Dq#aaJdW&L9=8.s9W[XY9;ki:c2M5(ko&Oq'\&%Dn/QKfc:5IS#c1MA'%GOU71j)qn'@]8U;J=qau#%Zon+Rl4$7`B&tC2KXl#jj3ck`)nkC,3HjHGEm+,.dQSRDKINa7jdD)tV=A(!%X7/?TF#j::"]V[A!,>7nh8LF=JgPNmjJTHHjOrPd0&$qY2g-"XZcT-BC,kS%c"^V-Xjb>c.?siQ0H.I<i+tXi1_5EYcpK:AVnW]K%.W#Xr^&6-WMbU!;@HA0E@KQT7mq#&NSJ/lWK!.9#/+fW`dK%,=mR`apOP8Hu4h5I+ko_-^_T%mQ0)sCj[Qj*6eehO+OsTk="JCIG%K4t:*et#D?Jqj49KVZ455FWl(%qGH=_'Lbr#*Z9qWJ,[E@P.8Zj:)5=:]I*\bS<2\+RL'HE9@c:#"(3LZ.!;lEedr*bAJCR1$gLT%5'&<9fd=ng?.6dPQ-kXWkf4;3nqA.`a3A\n'DLNCkO,"`G8IdI*R[',gtct\dB`M,rYkD<e`D7*s7fsX5N.t'0E0/lQh]\@9E+M]%V1*^id_EGER:"gcm-j?as3'")rcbOfWS]kPl/+Y9l/+Y7l//T^UjojgOT+()62GdU#3k$I(SlPi>*/a>>!`"/Y8Whd]kV),pSsAO%h5a$-GHVpQhn<c8IeTk)q;&)@k'+!IRGY\mA:F9QOo=+:7eV&0)VO#]C1MhgWfd89X%)f,Y8Z*O]kV)-pSsASh5a$=f<-$Qk\5+h%Rm(&#OM^)KJ%-F6p3U)LheV)Ef6Edh4Qn2_KF;uB)pOs2SP$E\NL&tglE>EOUV?W/C[Tp>7bcHAb2$IPSEt@K;02"?Ql@>(YfrC_%c]M:>b8HcEJ*:ClORAf6j0Z#V/no@#p,0j=,Jnt<?$m?j3W=Y\F7.[(HK@YYGdgoj+09V:RtHb>SChNa8$F-W`oSF:%TU*%R_?]P%5tB6XB27Brk1:!?f7Y62hJbHgBb%_<:Xi$BShuX&`!'[Ln`b`Z_5Tg^@j?h.Y?1^I.^:=&ccp7\F=5mF\(@2M\XYQd:E2aaZ[t90%9aLG9?O]NjY!W;ZKTcUt_s)9q=1=<D/$,Ef4)GfX0V(ql6XX2GGDJJn;k.+0I5pF]s'A=biLo54:8L%D/-(;o_gIosWl`.]D0"`M%QCM0irnQ##e%EAnKdMajQ?UB,_dO(^,j0V(Q^CEUGIuHI\_BK5oDcD\o_!/WZ*#f"9+u%;O5qA],E529.VOOgh+@QefT?Rg_N*CN%Dne4rY9U!>EORfp8uu?-4Dp<[J%LOp['(t0rp9>>@qe3N#aDdM>POTb),V=CD\"1us"qc[*ONOe:>lbg[cfs#hMd_Rk7a&""10tM%@^IKrc*./BfP,JJILG!:EY&l26?7t2YS]amdVC&TA]KW!5I2uCa4D9=^SQs]Z*BI-Rf4$lcWcFdf"?0qXe''Yn/'C2s!:.\rF;>I%U$2NDMICbsf`Wm&s'&(gpZO:iBu4lrMCoM^G009Xo*+F&0C$^[+1QF`rh!Q1)ZPlO@++ALs0'W*6oH&[Ahj[e1n0R!;Z_Tmc4mUJ%s'$Y:8nFc;+eE!sY5`T*dn`'CU':S+ULNJn((BJ8>HIV7*Xp6f[9t\<ljW%&s*?B).;1Vu(:I;\p*Ae3SPdY`q#u[@Q?nn8fsiWm%S9t;-eK:njs6D<0V.m8gPbD+SO^546RiUcbZpS-!_J7+%AEPJ%V.KaT9]d.%*ET'nnK\]=l"i*i9lWih.1R2[P=c4_e=DPEbs*T#%nM_IR@6AB9S)]MJbhVMM[uEGn#,54u4HgYB_?G)]Ye5N*Tn9mq+n`!m(Bckg:1H9J_?fX85q?&?g-OKdGocc(:=p,VX86pemTBjT%</P'(<oYVe`)3k9p](VZIWP(^"$7A0Vn,dN?C+9<1_X/c;)_*Y07D7ip;SjR'FrrQflZGlBYs]Lh>^*Y(9sp/&WQ[7J8FQ1D!M!B%;,\6!]9=CKDfiH2Qk;i]l3_1[UZP)c]-lG6XG8_D[!W0+RZ')WOD%KAPMuI^g`0!W9uK]l5H%B6%Vgt4+Xn[iN+lL6!VL8@[jZnK%%r@OP1Z(PLR>`N<9Cf(m/1dgd^r!Bt#P_7\':2@tr<BMepnp-_Pju\-k-)VVQrh_N;]I:=,`Z58QrEB\W84(U9L"YhE0.?:ea,-u%D'kqt:S^a0eorW)0;%Dfh.TT[+ubRp20Gt<6'>a5!_>;5-D*%&@q&>%U[69?C7NPG,=KW(FZ:%I04FsllbYeR8=D3";O)&.VHl,i%bN?`LMj*CMps#+J5G*gRd=b,rIhrSFZX/^OkscRe:hS21H.jt-h7-k"TqK`9gtAXZQ7(L/o;<uMEEl&4dT/f;$5![.n7rT24ri'O%-A>jUlBS)F-I%t]9rcWX9*Mi-L(q)0nGo%!9^#D7):O%%H;udlBRQ@"Zu=eSN"K@9bRb4TBBcdk_oE4dpRKH)N44Er;_4^I5%+L5%0W:F$X(fQ_b;?Z3Ud@/IYJ"U)g.d="A1!f)/UFI4f+e7h6RO'`G06V5<P_?$_J"YPp\0M$<HuocO#!"6a\:Csosdj6mOb:Xg9`g9%fX=UPrXP0/&'#]i1U!1UA#I5Dju(&(*JmOgef9u,A\C^W$Z;b\=9s)P+9hE@,\R3(W2rFdQRpp`#hsJGh6+@DgTJF_c`!MM<!umT%XONLdi7#i;98\gr,=\idE#7%T*j7)?VV;_gN$[=dDHtmc',4c'-dn_P7$4b_0r6I6N%.`F*j01'3b7bqQ#SKWp/g)+!T'OSeXY;D%es*5.32Tg*Z*.Rd3bj+78=08$F_\&r^hrdketj_Nh,+OhnQRNoou5hjV"$j)mZ">A,0d8<DnGo0FXMT_V@kp,&Z_WcC8j6"Lcu`c%i8t,#@+Q0g292RF3XZ$7pRc..]t'_0VS-Yu["pff&@MQT:lUcBXC+,47\)_hh&G#7e>QlhEO&4_f.`Zbd:c43R6u`b'KTN<G_&G6%I6!Q71S$BTV0:iJ/inE[/mKn@L"ji<Q(/>`SX@VJX@nQgnEH`_01f=+-)3Fi["\][a5-UP/re7.2n#:\BP!hPV"9,j3in_c;BsG\%WM)p=Y\6^3Ci7[@.;\W[$]L*&l$a%?7^ZXCr[mE`ZYC'g*56XiWiE<dRC'QSIWK%(?tlKJIal&N'_p(e7!gmY;a1GhLrEJhUqD:%%+l3-0rY!,sj%^;V,=neKC5bKsK(!Air>^jt9?H"ce;/F6XCqW%rJ4Vi+"d)Fat>V*2$(CY[C*6o5Ls>7Zq%h'+*4DLb-VEM")7Te%dr%tK'/CFIR\sJ5Zks=\S42=*+8tZ,1k8k8/%H%a-?-9?(?OQ86r#7k@AaSZq.Y%&ZVjan)G3(>MF9R?='Aa;gi50ZKnF0%LSG#A%5S`RYeUBfhZ0J^b,,!k]C,O$FMg88kJ7P<fH*L4kWZ'<[ZDoc/AQg#?<1R^7@AC'^%3&kYh([i_pVA]?kuip,;J%b7*tGC5*>G!e%=qdGS7FSXN)X'C`cXIY;d8h'*4j,#Ol(b4o+.*`DKma@GK3D.^PXEX=^q-Wh&$7^#$f6.--dg%KZNF9u=uM,d?1>iC:uC>j0l0Qg%.W$HoruFNc*mclZ";I+>O*(q&m++!Cq4THU;N@o3MIY(j^6EZVh.U(,/SgXp_8Y*WfUX>mLSM;3<5A_b(,LsYFCpgc["[R0eZI@1%A1pXmY7\:oqeXWfTFt.W)XiV_(+]m(:3/*sHTK0T.PA-M1hcV`lB;0.H5Uk_8hFTI,9*rKIe$k&Si*)@mXKln``XBtF"3I$89UX]%?s]hY;]D!1LSNW&58H_nWo.jm\]?0G.]*5N/6W/*[Y##lXY+L)LhRd"9r-4A?%ei)VK@Ah<#O/"T1W#7")2lWQ$NmRr%8j$]PRQl%SKQ[j46fB@XmN:E)BfTh.bn)5D8K;RA?WpdGD&qqK3&:1Q%VbS4%N^M$]2B3S:VrmCqsLiTCWF$ReiSr\K[Z`s4"W=,Bi5J'hSIk%2P(0M8)eoh:[FW&#1(gq^^!cI'Ft^1acZf)"KdFPPAf\^rh^Fj@\JuV./u;e_`&aDH_-/=0@&Ztpr,ujIl/gDhQtc$g?-@\Zh2Q!%n&oX'd,%4VdhCs=6r3U?V;h&l_Ok0Od<Ih?$11eWgPJLLlPtOLjNl]V\_>e8*]fGjmAGQ*-#$VSPsZqlgX>VckE<M1I7Ie2A8PuQ%EK_ef9&[\Ypp&Yue98H\K@i"_Ed<R]-au6<nu0lW[dQj+5ggk]c:Fl&#e7ZNL?#iAZ1qXRneBAUY-':ejhqrS?[X[N$^7P;/6#A,%Tm$(Pj-BB[gj`,`_7t]D&h1cbT('j-h%RAuD/unpqg]+?4>@Ep-b-X1B^oOYSk2)@q@C3#\&pCQ)s99)>H[ZLM;rU41IGH?SJ5h<%p0"ItGW9kl9+R;W9/J8=\<[0g4d!R+$V"-H@>$b*R-tNE"V'l:L+.Em8(fs\45WPMReB5-<Mh4uCR'Cr+HeTMTXA=U>KV^b+,b'8%_I`T=+<O';gCZ3Jg06pLH*5Lrn8&8O:P57[;u$Ejlk0M%nH;VULRpcDg,GbArD?sHKKDL*ft8_JL._aCK>(WO>i*"XBEfiPb2>n]%BCE=V2":[u0Rs\R:QphJJt/6+aG`A\Z^GS+G%^CerN,_V'VhA4]QA*SPDA]":?.:k,qf/]M82BWr);VCZQ;"-qYX3lR0$(h?SN)R%I5P+EBP[MY$f)^'4Y6jrY=H:;&^\Y^9<+omMP1Tc[Jf^hi5QUI,&e@PBqLq5!o9ff,YWc0Q/_=bbA/laeE5=i*8!%JHN1i^hG5ea%JQ=qGg\fIbPl_ZE^&k`H'<Y"@/3N9+]j[R]Yg=k8d<ds(RdJ]-BOH9arV%p_r3=9I&D4p?DH?'C6ZBs+dfE/iql_5#TWdD=cbYkJ%<2O1-p7RgG=13?@TJ-,M$T"H`XgilDaVa6EkLnsfCjntm`a_.J"8b;erONTfcqZ7'DZVc'\bS%.81Qq;NG3"tOfKJj2@P.S<;Ka9%ij<fF"I,qq]18_`?/Ft41T>+Of#58?<R3TGN(82?bB^j42jXe`HDG0l?hH9OJ_iopBO8&RP<[rk(BeFIl+<YjqQS;r&$p6U)Oqa\%mJA9%.-;145`p`!pYR8#X:Aq+V#8Xr"8]m*p!,1LJKF\0Nhb"\(^"o+oa&8oM5O(!euOYfKF-#G"F#!5))),LBPc^R2SH1n+4E\h%j_hSBf+dG6F;k$5"+&&E]_M1T:nTQ!=R0,INSefG2["FG\_/kEH<]n-C`3=sGl_`JHO0)R(aJhJ;#9aiK761\c`N0?;kW$YT'lpe%Fa</jqNU/L?4%!KTP'sX;%W8n+jd^nS_j]$P0!]Ij8L>A1Igl:a"nc<)W(NO1rhFc_Ehi[ZeIr7F$Fu=1ueg"(auI=hq=Z?X?WoQ%rYP_PI/Eo3G,8o+El2T/J;35Iod])el^h?(TEc,6."[&k>!<sHFKEr=81+bXgt!ua)W>t1449"AF08c^XoQhI%d802k4SKpIi:n-%"L^)7Mo*/0jH]ejo>_F`d#G*$.j?%oq<N?4UDci3*^Q=)!@XiG78V'-DrOQ"GGX+<!d`qT,Bu='LY21Kkj.)OK^@[0q:g/k0VYYi%F756/3UBn]D/>8-hf@i7:7/`.*6_'CqEaM2]t]sKnF_^?=,XPY\$j[g2Z"knhM6CDPJgMOr9`2(qoep)jUJ$;[!;UR/t0Pg\eq$,%^)^"e!aF0SpBEDKjuWIYhEU6BNP"utBBF,N[i/I?D]-Q4;bqk#g9o7iq:g\cA'"T8o=+`n_:\\_(OtGiipFdEAGR&nmecn(gGt5_%M47&b]_5\(rS%0d0q1^9@#R>+Nt9KNTDdho9],!@8&JEW\";uKQrGd53nD('3naOFDd*nR>Ce<t:#C\KKmH=94,:)fm`n6i>C3/(%R1j#1,$r>cL2DoaFtta,bnS>F=kgP<IIgo&G'$sBP`@AYEHuhpM0QIAkZbHGb\3VN\U1>uct]d^_UVHrRm$rK`b)<af*WW5fI3NF%+Fg(hpW"5)Dm'bHk0D5"6T*<jc+"9'P/Q"pM3%CgY`>8b#!OZJG;mFZ%RS24Xod,7<PY@%+NKrQjXOO)_uqJDG1%1XB+ps4:O)T`%?r^^mW/T`u5c^@bf;:f]LTTbF!t*b9)XOUSTE^jpgeoB,OVCb[458MZ.eNScgBs(_2*d?rK+7VIO$*ZJ(;\>Z5W:1;W$tPZ3@I.D%`\_0/gYpB[kl%Ocd-=ZS'I[.I_0.LM.oIp[7aa*qH=;B]e)MCl]!!&'BI);7h1E+Eq-/M%>J\"?X`AEDe*t(S8a\0t/(c8*'fAE`%J?(9<Uua`)qCm*dZaHng9`=kAlCB?uo%YB2-E_Q+mYAtoeV=tJMR'42Nr;<N$@7#ln.S-(1(YoF-`<ctkZ\A;s"]>1o,8eAf+%@n%)t^78O9$I2oJq%Z0lITpVm/BoKe<nc:-p6"\>,kOX*j8pr1,@<DsMdmW%dN!_%.t=HYo2>!d2$jqij]Zpt1h9'/]8fU(KMRpu[mG%-6l>`,B1EaV'"Z[+bg7"@c"*,7+Wl)QT"[/2'7R68%$*$lPKbh_sI9Da,?%>5FQdB`?mM^?[QYP\8F,eQWH=:pb81'2LiFM)tO=4%H)oRbFFDPr&?EO2aKdsYSFe,`:g]hhA6CcJq7\_'b2p#smP;$Xq==-QC6u4?]$db&KX,cqc7s6hpX_-pjHVJ"/k-qbna<\JQ;7(:%TD!n@d8SVS*dRB=dGnD$](b0g#(^f][A$0+7(8"N2NPI*Z,@/)qXZc>+k_;WQ>u(H_;.aeGb,Y2NPr7S<t]GC_9aAFcA/9"`A"=`%\au"RW.#+j@idDCnOVfH37BJgBteo+9kW?KN0^).&OupYPV?Zb%&tV4b_@#shhI1"dqRguq2Ka$orWf_X&ZapVaRk8&lU3H\:fe[%.m@L)Cc#bV']<9aKB8RAeW?*c.X(X5Rd5Ke>JeU1/n<_^>Sqre.;6)8$=qQ>Ghk'B:'=!ATjBLJ.OXp0D,_2uBL!LAS2@p>l2$+S%&eCB%lpNNJAF+@Sg7-^2k,(P[QUEZ!c'20DBjnG=:T*LKo"j<e`HYfpW&(F]IqPXUbEC'7BRWhA?Y7Tk-UZaolK.Y#Z@_@qf=Xc)%LA>"u+SWp28lrDukftgMe@E58B@'VS@lf=OcEEhUXOgX\E%lc#.^;\sH%j6R-p5!SQe,hZYuM"-h@k[a\Fj9h?RNjHF^co9)TJ_Q%5m],*Dn(8G\;maqG-2j$rVY$sia'T.Ei9[U@lZHlHPX^XQ%EksPohmN)SZV\:@h["%;!2ACG:sk];\lJ%C*jB@qXQ)nY,04HL,TK%oC^h7)o5?*6t:M%/`IQcdq!=TkrRgm59iS._E5Vk@7TI%bGB0`J5__n:`C;:/(:N7&lliPCF;#c8E]!`S0?#O94Pp"O.rY`c]aEh%'*)W>NNY_%iH8[9Rk`"UjCcB;9.mEC:+[mpA/\AdIfAniA_FKlGb4c@S_<o&j,<)=Y"l&qm]q]AcNPi)hOgLljAiq.6bF_T*hqZN%I6Vq5AAI%CCL<ur9o`n:C=fTO=u_.ucbq<S;HZSHN`eJP`8Yl(r6[pQi%Aqq.m'1O[^m9%Qhj3U"ul4:=SWTh><2_LAT,duZ?d&'%O^<Z!Fp-H:anCc0rLHc*gmC,<$n^GIleYH@8c#URQY#@J%7CFWCf#_,@H<WV4.tq9gsh9`khKb:V)uOu_^kS3qF:h6Hd;ZL^^"?.%Y6"!WqJ3I&XN4+qVa7@Ua6$CddBQ`;eg''`8!t]FOM;9B/r;ZiO5^(?Ge4`+_J7lfc@%a2:toH>(.'jbh!4em3nCHbbKtP6g.QNX%]O/4N2u7c:h(oq1bA0Q2Lj$.`hD,-TGO@cnQtF$9&hthN!T9DNl:c<Qj10k]d5n)OAO.Ee/p4C$V*2S5:7bVZSMf#5-lE?Md&QsV%,+>B^?Lm?)7I=tY6=W"p#kTm$Z1>@j@scZ>Ab+Y'E9563'JO<g9:if:B;6KL+mGd]nt%hJZSDcK<gYbD[%bWP-g`m!pLJX.W%mZL%Tqb%U]0?Serg2]tBq4ZDC<\b^?"hS!kOR>8_o9e.1_qoR##4jebVjmLQNLHj<3)W7m4,!"BK*hSM2%T^Q>"8Z'&X43]6Hec6TJ$f%>H\Mnq"_qp$VV5#h&RbSXPm;b;nBSILI=M9Ag#Kko00PA<2.Y7/oWmfOD*"`)YRKW4'IK<fm5Y[G&^pi`Q5B^?A,I5/SND[Ts9Wp%G,nbI!hjmnrpFC[%9R1i\K@4XdWRK(Qqkq_RAgGJR@$F&R;\E1$!Ep31GOe+ZXYgE&2WFGVbNM%<<_JrmSK+8KN[)j/_/^b'f6][%cH8X"E%Ap4[=7:eEBDlKGC/ahUYQ(.fG].fCb:;rnFN^>e'BN?]p_LfNS*M3T83WlSb3&m8`c>1e^3YFL#(2l.a%l3CG"j2OQZ8e%BJ">?MP40om*[Xm`Lrd`om9[hnliQG.L,:alh<lN\@daRZ*tWTYD#B]goe:.C=g=YDCm,1macG!$-OEc[8:0[eVC%<N1]gE'sF%t%98uQfNXL$f6j0l.X\mg"FGW\G`]e5nU`E/G2>+*GTeAB@D1OE'l7SPt/1jRJU=ZY%5.B6/"]gHE:I@-):8dE@)3\N%?HcaPKrHqt%?^=k/dq-YFT5;(mM,E,/HSRapAnpeD-5K?ALWjnU`m_A?pSN9rG[;BWhEYTKEIBtkP1IR;5M9R[5Wb/aQdY\`NL?^^E1XjAdoRs7%-2[.JFil%"ka@@2aFn[b>JNYVdoI:OctKu^qr<$l>qf3YQcCb+Y=9+G0(4*qkgUW@O.arl$nWDcB,s9n:CjTOL<_i3c6?H=;%0"<%"J%SWE0V8$lNfOg[,CL0FOh%Gg1\=aA*C!=kZm!;`6_XWd#i"XeRRgEbH]^b<Fb5$(fqG<Vt.^,'LQLR5tCRPKe[\\"3K[;ApYaI%D;4=a]QkdLIAH/,9?*Q0e1&f!XP_M5Gk60ZM9\RsqCq9+Vg$uX@,'.7d]`@>VG=hFLB(SJT/:V@VkJ:%f>`]jCV7>gYfjjl-]3).%c_@ZJkHO<3&,Z2=8']d/hig5t<6m5+OhU=(hcuLA,9I_HXt7.p&2HbqiZMp[VQ;42*NIaqFgf=n!0s=S+IMoJJkbYXT(VHpiS/qO%D)f9G%*_suGM2Mf6a5<;)ujIBb:@puBs=)K[Z/R)=qp>3jA?JJZp]^Q@#3Gm6_GlVS;"l#Zq%?Po/ekTMU!PU<[Llf)81\Rc-5$V%`AGZc;2?ZXj86)!_RS7,8'!I<b?"8?3S2qNa'mt?c;!l#d0BMHAR_&J.l=7fF!mk_?a1S,M$$t\FubE>>B%U7FrXk4@JgLpY2;^H%ZtCCrLDCeQi4lUfVO^V^cJJIr&#T.?Ge9jZWd52Q_>MuIj'*32@mpgk(gbqKQZTPTb#3CHbT]uU1o=JW<l:<M_7CQ)/@Ikb&!BMk%jY3QQr(d!9oW^3k]9e@T+'[0DR-r9oq+A]mAq!CRGWB%CAdrS?<b-h0)L"=C=MWb3]:UYo7Z>NFYue8Mlkql]C\)0Q*B17uC6VH0%0/:)4E_F[(rkpQe>cZ9iZNZ#l/`Q`%bM"7J1H"/#aPK$KcF#@M=hVJ9BeD(^X"-uuD(#&L8H!ERM*Y;V'oO;kXCHZlUlQbpcFg-p%U2)=_jQ<;!BgbqRE&Cup++'T*]lr3I<$n*padILr4NoG=F'3_0-D!h.SU8DmY1/mQjs8m/,GX[ipAQcPB63-rZ07@>R;K$7(3m.N%O]cWah*t527@3XjGJptrh_D6'k%Hn!RJ9g#@q4V!CAf@r*Z;E,[ideg5Mf_c,GV^AdGT9,b!RuUaN18@m"_:&4!&4qVf]9UO%fRe%4sG-kpcKoF).Plq+=:e)0oL[*Np%L`98;WR`M)E4;k:3&TgYJ@kJlm;b=IuSZn^\H0o<s:3QZfbE22Id3-AVBr^CIGm=_/bGCWu2%^?!R&[Z2sk$6R_="ZD2Q>SL9&nBe8a#uue^ZZfa%3j)3ies;H8$_<r@S[9t@[Wtiu5Hh`V?.rTJ>RTuo>YdI%NoZXeLg/0n@ic/i%`;O1=`5<IaK"bK64PVD6<:.`D=eAMr=$.HjE3IE8MrWcTD?Mg[+1QDTSG"cR,Ct!X_p."!MBh-3*=oXSQ@O+r_^SHQlA.F#UR'*A%_p-qF-JLT@gl9:r`f$td9]WVL9VeY*C$/1N[B26I$[Mba\8lgW#bd@)PE61,YrEV;GDDNlZU+d1e&QDhX2`fP<fHBW__^e?:HV!`%S[h+(m^t@7I7lK2+3h,8HF=q-8&L"#p)aApe=LDW3[+ncTk5BlGrE=?^/i6MNg[33NEnHLd`)=FX0WsQ_o"M^>imqPgl=62g9P$V%46m0*$tCVhmB.D`c6>Ksghg5la/ksho53*5<eC=Z7\@M^^_#L*?_C"q)q7JJlI4&t-A(,/N*KI;,*h&i'gudi,*h%VXDGHjCeJ!5%8#5"E.3eG.9bFA6CPbTq>uO/VXo3%.2(#Te\NY$4)JIBH"fI-7aI]p@)JFrH]!bq\ltlg1:cL6k[bah?&s6pWU1a-q39,9eG:;5R%IS0p>E/s;-V*j2ur\4\5q^\@Z7UCfALVfJTa6_JlF-d0%L]ZuBaVKG'/):K7e&PXU2-m/8S!)UJQ6&I6M'jEl9lgpB.QWM*[H!i8%h-<cHUVhid![#M#gNi8UNKu[A'H=m5]!sej'VY)X)CuC+s$G9r6ZT&F5]VX05[*e]85`fL[-fT/"hb=9_aVZ<I[%O$/E0b#E<,7B%O$)CLKa8c^O>FKp:[#6ibOh8N!,OdV^$;D?&>=cZ,T<GBfFW(+j1)GONGY_([qJ0(0,gLW?/ai!1r:lQ$#-dhc%=amXFf9BX<[)g%:G5Fn6<`cb):4CD/6;:=j+Yqc]0WH2)5o_%$rTgC,Lm%2h-3;"+U%8%8(_gH/9bh11psl:d2--5U<XNBfM*"@5c`kQ)cNDk9D6gs%+(*M)B\d;.F?I+jpQu"Nr,V9H\^J^%P\$W0hrmH2`.q+F::Z]oJ"S;^]aC3kWQh'%o%i!9(6bATmc`(*+\,<3SK]Of8T4V(.h+!b%o.3HkNneA,=?dgaArl/\AE/3(XjEYoYG0k5><_;<NO(4*I51=gBpE)H;1@#@?"53AUU278GH.a18^<_?Y%7QgjFV'dSY3<1I1)4Z%R<H^!$b'pb3RdL9k'`/hBm^;0%G41^SWfnM]@<.m+6S/]Fr$l`0Kec<&5?dO9=M^c]0nL3P("7'd<%j$JF%to>;VmJ/=kbu0IoT@%)>OEuq.8)i3hofgV'@'&D.B'+ZsQ"c:5]n5ir62_U?RW*>'*,fo4Y^H=(GskF@Q-ab$)?YBKDnj3j$*1NbCHu5E#AE\Fi8=)>Vut%lZI'lF@OC^nart?Ra*=I:4%/+*RSsuZ#lkPbqC)3B,"!OTd_Q29kU8lP#Z=hd<%kLB65&,[:hUr=?=Wq_Fm>HRH^%'NM^cIYna"t%N+2&&L+sWE2X?=!>7b;PVJ&#c"or0!NM\LH^pWlL3htLDr>GC\UZm`UK@Y?S7l6c6pm<Dkj'&2AN+2$nlcU3@l&:^td`0lQ9t**F%CE:fE7^7'tq=p+')h>fsU_UiQTJ"!HPH11sZZlpA3kWf#k-,^o[t*/>a:FYQ(JEql1[(!GOWVSg^,cYh_Btk%NpriP8J`cRFgtPY%YXnng2Y+PMFNQXESS=GWA=$Mfl?-O%nECGHe=q26]6H)AAoe8gKr97VacXXiX-hH^g7.@Z+pb2PFNiI]1T.<`(5_H[:33>IkK9Yo%^-nDOMsPIBp4jFoNMa6BO6!S]88%NhE3&TPEh^1r#*f)68#%`rV6Z<IcA"h$+q.OHF2rA>b=$P)Vn&S-DiW*DRsB^Joj38^m^YZQ%l%2L6+(l23?`.`D^Y1ZAFKDFrbK'1HT`sf2VgN[;#g3V%*\O6a1uht+>C,5p"k)'8Z7[(.L3=bKXlBdD'_>gi:(ECPOJ.Ns:J8h'%12MN#oZb>g2.+Ub_=2=jZi(pN%lE6,8#OfTrO&2N6;=TN1fU5go/)\SJ4B.\gqE,(nhFMhhWq*\BI10%p2.7Em)G"\A/DTd?H];>%\]KdTKl*@HK#VUK2D`PXTaRq2bjU>B?*3Wt5h+Fi&fHlHh,cLgR<n6U7:g+9LtS45[397,L0Ad=1Q02p=e+f!EeaF&kX]hTc]k=L%[9ZMDTIG><)%7nMk!p3SoD[OYa%JodY-(OX<if&=3b`49[fkW4<mFa*>G4`(Gf-5]Z`7u5JhqNU/@!+Y1H8M<Oa*TX!pt<l=3PX(%]F&72mZr\WRa5r^FP^b&)=G_VEK]@"%?Z]2Z@3h]/;bg\Rji9`GTnG4hWeojT&EEdQXh=)A;L_=f(iXEk'-K8A@SskX#WR4?._[a%]eCReWB"SAX8Tif>8q=;bN@2BBPaZ`g:>;F2$DM$)\Jk/G),fsiHC`<Zf^_4_!S3JShm+2^p(2b(:I_XXe?&1E\5";!n-0jLi53Z%@a`7C5[`(])kpuGqR)R#Di^b3b@oB*)aR.X^YTT'Y@9E,QumtfCUPbb@VWEJ``>6]V/YP^fTr#\7M&MDT3@ReM.Z=u:',9E=.0Dt%43No?R:;!FYoB/=j(p0!6LjJ-U/MI4'`I!LARetL'2u`#2->VOko?OHUpFtS&b^'Y(>6Ej$=iGCE!'d1(t[d'e53na6AN*qPjXZ<%O=>)WkoLui*@uJZU7N1A\=tTYgb>RaHFAcP<>9U9?<a$=^n[nOKIM1ua#cBnd=\[;9:+6DIdLBcJldX?Hu%[(5#:8729Ei*^=.2_%fc,C@]>qQWg;k_XBfqp/439<gS/S0V7!HAIiCLZ/C%AM(>?_p$Ang[4)<ZfLeqW.sR)f2GQ"'%&"DDOkCCoBK2$3(66?(Y:7I4C3%P;EMJXcDj]T_]eDc(EMP8b$*M'AYfU`;Z;LW:L:06dn@`]kbM.4I6j/3-]B]*1;N>l!s`Mkl'F5JT@%=g4dZS4.#1!4*K(."5:+S%F3!C$JC;)Kj2o?hV?qiQS"?P&e?rF#_6DH\&%Aqo]?mV\CIW7Jn2D,93U>m@hmhIpVIWkjn3/G7EOP&8dGfEEqX%97P;),ZV3<Vd%WZ1ZtF$GL^Ic@[AK@S94fOSL(O*?4u=j480e"sC<NH?eM`?#Z`OJDuj8(pK:KR'I2SoV:VD5E,==tqg+A)$p+WQ#0Y,>]aiB]tMM%fpFgQbUa3qUEaGQJTCUV-^Tld$X%\1h:$.tSp%uON)/tI6\q5f,FaV&'OAX1p-Sj$SC3"o=EM^@:[F0MXNkON>oTDqeVU@(n3FI.%Xn+7d7WR/q=8-.p^hDIdf^d`KDgXkIfXdf>mNW[J6aOJL;dSQ4=sYLM4>QJD3=^3g[%!WBCL(8pZ`H5M$;l=(?UB[t@QRn4U"'4(%R@hp5iuc`=c-G2]=)jJn^e2I#2ss?mj`+fUA$>PdG.hV*S]R9[]UN:VI@V]Q;<R+Lkd&,%prpE$U%ncnSa+'r(Zt?%1J@X-1Kdp)%g#I0Oc4o#aA<p:M3/k+_Pj295P!8lA$B[>=ArGA0D-YgAh)V<3634Q3KQ:hr\MBen_+O<sg3KmU#h6+T%%=iK``Zmn1q"fjc<PIn%<FbcX)8)<SfV2Ih#D7CEY7Y9&o'&-NQo$[9CbAuF5W`Kn>:p90D@E3:HUpi!YS@72m7O]3(0Y;C@K6l8aUY$F[I\#P""9d<>q-3.%=Ih.hO1]9CTS?Ds@K>T:_4&c.@2,Bj(dO%bV5"#jpp?8)qA:_q;1Nh"!#6GuR4(>40n>_k9%'@-;6?@QcUgU7jcf7L,#\GE;Eb2d%_I#jV[kK&]>*AH-NB@[Geq#3,UjOeui?%rdPOctFiVl;E5)]?[CJ;l`1OnKn8bpkB"l(PdY=,EQ',3#(%5uJr[t_MgE*g::6uoEs%DQ$S,qIt[BQdsFXBj9W1ILa[Q/Xb3d99o@TIS8N,24)q@g+-]CM*'#KB,6Mp[(%'tH!W]sPe;<K5O4LVMDi1P?GFIA>\eBD>%I;I%H(?s;c1:^6%o)N)=>m@T[NkXMI`l7%1!8fp4WqWUW_;FG1R]ZV>KrMVlXtY*bkNf(/Tt1*3.%IO/Q^0^B>)YXQHXL4os;s/kNiC&%o=TP'VQTG<B]j[>$r0NrZML\lO)O]YG:.\7XBU6=^3/N0ZeeMUDJEH/YFfsqls)sDP'R"bUMs@:5E.8'6=)nT0fX#N5OG"IcD/<[%?GFI!YNs9qB:[Q`XJC""os6i$Xc>qX-*NrbnV13Fo_2TBS(Gt)JOG,r4g1ImYMGjOCd!(BXETF?jPsJ'((X,'^6R_",a5<Y:89fp%PIu@q>K!D:D&qd3Ze"2Wbki=LqH7J(>>%rL6?Sm<,d*`jc[*?/GD]em]RDnXl^2YUI!gqaBisKW>P0`l-*,oAo'tD;V&/"F0V?tC%=XlUpKNU19T641!)DSU>?9]`8b"*F'&XBf_q?nN*a,J$.k4Q(+lF6Vl9dHq"l>a"No(q$rHX/e<+)AjJ[!&%%Dj`"Y]sO<UlaK27%]U[MJSKD"BX5lD*aYKohq(67)o(lK2n'\CKbNAK(53Sg:.4q%@cY-XLXF:QFKsR?%D[!nPK=lYnm)l0rqPaYMHrdus:(M+1qH6aM%l4!S_H2XfZ6ai2gC0j-jJ67(c?88XUDNL0^3g\1YB;#IqX)D`Y/[(d@*G3:'I[Z[pbN`^T?#.<LL3`a!(C07S:A]>8X;;,9.J]3$%LfI9C-QhJJh1Te2:OMBoQ/_"0['&4T/(a3@KD4*(`JR]V&Y(8]2fIQEL@)f9-(c>-Jsk%h5_YU(A7MRrF7'/C`4jbW&^U0PHs=8V%TVn,$>3Js!a5]=V\:=I)n+V&3l%I*Dj!pYYnFG?Zj=X4p42"lR[(eO`#[JO%qRH+\.*bhujTDY`4>(^*nEbb-Vi-UL?L!R^D=/Z/%M/nqE^*IpuRP/^5?`af^iu<Ad2g,+T],;W+EOYaEM0hG`53AH7d6$dh0J_SCJeqb]D>,>1*hPoLj%82i24b5c&')$3oPq/s._\F5%ourB7^3P;P_o@/Jk;g(*HA/`@l'!$T2\0!e>D$psZ7R>.:OR/J\]i(D;*,E%W\f,#kIXVA,Y)&7C=6$@P-/_QTd^:J+RC]>)0_]_%hQuXl"fC@lO[)gbQNk%7X=)LjS82"f69`LZi'+N[)p&sA$R5`_(];Bn-iS29Z-nHJFop4Vo(u\RlF+Q02i!C_,]h_VOed#:kZ):L%(;[O02b6VO\bm0]:S*;&34E:=;l?o7/lC86IrD.2%Z*54rN5aoH;DN\&&IGO%&.N%^[=Voc1&jBS];gdDEs$F&U`q1;U'qD'&.j9%[-^5hbpQ&XR>&p8nsgu96,M_+KBK8]+4_fnj4i=T:ata":b)Iui?>KlqbNL/^uI0/l2)`>**XOoOMUn()'P<pIe%1S5@[Xu-YkpA%RiaE\otV@Hn7k6%oo%De0`6TN(!$J3)MJDn\RI*h^:C:1J"GZqRo*&L2IeicgJ@V+N]qM)^H]bFjFYM^^AO/KAM4N)']g'5i9L4+%<@+YknN;.Y?n^f8nj3f"RL?o%")>p-K+KYoTE+]8YcF%FJl\sMUM'6:=VkPt1Ce;T$cTT\r@.Sg/O8&V,ZgjGg-A"66'3kt8.X(n%_h\pU3[;I6k\32;$fNp#kiW*S&t;B5*VanMRZ6L6##R.*JZWSc)hhP`rXdC$Jg0bI'^5KuPX:3C1\&\LoFcBb5?!iR@P>'U;3<,q%=qIX.0tm8&,X6&6,%f>rbI`.[f::8ul?Y*2(9Y,jhSdb4nYgD,(u/S<&rMad(IZB4IKSuLm_MZS1IgGJ'pm&.9g-7nH<?cC-=Y55%+$I5l!fFi+`Y0KPRN"0tr!f@t15N]]$.XfU%@I)8Oj`Y@r^Nfooo[2jK%Ctpp3dqbcNfMC/`X`%:tl.<q:==6pLnKZRtBFb(2Eh0%n+*bc+,NTm3!%TY8BPFV`Uh[rY`7MdMpt+i'Pm,Sk<9*alcO**nYK?8F@W`bG><R.j?rXV1G,H;X/<o$@gr2>e5cj<Drmml&G`3g%p[f\jT*`L6:g)D>e3h"%/%p9Wa@\MGc/0fSa*/L9RE=V;Os]@@9VM"DY'7M5rr1#SpS<b6Dak>`T8]k%S1:*ZXM`u7_p`Hu@.uL/%,bsf4"D,]]<Qa[NE\e4ZN]c9md2BU<K,Etuq0H-6"Fi>Mo+r4]!+VLIfaF-/),S=:PCeJ8AEps`%CaDG=ETeE9uQY4jX)<K0WCdG%>!dluP*TOY[#><faC>LqP2$GOM6B@P/qfgQ;,E8?W&Uq$#H5J0XMg'']?*EXDYET.,[^(ElhdVU\Djb;g"(Ge?09&t&=cBVNo3+l%iK(ZSl"G:^l(ff!;X5'E)hSJ>ffK%Ar-''PQ3C.9WqD?"*[-iH0Y\u#HtbuT#=C%36)&?)T,0^[JgO^BTQ-M8<:[Fr?"oeP&Dqg(%7cs+\di*Da)SPQQ@]J%rOkZc&[[XB+J]%7c-nfBaj5,foN/ZGn3:ZTIdq8@B0Bkl<*K9lbGou7P+hl)@p^R1AWl72afb7[&K?)cP%3(_&t4V8:O-s#X=na4-FF%?eZ7tu,`UmID:1Nr?U9u?9WS>h9:F]A)%o^+.%q<fmY)E[Y>'1f89O5krMI#V<_HhRj1@fgHG>#toO%IVg2H>MS8!GoRpr&282&X)FUlN#-!mLO@%0C;@*e/Do<!*q6QcQWan`2:a:HZ5>':-ON/cEAkNOhlXl/aTKr<pl'r>GX>Cp1^#X>%'&IN\2cu*F1rr18`eN6:;Za/_D)@)r+n"/nadVU"W/7hqhqmIPn\Ve_K16d)n?%$..)&uiV&c6BC#cXXF!m$k<CEN#J(R,e4?c*-%H!%F81cTWQ)4Z>Q`<7G7^-j*g"]XJbP4/)V&+(Ak.S5m:PoNhY2rWlCM!O3_Oe)&K]+O@`'0G.A9+%kNO%=LdMb;tJ[mMO/W,0Je%ZUpRgrc!"5b(,!r;Vt!3mH$&PAP-9e#i"6!O7LAr02QmaU*2'.*4WWg6o@(8ATN&oXc,4Z?ON7.J-6_-n"UI%$(/n`Hoi1+Y?s[*%gB-N(8eFuHijO4Pa\[G)h',d?]&ST.hXOUUUXfge(+[R"Xi*CFrpc5DaH[c6GGf-q;RP\OFW=LY<RHEp;$*O?j+ZDl`HW"3,1Ya,%!f_.Z5^c>hL"FUf#!jlnn\PFPdY$@uO5(+UNrs<I2tFhCjQ;N,`4_cG:[-03eKbb<]_T]X\1VTA+0%lj\LW7cgHeF7=1+o$f.'D2%52]tD$FAQ9S[f=!b-Ab5j;@-m6J/.h4%$k9G7ZF?IdQ^bcX;Tg<$k>@-ei##XI-^$#f7n6*Ao=@Nn']aA,CTVR!@I/a+oe5Y)Nq=%N->ht,rsg/W>tG.nTkEa;X;R0AD$!eQXb2#pr)Jkrt-\3\#4%f=H1XDk[S%-n:*8\QrQIGo!o@!X7oq#VinOLBQW)-CRhOamYK2K%VU"\$P%O8S?[IaXQX5G`l=5Er(4sOl$+,p;^@h$%K@doRU6"tS\bGqnJT%H7,tC=,:*2h'T\L#]@Z..hcXEt#P]uukp$6,'d3l2:%j/'W%,C=.=mG08?`>0PA@8oQhWiU"A&Q3>&7L-^4H_:LROJ+cc?rMXE=fdb3@K)k.pQr&bpO3dW;]Q&[R_Igs,Jq=sQNNq'&33/,%'%oR=GbJ=o$ZDX'iEmH@SETYk4I5$:5Wc6XZM^h%s-'5+!^"$8)Ykdh)$s4G`48rU%k@62*ZUk&o9K*TfG"oIUNrQ_fd[SX`!WG"%ebWZ2fKLtK5pC+8XN4I-7`(;rlXHt,XTl9\@.>5eY)B/.DT^liY:UOI4Zrt</e;+mOt5SURLlub+5:',?q#7U!k![:$<jgC7rX0u%Se.i[%W!hLbDs__2K^ZD.mgnW4aoAEq:e:.G:2tKK7$EQJ$MbVcNhtWb5%eo7fHHAgR@[9:*6dGnUrGWpf$g<Kutin!05\OCg\98%e+LQk3oASE\!Q#ph,el."64CR'DB*7_#8SSo%T;?.j/I]%(s7p5k>%]^9XMW-_A)A*gE.4jmRi<:[IK,`clE0\D$cLQOY*97to-S%J)aoq?\r7!_,fY.DAM^!`]h)RY]`dNl#*m=X:\:6>M1&BG]u@W_qOn"nf"ZJ(=#*el\2B;@]T-M5.SJ`_%Y-NdR$"O6"rI<He?8#%A>.L:bNiZ=%0p\Lq7Q@64ke-!`DR'Q]_uS.>^B;%%<sQr/RBdr9M4-sJra0S9(+r,)1X(r6@-]V[PAg].1M/INJ$Cd.@GQ^+M58o%;2l_`AXA*%ZsSG<n%m;ukA)MmnMV0?pBE3>84QRn;mLuF[F3_,okUe5P>gCOpCXP:@Bi(9PHDKPPbS@ldq^a@^Gs<"V/GhXmlrJW%)I<@#V[tAC%f>'RV:=O`Cl>sUj^O().<)+:R]$ttGb4*Y`LPl@0",%l288[mF0]f"5MPlK%=Q?LUY3+@oVDj'n\13\)\,!FZbNX!%NbJD[9Wb*N6)k`r6/UfWlr_e(N7MDRlPR<kN'V\pHGY48,\_nMYU>TjkRI]6+HuQ7oAi#fqJa;dbc[^cEZW5NfiJbA2q#Oen_R^9%FaE-u^ST4>@>EG]Z`bM+>[A?O?<O][$+"llVS`R(CFCQ64Md)8+d_5Q_s<b%.a2e=8ig:rdW.4MDM-R19mWjsFW5,+!udA)ET`E,%.d\l;/[e]b<Kn7D6rWKi#-+4&=&3L#_B`kbhg-X&@ML][X;,GCYH8sBBmI5j44lJVb(4T(=b*Q0`@-MmQh#"`rj34XE<h3kq.Z[i%%jd8DiF1#5HDjN0$anL=l,!8IBW!tADOi)#Xd?0<XP#QpLlJ<:`OAe)ZBF$;mT6\u(EN&ABX>-'qq)DqUP\LMZ@%:)q6V_;m#nmN%ZTIVcE$D"g`J5E9hu6*%SIO8BPXF8^cbe5Wm<D.DNka!*4eLu2g-r^1D#0mfLX*me`k,si]YeB<J3Y$)+;F;?6d;Rs6JgE_R`*Mc%bQ1V-`Kqqs4\@n*U/E?cVt=Hu-%OhZV.auF(<Q/\ra=pQqnfKGK7Rd&#cHC?bIaM.BM4rGo.[3rAb4X)*4BQ^fd60*GK_S?@ZE8k%_e!pYn7n14hHu3??k"!uMdnib\U7\`-'#d=)_0>'B<,C[G[K<"E^K,;IF38sESWeY6VG)#T+`<-(o-J(k`H?].NGa'lqo";qafnA%)^edqFJKBXPZhh2L_blm;uC$I2_s2X.nI(.(7r_G6#;uS0%?'9;7,-6>b[iq-+?#gj[u#5'_b\[QR)gNjHQ1u?G!a_GC<U/njjIQ%hnHp*.@Ts)>[Bonli4H[Mo1g>XSWA0Ccu#K@7FJPc595bl^DA;T(bYXO\APRfbf^NYc."1Dj?nde`u!MOt6&EUOaZ3D`6&pW_dHm%!\^&Gp0*WteYgktU,GZcoW3XMp0*Wikaa3h-T"1N[K;HA(p9=ICp;NS@n':bYh,$?f0hkTAhUd?Kqe^6J@kW`UUXdCF<Q0-n'i"s%n/jpR;[)aU*PkMn7/oB%&+:5+9m4=_GNK4E]k;"Hctb#sM&^*q("])$X)n9BjSC[]lHm,WAoG;D63e)6lh+3/p5h8g>g^s5Oc]P=%2DSsnY-n-UN!<&=f\\GnW"%kZ0'S6ud0I:jgOEP%?G\q8%)k$DppBGGS9U%dC2HT@73AV1rMK1I+dV]NQLg.H7cVWk5&l?PP"Kn-%QF:S0(i_Q"Tk_O/5/5bC49k/X\.XQ8g?kbTEBF[cf*7_5Hf=<H)Xileib/*jZ74OW.#l(;rpAarp*IZEj<4%]BShF,Ih@&X>[;im%fX-h2\&t`VIG:HP2Xr%+1$aqT$C063?4bLdU"B4J_.36Z$#0,"4Y'rSJdj:MGlOsB4PNI*]+^7'h<"UY'9B%3B?:%@'9B'Ieh58u%'9B%3GlOsB]RrA]'datt4$INY2^]YB2YQeBc&&p+_-0Vs<UDL^/E0YERCr%+$!*2?Up9pE#3G_7E/\[4DaPqN#PEr*n1#7.].A/n%@bfg@K>K/'md[EbOp^2K/"q%u5D+pC-b'38b.Ta;^56!nnY=N![i^8JeHkY#cea(W[SO(aM6HH>hlE9`aF;f;%P.B&ieNRe':5L$%G*,+S`.4#Tq9#a6#kX$hLs5P`eX$dVkTE-_21L5Q).;fX,6X.+8jmf7c9MH<c/*Jg8A=!`10lgn=eHR.Ll-$XnV_o^s4Ge*omlWY%'@u"(?cZ;@4KE]FdV;->2t5W=g5Os=AR=de_cW>fBH@uY+(_UnM9V[^XW!$Gl44ueOA^2A0K/M&:_,j'@e.%RpaU5QDR#R)nr6Jm%&r$eu#BB#P+\;+jHJTJO&hsOr\jYlFXtbN[dc=;iEa;/Nm.!b=_&`5TW/qS!JV<g7\_g1[d*/+r:lq/#=[IXb.#lV'=cA"rIl*kc%;[aYh.&]:!2nlGsl$ur/+FH.@`9FUHM?IA-X-(am4#*K4+-E`0Mo*NFNfY*;=Z6B2B\J-!#)JNY=JZ=WXSneL5G58`E<NsAEeQ\b%Js<fd\L*2XpCS?\mIH])JaZ]ETarCh%$d.%&X=T@`;8,VHrAFi4mpl[TV>'.!+=#b'5FOP:;ZeVFK'/pmVM[K<66%$(je1,Kt[j^%:n#^"55.3J%0Xcq<$"KCRP'pM._dE414SlS-5=%u5c"d>'-5)rcm;aD?+*iKpB*"GJ3nWgjf0a'pAS3%c5qsJN%3ajo''j>?q+XL%krbWcQpMo\A+hoHTO*Qt&;Z4`!brWXC)@;;l0-n\N<RO>bYB5cN<O.>5*)o>FAA;:-84(:"K`uB]HUQf,,ilMP't][aNMds:ed3%%'EK_i`G>[:kgG4D;ArYd7E-[@oHf(b=UT#*;,9Aa;rduQ6QTVGUuhuU"i;OB'Aj,L+ns"gRneB'N-]!R/+GaWg_]X"LkQ;gSNq6^%0^<D+P1d6cM+\r)*D!pC.DRQ!CCKG26?h<1;P[Lo8YL;kcHt=p?tfSS)s5$['7l'A7C]k.+_($ZJ"nAk!'jY-YKb=Ql+K!4c%^(>%HGPVhQ.#Y[GQ:JA0(q;ak&F<P&p+<I5;Cq`^c*/tng^[5.`=4m]:nP]Z$cAsOOEU]H5ecHXuopboGAI]LJb;IVMZ-%@Wt0(K@mWq%F2G/n*`4$R`p1a?P#7i\4G+0;VnPl_RET[kTBnLEG5Sa1U"E4]Q9(A@p9=XSDu!9N)!TL]IZJf%FE.:uDaudi%*nKOk;#@a^0;0N%O\&8igE1S?C0TIB?JM&c_4P5@$1N+;qZ;_;=pT#j#iP(%#r,a7h/RDOD?9n07IKBB75D?6CIh7(r+S>GN_\:+<BFX'qW]NYlZem`%\*?\Km]6UeAXVR%1Vsb/9^97YVOCl!(&<d/XpNH#%l]U<,8p$oW?FWN(YnQg(J4.Y-$/VtB;nIp-3i'T-2:NS^;IWkNs+G/p)G]X%Gq;7"PM@nm<C#2c^*%E_Lf,>9I7g?W<uFNE`OA##)FOrCrL*GhE1Mh%b4.T_XiM(eJG6"]Ge=sP*l">j,,L>,#Z4VHTG^QCPf9+/%*D7One6Pbf+s4psCT]*d^G*:pOpRY?[D:2.MD?R<g'%uCY>gFM^ERWQhbkb@egtba=Q$-")!u0bCDAh/S+ICJh73m`dK7JHT>+*9%qlP8d09"6'&::hEI'm;,o@</(Gs)4a`$VENc<h/C&AbI\3IaKU\@akb!s47I'0,*$*J2n(5i?UuCTUt(X(%7tJHM6=Ue:j<[C#*n%G^\Y90U#;T>i<:s3ZE$P_EkhRRm2L\g^KqA_\/+dircgG%8!bS=.*B]S`Kb?%=`ph7/ME9"jq_MpDKXi^+D(7EZ5r;j4q7,'cn8N%?C6.t\WH+=@[nlc&LWb_NG=N3PeDEaQ_Sr9AWTKSb7V>d2&B*WqEo=hM;_J$!,d-I%C:t5@<2I!!tGG6A.P$SFO#E?"H=lXmhm;u%7s,Z.47ps^VY9$M//a#pB_sieI71EXi<rQ,:K!>BfE@3ikLiP:;E,I79?2gZ9-hROC?+j`?E9;$?!`ferltW$3IKSB?rs.U2PT9Y%a-P&,XttVb04/KY[EagROG%)mnk$POS,*'*%Kd"u06TsF!6B:(o(TF8f'q4`D[.nm$rXj:d=m-@f*.=#.<6H2NlBn1<<N&<_Y1sU%YHkS5)<ACX"Q0IcGkR`H='u(_((o^4H(q@GbJP#pi;oQZR8n.o`+*?9Z/B?/cf2q]0dM3%eRAl^2cu6D8SLUo/K$8F)@&UO6gRkY%-s6`NE^XhlDgY<B-qJm();rFHO,CSXf6[D^_*)Y0;"g,0+D[""#YPte5lMnN*ECQZ[adU"3&_D=[$T=4f30P_Y=V$&\n=PW\un@p%MHs!RcDC>?FA!mG+GRW)pA!4Z#D[5pjuWL"H[6.cjP._goCZD'G#/;2:^`$KrZU8n,iX3eh8aueMi/j>qM!U:$[PHlrbSSuEG%p[%=C0R?rCSVX34Mq;%q!/30,eC`WK1Q>U.p[5d8:Y3NOET91)LpdX@KMbh64tu*q&U2^N.+1mqgsbV[0j%2LiDk0,aK24,<:NU'B3g%%h<cmRk<DN7Ng,3HEGJ9l(N-I(!7jiA$3K-He*9Ge-&IG\m$4hikl/+?=Ps,Os;iXC]NuknaQW.k!>-Oo2?GGZ;W]$[tT]f)YY`:%kd67'O`&h>[(>-M#r`[_aeaqa7c&P`juN)]UQ[nR_$q$u:c&?:$ZO^8!;Ijq/:u=ai^VT#D@:-'pQ_,;L_HtO_%9?X\bF^X"K!oi%s7(6Q*IXPKaSfWC>+OqFj-.:1Y93H-dXpplLYLDKaEj__<\XabpQ51EG5:jlnWg,83*l]I*qAX"F94)Ng"#@F3`IGf4@noHJQZUr%$'uX;LUu;WN8o.+(b?etr3fg)WAGRMSZUH.M]CVLB<t,KDq0rrgWPdrW59pR&u\H'Wp@po2;>'K*HgG?,EPU#L`u4K-,)6gHn@mq%=dNHY^Ylb]e'bdImU?e.Wg"Um7F*-XCRtX<("j*rh$`f(;$Yd>Oft.7a$sCl"4#.=HEVpg`s/YnTO;YK^D!ZH1uM0\-oG,'&RL4L%gT.>2W\M,u3i0j)8qW>#fMlQe<#S\M_E*qdkSJ,m].;@r$gX@3^?tS63AR4_*4+V/;,KP[4G#osC.m]0RQuccGJ[ChA.WG^Vao[#%Z/MrR]j8X*@R0H4kf[Xeqt.75,[lAXG(l`\M/VdGO6.!%540V?G^"tg-e*=NKRR5qiU5f+1jU3W9'>1IT)I7igfsE$1n_MaFoe:;%1c5befpu\R1s(>`:5@4&n0%-[giE+uIN<%`iV7#@KaSYJEe`Aa-![BEabasC0'SkA-WL,CE5A9fjja_TnZ(\V<O`0Sp6*Vb>e%je%VJUYdbmP1;OZ@dQ[X3Stbt8/AY?Q99I,c_-f2"H5QX!k9@PY?X<4WCEQXno?CUto\-k?"\b!P:m;mK/hdb.9$4>11t.6s"*K6h]b%J2EF0>3R:$oGu/$'oh=H[o?^t_X$130bQWp0U6s.Z0qUbLod(BJe,VBMQ"3`S_g,t:jmXP2\G]p^:<kN46]U^1!@$i4f?XbFQij8%2AVEA3'2b_Op2D<qD:0,#@1XnQM2&A_M7b@(UL14aPPI&-d_gXYR?hCY3bL9Xl9E%B+u(.E%f(`Y<)o'[u@s:gNLc]B6otU7d$('%9)`rSVC<gh*)^ecq2';0)9"].l<6kV)d?55q4[IM1X"R%DrNqM8J;0#Y0]]9!BYl&TgVnYChB89aVsQ6M-ZNK";bm,L+1(A>;4G=%f2!DI0o@W:Jf>G)]\hAO=)ar+>mOm*F9\XC=H.(oebnMiip!XF\Ba`gY,N\en,HBd$#XLSbl/DQ-*Sp3=@BobH[P^"[q9;'+c.R3%<ZfUbet`micerik;f(f"A)3r:PF'5(()ou0iNmlXY1[sGbsq4/0#g<MY125m.a:7;??eOq`.eu9HqL?mq3gcE'2lug%mtHTIFtK:%7'J:W[-P*ASeFL"NdiAsJ*gmK8[i<P_28CpS1uI]2'Q:eDFT:PF5mOudg=.*RO:l5\/eQr(pkP&5`lHDeX'r;<a!>/opR/2[$1H$%?7:tb($<X^B-,tl:IGug;s/L&0(5N?Vi\t;D0%emF2If`g/6VZk13:5`-Tad`f-;O3l0KPX#)3o_Cf(j$b::0AIZkAJYKJ_=[VY0%eg_GNQSnR;0f<'Dpm`AoiS8S4ctEcVf2IT=9a7"F5*<$t,Z<Dp<<Tq>:d2UD)kp90cuCXDkap?VoU=*N'm8R@qg:D78;XrF.Gp1P%[[%+1>SgDuYZmZ)KD5-'1n/XR2+gUrZ7K)8^;;8-p@ZQA3qr!D8*[Smjj&`]kK'E^3i^sTMc?qrU^j_<SF(HS`0_dKUV5.5FO\K)%SZ!`TaDSDL^$`S5V:<V,a*tsG[=cPoii6E!G3_+mA+$>tRCpmLA&hT5cS_SsXr?]oRlG0pd$#^f!21FccqZ'V*8>mf5r)U4c\/Un%Z&=R3]cH`dB3TW8l0MfCRs;%WNQ$4Q>iOLn.<8o\Jt,(s0*O.&AnB.VRXhcTc93sRNaA+7&9D,%m3l)^5h6?>"K>.ud2@-b6(P41%mrnKWbG\)j4BqW<m<XTq,qlP'c#6C*SDql"p?!d4S$(o"U#)<#Q[Ri#=-)V,O6Qp!gNnn_q=>ZdhYf)i=cle>Nge^]gASV5D+9X,%gK*$gZEY9Y[$,_gF0lsag5H*aj:'IM6#I1tW/Mt;SO6TZg[bpH3>m^=F(;i*:e<,CL_Xr$:Su08lAp3QA[&#SbK%j/!2,/:V-!-@%!^:&UQL*@h/%i6@n@ARFUl[Qr(TW8sM9$QTl'A5J-@bi+qo1l?cN-S`EJTFJ'JVZ(#?DHr#c%.YOa??*HW:7\:]h3M_"#*R89,BC%Jb]Eqf0pSJYf5S])"ITn#TN+`ZE2G#2%.=d_:RBWRZ5c7m"A`r^a2tAX4MfrRH6U>8H,EFna<sZZSn78McJ*W+Bc#cZ^*I$Ppc4m%aVoHFC+1+FY,oIKRT!ql(M(e2%Ai,CDLJ"s)OK&jlT=$3r`igGYFYV\8HSp1T'O;8>jYd'(l<i7m-0K[-Z/(X$[1+`IL'0t<jnt!%W!r=Yi,^?uZ)dsXjT)8?jdl0i0])j1'lk^`*O=?gL=?7La`Yk+d""S0++?X:h=K..O&N%LiL;Fg*=($6I`icudci\8hm)<+'=+iA%kF%]kAR!#Rqi4H7gO!SqnI!8p:p'Wi0]'&ihkCI[kP-aTrd;Z$>)s2Li"Yh+XrJC@*1(lS;$A08^>rsc9&?5X;/kfKZ2*1Q5n6lk%]b3oTj5cSecC:T6?PJ!Mk+l-^V6=S23@\(GhAhq`FP[u]a4B<5<e)BbiNRj6NIF`G(/FSd5jT$e,U_f9%r66gEf`tu$Ki]/=M2N,%&Kf:BUqZ`l=lF5lW^.%9O>VPCrG2TI+h:R;AhCmi$AZ69`0Cd_YDSUX:_"O.McV%k@dEY,Hi3\gOPW\jbM>K/FbDKd5WB'=B`G^(%M%kW,FaKFZ#.qss6h4>23:M\;<E$#TH$bj`Z0Z3g0!@FOVrV.FE3Um!bYRY&OY>$_Af%Lo@sHoBAFa1K$YjI*4F*ajB92+iU-%:)%.E)[m=6E%7k#r($FiJZk'?2ZZB8fQ.bQC]]ieYZ1F+M8$ht8"`]_gJ\7ij+6<i\*0`+s(K$n3Gk_Ai$^aU9<Zqq2/V4(T"h<)Yb@%o$0.<KD+4h=sL`G[n'hQ*$FR?Igi"a3?dnUX2MKfZYRYJ*.\N3qiHm,(`to$HeXain.n7GOj=>sq'2f1faOHYeK?L1(@]S2@1]]1%Ms_h7m/LYch:JFCIJi%Sa?:e)*-1D1m5dRa"Hl"m*!V/V1rCK]@2M&@5^<"7s89%uQ"4*><P(VB=*<sqRs4V[=^&(A=_5d^/:Y=A%5Ih(F"6OP:4#17&0'Sb8o[CA.M7\GTjbO;9XYY:A?"+5:;=;lpa`9`<\i,S4\,<H;S6rksA+sm<oCfj^5OCDrPfpV+^f!>m3dE9t%k9sg,Ai+hshU[_!r,Car=b!8lZMg3G^RTc''C8M7)(*8s[41i_Ojgd/iZJYfQMWJO8iMIQ/[/2uMRq8+\NRR7M;.N#B4qk2E;&2X%He26sg;,Y5+@2;1CKP:GQCj;;F;^^c4h.A5+)[n:_U`Z#JE5_m0NY=MXt!`k^%;N$>'uDXmiT:J:MD98Wu[`o_&HL;l/XT)Qh9!+%fGWOm6n(FspA#c$^>6EmJ=`M>A+t,4cI0_G5;DTnM1t_s7cb]VCT/f8lIWD_\2`Ge7pB6I)WQtrq3FN+"fAf,29$pos4VCLCKb=C%rHQp";`=bJ$fcr$*aH?;;4+rbea/3dlRbFnOc8E3fY[T5itbtLb338IBZ31Fh>&(50haLZ1P7dQ[>\]cS"IPSh<]\OF8[9+mNNV@%SfYQAY4hkkIZo_KHQO,(GcnX`W6)P3Hb=udCmZi"GR=>;7sJl58)nV102^L9j3mi0BO!6S]r1lk=jC%IiT`!g*SMfh%#rHbF$"UW%b]I],7\#Br1bOnPT]=nOi`S8lj$KVsj(#DN/t>AWb.)hGHb+3r=dYTp(GlXdc9Ik>BkB3>^tsCQ2aGd#]RZthDW0CSS3U$0!BkRT%FtL9'Ck&"a<"%mDg]8G#5?n$?aCnm>5Ofc@$@Ip3)!E^/_`'hf]Vo\RNh:rbo(tW4okiVEM9X3L;K3(&6gq3e:,Cbd]Wm)Zhj6XF%h[ugLl`N*H2C,CX@%_dZ-aZY8qReoD^SL]2f*TqN8"3b)IbMS@N8.jlnLd;uYr4Kngh@E&>51[4@Clf,T5+oWB\Z7QCVs4;/RTs_%rP,@MS_N"[jY?Xk]:W^k2tNCi0#Pt[bZOMSWR9r%9A9TAM\JKuRJ)h7USE+Y7u+<rhcYDri3Di9fV2^+VcYcGY,7(GO,QMsld^\0%+8krt-<QYk"&fWSoDJdD0e='b\GWqQT=fZarGlr=6Dc&PcQZt+Cnk)$<qcW#0X%lX`o[!G:e'DMIT%9#r8>6rd--s'k5+5$D7hAb%Nm'B'?WR-skH9H:W"(8f(1](Rhr*3?9YIup$&2MY=nfb*r3M"n6C2,&s)T4LMOIbI"E69E?[G=7CY$"3SBh`8Vj]#]ZZ,mk`hek5%6M=h70ePE8rTee(X\$RHmHM@ae8RFP@,bL>%?ZUPNWcSjmoW<I^'p%AE*p7PSuMUmam7,,m`T4[I;op.rPfo(To(1I_d@YKEQbN@%(\eoU]%Wg:L(BTeXAo/r`b$flmpD9kqfLkQ59PK1p\grW\*]`<l#(hX7sftg#c1C0e?*&"#XdiT'"3aGUMJ%#[Csu1j_[[*^8>8N%h4hQr4hTWjoO=G5$DIJamcrE)fC.^b$V\m%a$ADGhl?oeC>[t5ldp!4ZeU>u:U9'T",6J>+5]E><BsJt)d>%$=o?_2;$r"@]stE2%07C"^dFl3QpI<%abc&5&>*Y]Z\lNAamZ*bc(sCa?Za.bJ_&,@9OP;R6p($2PSU-/^G8$jthUt&qp7L4>AW0QhKkWhnf#GAnM+OdM%>nh18gK87a]3&0^1MOX*m!QEdgOaC\+NAcOkOsHb\E:h6GF=&q`'32PoH#/PrVdp[QF(G1?hh(s:XoET8\WKrmmjIu%^>jM&3i<T%[uKD+d5EK5!Qf"$Pe1%EJ*nNQhtdk&/:RC`ncYX>A5[SXXPP:fJkd7jXF3EZ*6e5f(Ms7^M=B5'G.<<Oa,eds/%P@2!d=pZOo(Nd%HjTOV)uEXa+c9n>>,NoqR=`^+9?+cMLnXsBK$*cHe+7Br>N9e`As&@+lFj"=ZBE2X&;k)c9L5m?CKIYkNO1PNj'FEHCL_/XRu]7*%Y"`bK@%]B`OtW2&n?#G,DdjjI&Y?["H[HJ3kL5jcQXFIr@b[K4[Em\i4a.-7kp1U'QFeBgJ(,:,]b;mehE?n!+Mu^\%<.<`hSS<H%/\HG920>K*Af2Ao%GNfX?GCtVd!oG3eijh6?9/"%$i[MeBg'FX+"!F';fHO\o@$CLIu_#;G9\&NPUSS%AE2*%=;*dap8q#9_0huq%SD]DBD@HO>4RM58X?2)Or:.mXEp(m&]9IAZPf&+KFbU,nQk;(O=ng6#9g06Di[T&<MnBg;,6*(cf"^'44VEIp7D=g2U=Uu%cHXCJ%Xro@<4e#/nqrl1_>6"=:\gj10\gk<+((N&grJ.VL@JpC4U=H*t+5&I?&d5nTB6Km5ARNAoC\I*DJf:g^_(6ol1I&bt4k7b])V<1m%*;CD@)38Sr>;P<64e8%0ooFG/1ZRpLcIU2Jhg<=aqruALZS+$hK4hAG"mm^*r9ldPOoPGC<i=i[H<DYErTW&Y[6%Dbp&e=_rcWZX%^H0@j-bNr3FEk=Umo\CtS^Yi=gZm@tLTf=jNn&j6F$"ciWj"\2<Ud0J,5h<+i5<37]C,)hrHn(GhE=X-:>7eRkDn*)8*[:5-i)Jq%a4PcLW*:\1`\I0Rr#iV;cdr(4RncBk#MFTU=6k@.]=lc%W%mX,^V-hG!De!glIj2Jkn.?OMt8;NiH9(:VhbV^YLUBO*GM\qoZ#2n%HKFt?96-iaqER,i9n)/cG3]6Ib-gXCUe;WV#eX$n]*W]@2^%<^-Oci(Dg"q.*5q`X2@u@&#N'F?r<bjF[?l6sPhY6f(O1lA)L8P_%5(DTPgh[uT]]cNTI=>"Q3"B:M:ugXQG^07U`c8NB35:1Ca%q/J1d4%^RmA7UK^n+P'DWOnb/Q&GPA;BiWd\HVgKY[P9S>Mg\S:p2%P=3->@Igle]0EB#&(:5"a1GFq:?81TT0:tP#:1Hu?>cS/Fbt;s3lAIfGL9P;h^!F_djFW/;W+[\#ARPX[?eYKa(url>(6t3jNd>V%lSaGYR`JS1#.6k5&j7^`YR]RY2:D9dH0#HoMt`HJOiZ/DIqVm.d^TFI>r+;iA6K+-Dd;<X(akHLiUm?+*??&b-A7`AMiDLWL(jBk%Em.?3Y'At>pNf;:G-t'*CNr"4CY`hO?c22lYMW2$hd75(!KZd:gRI33?p5!E/mHjYfU@Rs&c8UIiONc>9JaC4p*oK9DB@5a<dTV3%HRg"KHl,_N5pBY\NA#`V]QGFU>!7kkq_0$<nhnkjn9)8Z,k<h@q!:/XYnHjbI/cBR,$uRSYCR255*9bDL3lU,Y@G6[K9%soKl$ES%"fl'Pb?\V\-1WpRV<#71R`O)Oj-*];SL3pHp0ui'nf>J!f/K>Wo?ioogm[eBP+.qj^]3E$h%iEmq3p1`8E@Ae#3Yt3FfUki_oLml%8rQp"@@Z!3%_+JQ/%?l^TNE%g';%tl`oac3@a=9Y*?osIVH4g>G;'Z>5.PY>:O"6C0(2QDX5s68V6'!0i]H>qEqSd(qg7>qG:KJ9%Z!mTBE@#ejNA%X9o[FgqpM-V_a+#GF:CaPl="hj)a17>M_Y`=BA])Q_`.=gC<JHLXPhWsajq1-E`@O-#VD5Lflh%7UP"-XC]PVgu%s'G[%e9cIX9Z.9^O"UJsj[PrW(VATnga_VAe&BK4EgA^DHs<^+5MX[;Dp?!je6@G#@Sa,@\k%ri9mt]l*G>W]imo]chV1!>qVg.L%+!#6JK+&Y]hU?hPpX"sX2]8s&;Z2TY=$]1%`8@k'";Dl"YB&Xt[V1/X.7nfJXl"d<,JE!K?.n")<gQk%DJsuPh="s.7,&rUf@SCS%C#iKB_uA<72Ft>o:&<E]X^^=.OSWmm$k(Znah7JL>&Cl;8n)4;l]7%15tZm,0BP=YdMR-!n&=+FD`;ck7'VZR%MUPliY0K\%,t'a%CdPg@,;-13KR,\%q<:hlA)-OmpFIN9(Y@lV6"KdYgaYa?R$W/e%LGo0%t2/5LI(^^/(ZK+DTEQd3".kn2dU=b=3&<mpsH2F\PqGH%0_MX>iPSZ:iUt5=p,T-WgDBV/cH"O@%<#k;r7Zs*mk29k4-F*Oh@Gr*gjaeF5D!]6elJbn*(/T,pi"j8]c$joh9]3%#K)"PU?Te2%\GZQ"VP9R7:W:r:RjJu"2ss@dqe6e;dco:?9q)<6l!@p%$0i+jmdDL@+u4i#gYp]*pc6j6\"DY-;<+68nQIsP8^q*njkS<8S4je)%A,=pr[pao.rB:F701diEHt<N@9Q(+QJ32ZV*4QDBSRlR'e,<M79OV\o[DRjls6B>b4+1]&&(tnrJ83pb-\oG8c]\;tCd,FTa/Vdo%^]<]_gsUnW5AmpM\uEZgVo6/lnElPX=>s'gSs=BONda/[`=?aEn_QXW:=48'/&un:7>>gRoPN=<f#U>Ng&XWgT+&/<0K7A#(FR%:%.o[Y1M8/LV)@`&86j<M]dZ1m-a70n%&ju+0?^3m:]u>h12qtt<NQp0#e0TLHHl'5/)gC%E8^Q)XoT?fdjmS&8#-+*CHfB8ZjQ2VQ%XDs;o&@Z;B4kAb1Cl^I1%Vp.\4`PQ%*dR)>4f*$oDgq8KGXn_l,Ms.V.o&4p&QJ*[n`D"E.s/@H<$,sf1O8->X[A$[=*efHc.7[q%W%91^ip/4Aj56&ThkO8]Qgc`<f+/gLci5h.hl%cug=oDe*(!B,YHf"F;]J+u['-c`RGncmP20*k%C5NMNhFBX2I:*KCqLNL2TA+J%Rqhi+K1S)j&?76kj3nO4-9?a9jn6#90(C/7`.pA7&F(Q*>[McLRel-f^$D%Nd+c!(8c/k:I0%!CC;3(%&F/KFGM&1o]lQ_@23#,l%jB*$ZH2hH'j)QW86j"%.>N<S&&jO3-T6=EQ_+l'_9k)i#iTC_8^?[%cpnnud@q6'f[_USN>d'bHOSc>-mI',W#;>iAU!9<_-II8(%E"#I8%@.-g^30'kpaK;X\DnNb-@m,%S^mX7h>HbBf<HU0#T3\G]\"Cb,DIKf?N<q\n/Km(,V"I<09\K0([h[!6lR\6&QkS;mu:)_%P5*]jE]<a)dH__^9qoo2DBHLc3L[nYpUdX.$L>n2m,[/jBAMTW8UuL4j/a3lH$RR0h,nkaI/Shd?p'q7_?\Pm2p`i(gk]]Uh40'D%d0<5fqDptX9qi)_KZC_".@S1lCJo$lm9aiN^B'XR0(a%"#u&\%]eY<gJJoL()Kgi!c5j,XkhKElEG8#r$1!Y3K-i>PNMu6pCYS;"%rc(/JrT%`)rj297iV\\M%L0QBe[ZX&Y.q^JjMoIsZh\%3]Ami;e];O@m>f)(J\'W6f$2/_G>mF(NjGASkBP^F^>L7Km>C>&DMuN?%6m'jZl*G9#p-pk(k5EJQ@'fIFWdPIW^H/lLLDKWOY>]dDI%&N`6^[%dD\RXZp%ASbgpP/A#'3;L'Natnh1%2lTDJG5\qTDIIgpV(%q(T_+\<^eVlUJfK4*qpup"n9kqe1mQckf>6`=cTYGDee@32>(Zd9m-%=A,mdV,un9#'8bRpF@p+s%V_^p\>njK6)DQG_]TC`)+u:%=I@!AFS-UOQ-9/Sl%/quhX4;NLG+SC`k::Ops5E3[!2.3nIB.@T02IKIPNleg&=/^*Gct]eeLjr3X!4cc!Jn)Gt"X^>^8b.;fp%L%PX_%@CPTUjpQ(ZD^rjCh0A3G7.Q:/42c$RuK#RTJGPLLCCZIIKD`JO@f0kW4kJE2f_kf:>hk)KjO'a63A#.D1XVT4609cFIFJ3'u%BmjfOQmu<LU2c,dOi"H83RRiMjX9X0Xblb,=gIh`dZ%OT.mL\2]RR?#$ZgLU-KUq\]0CA=FD/!i(5lK!)96?Ko9d`-n*+d1>=%f9%*F6h(E]j@2m>as0W#+4^aZFj-l:6"`^O!Vbfs;.W8'L4PX'rI#`+iS/iA/#WkK+Bb=RS:WZ!B!+L#"\S_0^K1WW'f;gQ]C8gjW:s%]6*Rd/`3K*koLpRK<<i#NjX8=Hp_95b!TZGs250=Y#7=PW'dc3HM=+q6SE)M4+Ef0VuPN&G/MuO_q"TjF=u.3achL_K,Es^cINi8%(>(?\[`U3hf*u41\loS`H5pQ*qKI))D'.W:#42gZ>Ka6FnRoiY]BEOs<;n>UIBflCE8(U>rkf5b<XB$6NPZ0DUBQju:F$0u&NW&!%aAi<L"%Uq^PRku'h7*1;k1Wh>Q3o@%pF[OpWVLiS^]*Cl$8J7I;?ULjh6,TNMLM>:\QX=]rGkesGlNV<eMV"N/IZAXUMV0g9oMp7%eW%h7=8-Xc/B"%XDX?>Yo0"&OE\VLTFkj]#GKcc#[6#5RK#QsA#M_7efLB]>)jDM!09P*V48-N2N/W%oY(&\$;9[c4lgI?5'-4"L%'L-m'G4g5smJ6>(deY%=J&g1=[O8hI_/k*,TO<^qRm'FkGHjns;f4Wu\:<`CXToiIhpr<-3`ldQa*"XpiB9;no!LZ,q<Qe`e7_!A%GN]L;O+/0XB(R8'`l8a=pXY*M1O0R<,#\O9+NC:M5FaJe'o>V$Y-l(e[#OA&X106V]ll2dF%YV%#ih+FN\na-IiK.^YmiZi^RWf9%QFHMS#2!IFomuf4$_c<>*82cNDB9jNU-F*SN9.3Mda*KU<F!9Y!/9s`+V`11>P51J#6A0*YMf"/#<'a*I5kouj!"2-e\*lFVl*o5%Nkb>clgEL,lF51,a5#,gSgG4;H$0d>6!*ciUJjV"a1hEsOfO:RPTOd=)\Ik:9"qfp_7hT>Sm:0*:NfE&<``]"4hZCQ_O%j=3cspF%G%[pNmc^KoZin8H!o`%-m-b?kKO&nK)(*H%a):BplE@2[jep^#@YBH?$VHMK"sZe[^%pCdHnO%m_)VhXX+,6\G561W7`J%,`oRXH%L%D?*)OK>1gl3+('\K\Jp/Je>DHl-&qm\_6V+:q"/E&+PYa<)ojp&Q[Gn!R,?6oFE[Fn/lla@0RcdP$N>>!7gh8La*mu0"SX6@Rj%EF9+)iO.+Z`D2Q3IXK>2Nrc0Fk"DVljlOs.E:U#][@\UpFnL(;q11m;K:VP/$@Q4/C#73$a-gbWCnB'knqJE*aD*8p2oMlH'R<'u%kKWk*!PMB>lt.98`Tmc=A_t80jZbh[;oV`W9GrGa#-@>Jbb=\sY!.3\;sW`,7`2igJQ<m'hmnu+S@Y[@i]BpHPLEeUaWI!!?mL`k%mFlEiD0;u;18R%\roLW,<$4rP%.-3NaHkM)I;_pMDK"=Je+a!l1.p3jgj3Y)Ro]h2mpb.J$15m9A06#,L$G:WF$7(?]6]M^4Et%X%Ye#n8mOE[P7sGL12@eP-f-9r:!fc1;$'Di@r8d7AMhbLe9,H/sX=degEprZ<QbDUpFJ"fM84g`^fQpHT[H5*pek(^XPXH>"kh*D@%NOY"=^J&0CDOaCB`@Hgd[`X56EoTJ)\PPpj`0$!-EQ^%lqj;&DGb]CF@OrI\/5.<2n\qo9Za[%h&NWb#I)J[Frc;;G++?rM4#JcG%0Ku*LrC[Dq].*M7mnWA`f1'Fhd+PY3k2W!OCAm\-%4\ERY:m&Rdm?7B<S2*U_hS'PrapC7[X<=VC^j_Jg-RlE:d#rJ0Q_U6nJ97O%)P$\4CL5jgm\mN00j?H]FjdO8']ZXAXK;Ei`_Z"N.?Wu:%.TO2m0l3>E`_T!LeIq9q<6YL;b(AkDY'aVXhrEm;qpJQK+tLAleT&5%G4F_TrN<EZ/YZ"bH+-A%c?ZT^E+KRQDVZWcndadR>O*n/FfM[N2#?qn+`S[<EQJi6d.lpBCo%@&7IP`$k<e=k1>%5="22"&i`!Qq%q_/o%ma9$Emql@F%GRIi[A63:3[-YqL(NfMp\!i6Qj@fWhW-HUP&I>m5L/6%X8g6&a.#kCWf;')Y@>L?07S5V"3+nkeJae9&!*oE%-$hB$OdQ]Q4l(MZ5P56!.EFSnN/0+S<+%X;XOWGW/B1t>d?i%kR-idsQQ+V6p.jU`U+[.+)7mQn$_a"M*tde@f8ld-Jou6T&+>@)%H[_%2GjB]crpD<Kg)p9/o\S$(4$NN3kD%iA\?nun<'_YFDkq9_ET]5XUSBJ"K_?ji00u?\+(5^&htt+?Z@-ZRdKdH^O1oF:L7.s]%QYo6"o]7-bFh9`.0:uQK2uc'c#LCu)k`rUr#F(TSZS9-Wi9/'Xfk-AmIo>7s1frl@0=&u_V*4]n:td`"@+=H9:F!QNUcgqETsUE9%rem,Vs4*7gqVIq-4*i]>oKHWb)85-AHS.58`JXMhE/_/pn-4PaS$Nj-\6,GO@5mP\MQL1,<T*EGmB9`]lu=D-^!d/kK3i2HA+-(o%TLXOj9Sg?6@r-GbgQY4c^<s?jc&WAhc@,#-'gpioIHBL#fRMcu/A]n"<=FcDF.^j_XT)M\G'4&_4FY=<=!PMMH&^enm<C2=f1UL[%ZOAEMaLJ[Tq@@LM7TbRq)"YG4gpp8ri3,9#a32/C/ur[6"/VXc0_(O6>N:>*lRk)XB6$@F-HhF#PumS](9E/J-%fcErPODk_/<cS%dk<jG;pSIa-fO4Jc)YF4L9.smiN<@\ZF4?W[HZkNAXdm`CVp_o;odnrj%Cd!V#MQWS*).prdlS<;E7%H(+\s2YQn75X9F)uF7.&5%L%G:>2`B_m0]jHao7&aPPWutGq886m_gTLRGj/\X?mp^U/\>5$_4RrKa62SN%iq3@(g_]pOm.Qgqk"u"LPLb9_B<0:T+AAapF?RO%")XZ>-*)XG]_cF7j-?APNDp4Jo_pctFFOt+krOj^F7AcUZ!FaZBCiqI"7F#RK:>1/2#ihMB&9m9MHX=FYb7V,lu'Pj]"jfTIi=oQ%%m-mu#_PjUOTN'Wh`.0bNPYUIO'`!)pZf1?^AE?Qi9cdUB.0?7<IUbCXuVXQ]9:"2?et*Q..ekJDS?F4daA"&Ee9ho3dSI'LA90F%"O,c>$N04DEf9//97=3/JEaCcoZ$ZU]hL)uh7EKBT,nWc%=/6lIQlS0[6M>qr4cR\a>ssk$NBPG"Fk[,A6tB_U0lgVpH833dr?G]%nTQWfhV\)ihnSU]LSGJ_jZiFO4*Y(-He`;,hl]+fR8?!Urq/bVJ%aB1dR>NYr^hm@a\Mif?X:3g\bK[pQb3-un"-FbicR@_09Y'K%f.n7SJ)rsE!*tld+jJY$-Q)P1^K[3"nWsIsfHu#ZNIf95(H=A/Urq+#nig_c734<mZ#qad]Zl*JIj"OB/TTLQJaL38)PlR=+l)+[%:%ERb?cdsc-+p.d_#J]D*648Ds'iA'[9`0MApnL._"cFdI!(pUrNam,Qmh_^g!Li4qX3udOQ/-3amSPu0?LH/W]>:+J+qO2!'01U%")YrY_Df59g9_\bYZ;Nhgq*%Pe':%Z<,]O8V%VWoY&'cog>CffhpmFTW:In_XieW-LHc"3^>8h_n\`DnMsCb;(H-IIP^<9'm?dci%n)"$BmQW)2?i!!IhgI[k]X52ZoB=316(.,Sl[O3WDK4K9T7SYScQm_Pg5J'YY[R1[pXRMa[siaMjj!5jjOr'q0%YukF_,8soA[ZA%o1Nk#5A`!Sgj<?ZXoJ>3rq-&8De\UZV+42EGG":UD'X>5%H3%Z@<cs1IF76RnailBfDAp4-RPfYi`"u#h>5r1s*F/-p7:LGeah;B%PMZ;*kNO(8hu8"pd(Xc)b0H89=eB)s.j:mS#:@roe\Cg-=KJ?sR%C_k_EW=W[(Pqk([U$rr6OK$N?.TjE?SX@XaD*n?/#)OgRjkQ%<hWTD5-ju;BbN)URtf\7Grss@S3-`!g8'X.Sn3BMfnfW^4L.pNo!fMXI\9hqrRIq&<RL*8IT`T%kO@po,I1s[T!,XQ',*LOYLi^k%SLt."_V=269E#Hg<Wc-*n)^Ats+bH)-1D$=l[*ch(]<6q+"t,%*tABC,]*JBV%pV/$<k0SD1)tR'E'\&qrYUD[P'ptO(%RmH0Ek8%S+dRWWcIG!c,Z9=nSkm^E+=l.HFI'@37ncVf,q&2W]W9-=a.Z!"WfeE7pV1?S&u85>.-+l5$KBE4PnqP>P4R.d$IuFSLW9?eZr8s%?#`>&Mh0p+bo"3Lo@%c.S4%OVYAa>Eh"ePQqp+@Pet9JO@eHS2%t@*QoUgU)-MVf&_s;I?I?+li"1Q*!N(4D*emmA0F*GV&lch)4%=>,8MfBWo`LCU%e-uC!O^YG_MqN+hr_6.pQ*qq?DY'@)'i:Q]%d#n7u7L.cN]!1PWIeo.P-g5iqI5q@-]moA2mbGc)2pD9ASK\9c%`iX2:T"MjDgL"s-mB##kmJV<Wc2K5TqrEAQRc"$udcA`8D[gmITE"of_YNT$CJRmt%fDT#mZ-*tQjY"^?O./gSW19J@mf%+0d79Y%`iMrg/?NaE96!,i!tF?ESq1^_h7SJl\@o9Kn(7I3LMLQmhr<X7CMEJ!?bZd7@!=.87U?j*O1hXD^rH.2k'^kKYqXe$m(IDtV`1f*%c<=Zi/m-<i]!^>3e:TXF96Om;GE?3^fC,G$F/&uto);R#Nc3cWEA=n<J(*L6e4tj7V`",>kmq0/.<bEdf.aAW=0QO[?]`>7JW7sn%SIOc*I(6KHrK>O-,.?[mqV[^dq\\#dgX!W]/+/@!Np`m%A520oL3)"_N1ra6S9KW%eG2T.X=>qd:3bMH"P`kG5,o@cM_Qn2CLB;+%(M!n4<aRaY@?Tc<c$rtDLuM:R]3hj<nJ[3QTtTOSq9QZLr7bBl&L8,rFMn%=^bRnEF1kXfnFtJRY?(B_Y(nCg?0La<@24:,<DU='%'se$l=:aB-F+$,0fg&`H[rpT6^r!hq1\_P9_##Cd0&-eH(:`LB5'7(Bo(@>JO!nu:h82",X$*=s1(Ct@qBOcI/:XuYY.YM,p$VAf%W/%G:\!C@<[.n5$gQ0rf1ef7l_t)3cLOXoL9Q.ci<3I'3-0u?4:qH36qDCnkr7]``j+eK'=Md9bZY))/g-8ja4MDU[`b)j3GIbG.%L\aNui31ujs#c#WXR/BMj=`am6IMqd?[FMhO$bRsHB"?Pr[71VTDh)e.W"_nf4b3`?*jjOO?>DFe(KFV_2E6oaK+6^&f%M'GlIC_%W;sXraV--IrKif=1/rl)n/En:H)Le+-<("^9H#C",<8`?S#q%3"S6)q8l5X17YHba$J[!HXb%\1UaMr;l-bpC4fa6Sf:T_nD]ETn%n,rR.P,Mb;rVkf.`JGof4?[6qgjC53l-E3oBf#pLBKu@KL'9:+j3-ZqE:3aZ`NuaXb_X^br:r"bc.d@#e[I7MS2r0=*dqt[NHZad%/Z8!UhkLEVK7V3!).kU*)OJDKlh#r@WL$XqPKn&l<-eW;!.>_on`SMI(?WH6VMXj^)uFD53;ODW+_:)T_4ZNNO,kI`oP:P"$WpZG%naDe_K>12k!uq(lIQ'IhQu[6;SYZQuQ@>une)gi8)I!ElNeKc>lgD*.?";4[jK\;-O>belldisW\Q<8LOJhb+ee%-"dD,(McEh`>%!Q&>_ggU'Gn"1,P+W21:q\1%p'6N:+O-hD:N/cYQDpql1\JP##QZb1aq6.R4HpuWDrtH5A(]X:-;97b\W0PoL'q#]O:=mE[AGCM)%eaYEIp#S#)*.@\?DF>Im52d6%9#GfDml4>q\fuWH)cCbj"W3;h?[f8K@\3-hgasW-*r3NmD.udLbH9*GI/]6?a)9mrfZIn?a)9mr%pg$XQ3-GsR>W@4Z`3GeV,J=S-9#S!(GU"E+S/-,2-JlgH/0c@!h8C7bQfk(Ta)9mr2VWS#`3GeV,A)Cp(3/[fhUo?I0GJNn-JjQ@%X4&8QA&]IkH[&V94a!LnL]7&bci/9)WKmWZ`Pr(1(>gMP`#_LQmTfQ[)6MC&n9^D2f;?s\rp((O[l5uK?j6-KT!)F*s5TS5h^u9Q%@.aEX9.qL":,aknjA-6o])U,'NqJ<[g[i0A/)^M=Fb5GhGLfmW^He`MYEVjlcR<5-J$L62op<WZ51N@%'_-&#aMaYs#QTd'$*]JW%92:#FL)IhY1AogHEP6GJ5-,%@b9g!f)&mU,np9]0O'7&/IodF=0:^'=aB*_\hhL<T$g5h<jjC](+()9<p?MLd%j+"X^A75Ah\O_9%rSIbW(]R]=Mb9=o3m6GOL=F,9Kk2aGW)aZETtONs45WeV5P@l:Ieip(gOCk_6IO>pLQ;sh(G@AoZEKqfji(em-@#ckiD1tKkkPQ2%I'o%em_Jicr@drl_hFmfA;Q&<H[/KMV4iAa>&3n'Q)Hekd@`JM;?"Uc_iNRAO+.pFY;H(7Ik@[2na>BEq^^uD8\+UtZM53iH+6\M%?;X_LX#.6a3*ss#eh^<+$#Qp9#_^=+8eo]b:R,XcUtB-00o74qra2g-Ob7\#3\_@?$$*_PQE%<YAZ9!0PHkFP1MB1m5I7.6(XjSm%AU.TJ,>)b+E,)[b;C'o!13lYs3WiR9bGm$^=p@]s\H5sge&kMC4RFRr65ufcAS%Tt<g5"?8c3[rVFZ=L=5"Lajh3u"/>n]5<u(rS%bOQoGP,`gs?;W/8@A?YsQffir;FR$P`O'S)K47DERaS`e*J8BDSnk-IN<\K0UPnlEdcqbgRK'Zk6.;caV!98Yh.*=\UfTn]`@C>U%g`SmM?)8@r1Op5k+nQR#h()H5Jhj?=<*9E14M`u+?P$+db,H/E$Ri='.V[!&L+6LF?c#J)3Ac'2+6q`kiOt]pdu6Y]0WI5;>&-4"%PQH3)Tgppk2,7,E5\F#j(DV&?BT5q,VF7H"7`&]]'+f[CI@/s'SQ&K8l_RuVKb"iq.BMM7GmSX!qSt^=k\sO&5sq4F[9+D$`?I+5%7^r4]*URH`SJh+.*bQBbX[W[nMZNiu2Haaujr05$$3))o02$qmJE.X#_a4U)^hW0:k85uf8k,B5T*G8qP:p;F$Y4hEQ_k`+S+?,h%+YPSAOUh&"h<S`brSLXXlgY,7JH8if\d:B"G+kb4Vb=8:$@DrS"HoXnQ^9D!ah:4X/JO9e]Sa'E<*7:n5>pVe-Vs:"@6LJ&k\EJ^%R1hCZ-%k>"!GctK\.!S8febeBO*%n,EH]nIfm;^jVO*Su[E`HR(fZmL^u%dM-C&:IU9,hX!e3KXempUO*!LYMJpB8.%SD;)WK!C>%QB>!KF'+K;)Z3H/;ntut<)scCH]A1#==>f?EdL8C^$A17gsOJ1F.-o.p0c!Cn2KWET%_:91`5R>/F4jA%8.1P/PTYDRH$,Wbn;kN%^S(`ifPlN`*[sJ6V$d#P`O1HnR"irY6H>K+F>Hi1\)i'J'e^&`@#7%-B".W!Y')YccAi69O1%s&+Erh/1a2ToBR-f(EEX(lfQu>[%J<OD^0Xdt]_jnngOM:e]D$grB8UG^T/EF\_f,E4MRXoqJX:e:>V\IE=hjXG%[9+V[7\oa*LAKJ^oXCS=GK0:-HJDM'O#AT:V7a2#%@T!Np*@FkkgSDb?m'%--79&Jq<g?LS!u826OY-=(9%`*5AFDZ+Tt&Zm+>>C$I5pk'(dYnmn5P#%*!Mi'13"Hj[:dtP=F[ia*=]P8%Ur'RX9k08_dm=N@BaTY'V80r_;'uN`?F8NoJKK`5bf38CdYE-V\#n9)V8*Zqas,ob'P\(m0u\[g?qpoR?tIDeh?L)B$J&^T\.m-2%SEbOg&,!B#nTM?_fQtKP#.dKnNCd%Sn2R5/2@-7hlG5s4:.G`i;2e[+RL(+O!i'$9.O^MTZDu+N2F;DC@5XpY2C9:q1,`qd[,rc5%:IOcM6u:1`W,qo.LH?DtB2+Mj7imD5crHo0%8@3t5V&p4)ZE:q/,#N%TYll@XWBl]5/?"[?-f0?!`"=$`]HX`EQqoLVAZE`@AL"\%K@V"GX0G?'MWJG>c//+<4mm"ISN0EQ*db,PVP"Lf=`W#Y:^ZN&lEmj*,+ODK=4348Sg^9t&(8\AGCi_7Q4btD"DS>1GX?-chggQl%c>h3qUL5qpaHmO54f:ciqEnQUBZQ_b"h#IfY_+:c5u]-Eho"5OG=%OU.pV""7:ha,!i/Lj>":mR#_bK-;n.V,a(rN#-(5Hl\.$RI%q)%ru+6mQ16g`+]YOtF:8q3r$'ZC445M0)mUCj[2aUSkNiNZbKp0"P_p*VT=LacY-6Lc'15$eQDR])*4i^-sbk#:SH^Y-qnL=mGA%*bEfrAY/%[*q0atK@rBo1_0sKkUA*HX?n5u.TKY#TIcG[,=sa=-GcKl/ZC'%XsG*(#H)XI@gD1jSlAY\8he`eU`*!e$'K%D4?1XP%8Mtch'm_:-7O_n`8MuYL_au_YLU&J#=Z$qmZCY&@ZnSQ#e)Y!mNMl5eg3'APfGj$V>!eu1*^^2Zmo;r13iiZf<uraBH@mA9_).SR%o5c8%%##[uI.'D*R%R9U'L#V'?PitU%9ZKM2>O6S8srL`)PSKaEtI<]Tlt'%C5g`'Q>)Yqc%:[:P_J+2.JW\8TZO;lR)ld!Ls^V+%6%iU3HCfbn0j6N)-KC@nj/$/<:1r[[Q9t*mccFn-@.1BX:@iT5&Un##H4Ig3B\d?jQ3:^l#YAT](Kq"1+j$-d>]\=QajhA!\94e6%R>VuYFe`O?U!q44qc$-Y`rn_]NLR2rI1@;b&Z*!`K*\Y5FZa/"A$g,1Cg@eq:!QWtC_fq%.s($_Q-`:/o+<f`FYM%A9,5cVdKlfk%'pnEp/!U_(['7[767[COWbJ".rtueP4bDh]%O1h^eFFT4NR9f72!j+=PNP9e=cq,e&(=.0iDAZ!m7Ku,K')>.,5aLOoK7eddCR`4%Jh<j>G0:7H1_<X8h@,GNdNke]cpZ5(IU-]7%`65!h.YN@?D8s:mts."a!".[V0aA"2M1)V%O1h^eFX`6NR>>bFIKd8Ag"b56r4hh%a@FTFclmjDC3gB,`b=1A3\0#]1D!l+@,%uEDDP.sVpZf',3TTQ/i>cs@:QZ^1gOe0dhLbp-A#,(c(4>5dmVP+IU-]7%`65!W+h>@%.8t*IefnC=F973u:6iV<]em];VP0&qqA;U[ZUFOe8c_KnE.Z[OMP)Oc#<:2FQ^%2e+U9u*7=&+<"ZX\s%8mE#bl[UR"h@I;97nP0%:rE'?>*R9)K>?B5:QB@6['Y!lcpp_T^+&$h>("f=93lr:1^3_X)_3B?jV>oAYY5?EA"YrE(fqI)q6Y/SXB_)lX;H$=JU%%#P^(o`%`JN!VO0'uO6RdE5bXJ5lEBl4Z\6+JgiOX,.-joC_ME,R<.VmV`6qH@=8u<A[PkZqq.PN(sQu,_ppSp?^iM!9<_B273Zg9$he]c!h%ON(@ffUT=H1Z`(3MR\KXP+rht4UD;In[a7mna%]*c>f=Q=0n2>65j32Cl4pC*%\7Nkp4Cts#K[%()s=[SbZZr]?ZqigFVHS9rb3r%9,"([Y:EqSd\N5g9rVXFl)p2LW3':0QDH`SEr'Su?;XR"]U\.DWOh47:lI<H`af7V5cTe06s3t+EuD.G5ri2[m3sIG(rM.N;9n^$%<+Bt\-q5.[A)cB*gkB7\W\(M-Xnb(a/-pkNb!R%"`?5X(Bku;:6qH>gMS22Y:.R4,A#[$aaJEiq18PA%PZ<meMcjYUl=m]4$rb0t%OuU;qNhfn'Pd$N%=j8smEi,16eiBU9Y)<nR*5>'F2$\\A[.-"#gB;_JEU8kVFC*]_83(X+.`uG$$p*nX7[2rnONB=;#D$?knMMY_%W60F:2Kh?TN&X35#cPq``=?RJ&MN>B9rbHY#Sa%nYH]d.8gTa`!D$ge9@Km%4ln<p-HKp?.d#AXWj(1"';L,m_"tmK`ZRlNWALRo%RSj2.?^2uU;lNYg>RLWJ=r4lPJFOW_.!WmI.`EN/((TU\_5k>IWdQd-bk%p;-T%)&Busr(5JD@OF.4WJ6?Qm,lNTfe4K6JYJ]X)*%B[++$FdbQg6\`#o;.?p$;eelf$mGfg<G9c6glUNG$ER<")lhXf9-&p'UJ7d8)6.).F#p*2.or'E=]uo!/QPDXenq=]N^\fPVUZ;T%hF`D@:=>Tq.`kPkRAl:tXP-E@h+A<TTtpm/R:;!*'R?B#T,53E@aaq4`+3Q?Za/(-$ic@LrtL"n?$lZB\-u7!YdlT7fB^M<;eBNJ%l79ZF8^R!^Z0sgASZ.JifK5s=.ka@,pE['C#rt#,(05p<q3gr"@:FaR.p3$+!Wbf9&m!t3C#\Xf\==qsaq]VaT*WSb;HOF\*tNAR%at]m8%m5=H[K2pDZ'\K@7gB0%,\oqXnZ=/k;Xjo@:s<GH"rq)*/ma.7]nnDYiJVZ5lh8r"j*(a#hnJuKrVbs@bI@NF^\-S5f%^"J%o'su_j.#KZ5C]>-j_3Mu-[r[h0.sFZ5(,1P.r*j?VJ\[qfn+;%*:P6Q0A78qHPqH,NEOZ(3R&8'_fdT_G0a4+,V-/Kc.*dBnIfn!%p6=Q(R[K$j9_gl'rln]f;*+AOT(]_ulX!X.-<$g&Sr@1i0IP%1>'m2>Km4,sDM8*em4b6$#6%&KfD`Ua/&3I>GL#^-&Q<QB#@`9"%(A]O0OBHZZ@3QE;PQb!,ZkP&JN[!G843YjTAH.W[:b7J#ZO#kW%!ANkl"4"Y>%^0Mm=DWbGJQL?PL+[fZcl_OB.X\!;GC)XE`_q1%9]E5H$Ql7%VM++/.@cnXHt06/OiNerOdSeIA,Sr2]>DoU6V;__JX+MaX9C0h/r%V.9X*"nL9n:2UlK=H.@oL='RU%Nl@mOI4GIPe%aE/e.#!PbUo/P"H*CT[FR05SV@:QZ^dZ%\FQWZ\#V?MRgpf1lmGbtXr%e8j_drQ'Y7[q>1bM,eAdj'jiP7]]AH!/[G-Vp3WiC4Z9%F]=3QBn]9%&Mad;WEtmWjQ>HB$Cdn)jW)$lZUe[]:lI:uEWiFI"GG0dl@sge:'AMsTP+Tj`,FZ5LtN.MUJ3L,MUq+G'S10$bc3.>%:oXjM$e(s_<m)m`F>#02AP56c<E4S*ES&RmW!mB-F^)i1\eZS]Rkhc-,:=&IO3UQ158%b=B&.W6l<'8fD3@If[[n0h$>.H!.A;^/%M"!NH4K\#B)C?nMZ<p6(89&qoXhc^n`u-&T<E3ILf@X=*(7>/)URDX@2WR==Op,,Z1jSAi^H!Q;TG?s/%jS&'K/O79k^hc_;)t1E%82*bYLPESn(o^7moGVn?1,J0(?1*5dF8FfDmOE6gJJ8_Y#WReUC%.*Y]!TP)78g0h\u^nLLq`7oe:;6d99]X&=rIbD$;KKK-"bQ?%s%c:@m=N)P(pp`D!X#0gdYH.I5a0iM.@'RHKCEuS&JKP-=H.#KGuUIRKb6Z'+\J+Yk:'5gL#Q"Y(XHfoGPt'n]@i@=4\`@+HPj"R%Ce^G3/iFfu[)K4,3jj4%pd>6n>iV>%&58rd+(4X_:o4q)Q%dX#7RB[/1:>L"dc+=a,=E<eo4i!a;m8,4PEbWY$_q>&qN2hC2"o4b%-<lNo;n8ei9PWV`!QCa-)dFlVaUmK/VLt/Q;4n.@FZFSLaOp5YKT@KW;cq!PE8:OlKnmRe%N9@%XMs1<.2J<he[s?Rl=`Zim]<@j%of1.M]/J_of^he1V$Y!&S'8QgK1XJoSr`;3(AnC,;tihBPY'[u2U$m^^+HG+[+k`\$R:>-`oC[gR/[W'=<K'1rU>2hHIe/L[\Mf)%VR5!%biS9+/->RRb$n7`4.5sn[g:b*ooT&`\NC$VOSbrfUm-AbM]"68ZaPOQ\6^p8>rbVuF.S!V]MMMKMp72!?0`$q[\G!iVNf_Z%aHao_qS?;6!R5'FRkj5RbQ3=cVqkCFUdBVB'K@u@+tSGsV_S8tTeQCn5]\(H!@J-5+10(-s!![\,]\6$6bVeUHJHoX4*-j,4nbo"%3i_.<'q1V$<GHq`R>$pLrX%b&"ZAKdo:Qfa\Q)[E@3buDX$ZDVN#D.:jQ;')b!JZKQCBllHe4>N\>-<Qjttb7m,=.mm\MK<1oF&t%5f<IlFqZG\G,6TQ&jGWHP/bq'hYt[7;YWFXV#j+[E33P+VQ!m&iS?q2KHW(-#B4aEK(W4o0#_ieVe5DoOWJ^&p<K6V>E:paCr1dP%I#qrU5]\T9BOu6%W9:Z8dYZ4!n-%s*.W+_WQVi%3E\EXg'E7A;_E+:Lh`"sjg-:/*/U7\&@r\:Y9C+YJorB2!CIb/f%-b"hGk4"=%MF]+ZEtcnu^UrVe]<^-sRX[[8r-g^U_iKGHNEnTSL@pq"\.-2c"D0lS&bqu#`J_V[=Q6+tGc3LLUieNLcAi69O1(!Sf[;t$/"db=%"]B`K9BXTm6oCe.4g3(BGTlF)Hh30="Rgq&5"s?fm4+bT3%Yr#OY6%>F`"[]=N-3Y98LNHa&'8AOfijag<P]c>E:\p8Jepa6H"/`%!R3[,Bo_Bg-Lc*Hgb(Nci8rtMXP@;2^/.l,pIZDI+g<10d%%_jI(Vs"NJZOC,"X5Lg+sZ4><gQnNeZ=,dpq]`=5Y<-8RS9R6^fsp%"[1J&"ie:78%iG)./<$[0#c.h0dij>OruSocC'eRptV;h$7lgV@AuDVB%QmAmWLGRcB]AQO#koZ(HSf$'(5<i5QdLHi,W0RkcM*o%.kn=)"9U"o3"#;N//TJQ'ljQo_FQ)X3NU4WBI1P]\n;/75QirYbRpK\9B=9Pd%8EWfD:WtFu8L0Q5Vi1bsQMrj>damiPF\>1gqX7%-[9k]Vfb.XLCnW[*$,;hW9*NE['g,e4D?H9kFnKa"!>:VVsnY[9eD(>AI/N#4IDI0#Z*esO6Yt]0Rk@'-c$bo76QJ40:PtQX'Bm:%h9gN;;FWq2G;1e6"2(jY"O0/a0uU33o^%u=)Bj6d"HOE0#t"4eY@Rtkf=`rGM.J`cl[3E:-LY=NoBT;tEtC6!lUK?HdM\M=8S&Q=%R$R#DW^olO:E^"V@?RfSLiDZXcSH@p7dEOeAB#T_)=4otXGLX?`f_`[":qJ3RAi0jf,[9SFfFOa#TKO]UM7>"fTWNR7%rXOVD6^d%*mMP'P`MKJ\q::'/i>cs@:QZ^1_!)qSn9l`QQU@06X"3Qf`uV$=liX<K#Vak_u.*qoGiODdCR`4GV[EJ*&nFBr!!b)c'>gt,A=7J%+Mt<T:!Z,X(p+HGj2hupm5CE:'gW321e.D<gg#LcLsoVb6%iU#R\#;=0j6N)<^k=WN_W1_<@cjr">oW1;qdh=Zt1+@E]"(6DI)OQ%k+]k/h.R\8R>BCH)pl7AlnO<od/b/V/+[h@;4=[MM"'_.cZ9XU7dEOmC$,-&F@4*Adj-d1/tIUpR(Sf_7@`N+%O1h^eFX`6NR>>b%FB7@le"5(+H:qm&Sn.VAXd%f[Ko+8`e\NrK0%E("8L($K<*U9LgXIjkEu`O02`R)t:P@lr%O1h^eFFT4NR>>b1e(^ujop]d;,B"X%djUuB&G]32X18AJ+e#SrM"'_.drQ'Y7N;5U&#1lD&b\6dIO<)tjg>="H-2ld'(Qb'IL19,8:;'?/:6<d0%N@\m)_l@'9?Qrj47ZD%2=7E_&Pi_!9#OY_Bm=DJ0<K$+&Pi^lL(V`e/M/U0R$Zt<4n4.CFO^Y8XTlAs&@+Es6.^j5RE(1ZqnC,;`JN!^L)L>POFL,[0?XKN%MG)'D)KPEq<c5MC4_?<@KJ^ECA7kWB2<^>r5rVDHZ:Qd":kS1P..iFmjed@]A+nnM8E23n9TFU"KC1,FPNnhVP/A,c;Sug!_#0p/%\`k11R(YHkdeLso>7=5:?p@pn8#s92m;mMEAQ2-^@![2A/`_1OWi?pE';LPj.:/asUkd-UNQJ,p9'c#6i:,#T"H:IX-<#3&S7=LW%Y%B:]KJ^-CAF6f9.GLeY:OVr;H#TX[PXQ$P&D&I5nRDJpk(sd0>>^,(j6K7+)>Am?Z-BS^f:CR1O^`@,WspColZb.5&T0?ec!6bU%D1$2WT3#-:Z/Z#RUD65BpQKW.&I&X2+K?DYb&NnM>;I'C7N5]=iW6[CBT=OVYt,O6o89@aK"l(;S:GOGN[Vo.gJ"KIfuk&(NNY"g%*T6U=_Lu>60AJ:$3F*6(Kafi&72@Q<\P9*,R>V`RNNXqj2t>iR-Br(Q<n6nA^)1ZRZdNA:=AWaVD5CBOkT"b>A^+DI#\eZdKePJd%?>6n+GBm#t`sa_q&>:c'h0pG((.Gm+k;TBKjrdKZ2W]!$BI)e2>nE%SR@Yks?ZJ3Mjme:*.qji[aPVumctHc5P0l'j=U=FU+nV*l%TeZAjKGH.<Qj.AZ1#@;3Zt@ih^gGn)&g9u+N@(8c-29@Hd"l,G!$j#qMcCuZX1$JR\!"[Ce*>!`d>Td1d^nfiI($%eVZKbk@QOa9%-q8kHX`@sXB"cFLH-K;gG^nHh>d7E=BL?ps.B$`R@^I#ehgs&6rm"GOYlPGeX)d`,L[<U_r=5%PiF<k_a2m!UNM?2he=.KR\)=q0%"5C+,a"U]l?j@F0a#^"mpf[n;P*\5*;#!upM'C8fE1tuI*Q1P+kV,X+MiY\!*E7h9k`EPlJ[k83L]"jU4NDOmhgXso;Z#10c7jug%#[#_DaK-lsOq9`<N/t*V\0Jdss1YWg27eQBc9EST$U"/@<6i7GMWNVR1;=,&Rddl1r9C+2'mpQ5^@/#bX\g!er[gJ_AZDanf7u2E%YkB1[d]?4>d3'\PPLWtSP@AA^,?,G;KJ[H4W%l9I/?9bbM9ao<Zc^+U0VQ6X3G]BYj5<jh$PW<dR#hr-Nm(a+HhWI<9)\E>QGo3[%Z?d"?hXlU"f?N-(s6Ej(rQ9^ip&kD/-&qf^OB,Om-3`61?0K[9KgmY$`7[gS$;B^%%+"=BP!U%W@L+&&\An@Q6:rh+P]/@5-'a3Z%3==7KJUAmYg+sZ4>!LHkNo!nu>A@t;lJ/`<BI4agJ<1+#FN.BR;@7?:a[`Ug[A%\L!\akp7jta/!@(@cRL'e(AH%115YE[;5eoop%W.:Num/[AY+thqfAj23'onU05d==;?)JoFYOi%kVLVa,<"uPgKEpTZCkTma`/:KT>,3Tas"lI0?U_=K/68Xo^%ll@5HO/8SVCYQF%E!"8tR&m[X.9Onh-)F^ak1&a)5LS_thC^j9\nqD.Og,_/D7c$1/N!)1;Zkf_9uj#1C,erc@li[;3XTsP/aXQo.0]]!h8:!t9_$A9%4f3c?.aXE!._r&cTM9.H;t(qO-^5>)^3E+7^$A17gsp10B2+Sla'S0F8$JK^r?n:!k>gUR\HHQ>IG61uE"i3[*Q[')>>W=*U]c(4%_@C<GF&&fU.]f!&)_8Q?/Fm`d(7CRI44]I7[\I8TQB^$J`0CgT"C#ksPCTOt(0oO@]HU"@UbMQO_Dh!L62\SCTL]BEOV0?VMJER"%GoF$iF3#m>UB6'3B_G_9r\rF!ic#bNRJ@86X<6\C7jIFQ.C&Q%X"9DN`HMlsj>\8B\.VeEF>;8I@?Y(uM#9oC5R/co$7;TALE%Y"%K]61Q;;c/BKhr@NKgT"*ju`g:F#$<1-T/5EFK@^^f8dl*),antiMI7k)K?5l(hS`$"uPfr0I9pN"B],uU[^VUN&ae[R43Q_kFbV&%;@X]ni5?>]*nKp>k\"Z"d9Pg%+j`gbm<K&io28./0=c%:p9,S&F#W.I/F'P6ps\H2\kS(j2$GgH6UVi6ku4Ld4N/F$#.SfMK`Z[!%cM%`>3WE&<#t=[bO3l6R`@-jf_F-nQ,Y<?S!qfYF0#`u0VkO+_,CSunr1-,Z[N9pcj+Q(siLCXOT4sZ7S*OI:dV2=BW7mc\$c&bJ%$ROAc#E5#o;jM,[d6&YFMqhJi@p(--jlI7Ic//+<4mm"USN0EQ*db,tc:c26:$=m.J7`V:&bG]hD0:tTQ-f]Q=mctn'^.lPiE9_,%QD3u<J<0`tg;6IBKW]3Tj."#Z97ci..MK2N.9Ohf`2-RLjttSqI\aRr%D9$D`n$mp[at/Sks/N@F5>'"HaB.UOXkb/3`&jX\X0M1%9NJaVYrs$L"N/%(UmIYbCVhqEBT!%W11"ST1Xra[Uph?R\hg2%emf261qKh@-Flmg2Oj\1X$MmY6s54`k;#q-]<`I=_ZWgPe$tUc%L_[bN"mYY68KfIgn7d!G5MXkN#2C(o@4.Fp5&&&NOAjVVPoscGPJnqO>7U?l+)+d,F*<L4(R1G\+?rA:G*L<c%WZ_P5GsgRj";g7%3BJk`-:lg0PV?UfOa`V#@rW)q#s40u$/?Zr7&TaD5=:bpKEPK%.*o:N:fhq4j=1XoH$+?nI)^1r8=ePOa1R1*V3q%NHW=P=l!^9N%i-Eb$;W*1ZJV]Lpbs@"eLDlbtW%hI7>,I_M[LNK33=]al0.A=t(JjL.Yq/Ak>hq]!?^H)1K<R(62ju'$Q6>2j'7._*$Ored#`Akf%BWinlF9Kk=*CT[FWTcDK)l%PNBj)@4h)cHBRJB2@0q898gqpXd`bE0T+Mt<T:!Z,X(p+`OUK<G8Jis<1am_#ZS;9;r'h*f6CCMJX%]%$7D`Ji3UdB<.IgsL%4\#P+9iLhBkcWakm^<Yaq?[!(?f;4Mj+Dd"fNMal+]Nk%-b?e>;P^^J+_Wdp*mI57,?]s_7c.<t(piWS#%3=$S!FeWU&bi+T.m^c%cn1d6[0iq1K2EktR8e\,u\q::'%Q-B[@:QZ^1p(/pBo8W34OZ!"THXXU4@t(:Aeh3IJe%>:;U][u2Fd"%%dmj!CmEQ9$4Nf2-mqI?GYa77NR`0!TmNBBM923_ufGL_09rFuHCkfe_/J-E$..T>L&9N_8Q^XLuYVB<?Ra+O7i=(BP=s,64I4?88%"bI6SlVc2Q&2m#D7am_Z:E.SEGbtXr;D_)_EEXLK&AKhT4U5D*['>_t0i4SVf*#Nbgspi`FW*[<--+jI3_b4XA*Hm7&F%-_%U2[P%SJes2R[dB7F;h)CaEBkF;nMd)Jj:\iKr)S!)!H&rdP0*P,_SN_$[):WBc-1.QPdVJVl,NeSTpV"I)(`lAF-:NNFJ:g,SejL.:(S)%(E:?92>f7.b4D&5;.A+n`+WZ@DZmtu^h6N@MaPmc5WGQ!SmHtm#po9?CG<#&b\g<ic!HtYD1$d%e>cn/Uj;'r8ZJEd.[b00"VEu=%fP+L];YWVlSEDi1_WDt;N&JDi`:0!SUJ0gE6H[F0D,K[GVJrFhR#P84&`k"E8JO.1H"+/Nod*'fmpU1Z#'^b\W1'9C@^+&k`Wg]r%Tua6S6oiG.;K^5hS-WhVA]\\PJZ6#c*f:Zhi[Ve[N/M,oYUG;sfBQ?N/`sT<WiVVH';LPj/Qp0NpcYLMjt]eFD4G[X+CKmpb%[<a%bK5.!9ODiP-q5.[A)cXd7na4N#ZG`$/5'c]O"Z6*T#JgGXP0\5QL`6HeCL^TM3,_Y'K^f#!ChTUQnt2[Fmm*hoYiLGJ5GGYqm/oc%BIV8D;FSi4Qj@DR7>X[-,&AEVLBu*Wa_G]KQNQL#gk@9dS*Lh=jge*cWgSbYUQ)H/fdsY.U19OWVh=p.E)Y`eN,@JrLRhkdS/a[d%VQVuc'VgYk1"f0UJ='>;js.<>JUj+4VTUGqDH`%E6(f'3I#Z\)W@Y,J4]eY7Q@narU2k5R:3()Yl8WC>Wb^26`+W)$%r0a1'sLaK%,8>S=@17'/QR4<_21ILk#S'Xtbe^MB7Z`T,LBU_lWh>\g\H@Z<:G8A8M,5Up!cJHpbj27M?u&`-A[$F18<'(?^sb?0,=7h3?B.6S%VCgM/Y_jWpI?N>\jO_V;eu[S#5Fi,o+\f![*lP&O:h@:_)T3+=#Sih1ar7Bb\"/C;(*uG><_G3M_-8AqJ!O/0K=JSF/G[7>+:Zk;%VkZujM:&3NO;POV4e^(-U`nr@l^n!mYXWD-D5X(&"c8><<=iA^B[Du8's<CJ/u%$9N`uL!Uh8/#)X:@d(i>!]Qe5Q3]:5D[-6_`9%$P+ZF4KQY4/r;B)Ta`=MlWVM):En[=Jm0+n!],ZU8N[<[E4O,A<:t:''UB+XTJ%)uZ%-1fH$mc7Yh/f@<9'kfd*2'%jd9!tkPH-]%X*+C2_WK-p;SU!DccP/m(kS7Shql%nr;#`H`HD(Dc1/DucYq_>#C]a4Ru^=YI/@j^>;'l']q*Is+5[Jj^A7cuo*:pp?D-OK?fLH>%^::h]q"2Z2Xf,dcAu9K5c+XKIAJ<PMhXD"o"tiE2@E(rDot\%lDk@pA^:cuaJ=P&WZRkWV%Q;Y%d[)^GU(n\m@l?!:Rq;gfZ'Y@"%)\po*F>#GH"WMOHUNr$W!tGJ!.59*W1lWo/7YbEEggFGlDNcQNM?[O]@`#R+dO7]p?KAX$LIp/.^K-!j%SNJ\)Xf#GQKt"+pl!)c%9C>JhH`\^F%VcC/g,]^mU)GmK0:@")>8C]])T<4Q>77>#Tq90FP#BG2C'c8bUknRRr'^:X5a635"E4;TTJpT-;m7](OHe`g0W1RF%rH]j'\P%#ko[\>-iC!1g.@d"5+qd_2`U1q>$$>M\?77!CR*5[t5]2cgiIV-NFs(20'P[nh0dX(i28TTNh?[^\%J_)J`Cn&O6s@p4%dA-\;+$1BIB0^O?7os;KQ,^XtQ9M/BHpT=rMk$9Q`6,GQ];uPo2d;L]_GfqS<Z^5;Q\%6V:d@,jVYKkh*n+M>^o,#%;iVB?_)`=4%8<*cE==Pc=^%%VIqU^f#\YJ\<#'JUFr8m\j$$c`Sa5dS@\\5VBJI(Tm+Q=.t,6UI($.+<0o-ohSU+Da_^kF5:LWKm:DJLYJPf;Aa%g/8uW.hIM0Z-^^nfsQ:)],_?oZ_b[mUCN>"9:D-)q&ds]Hqb+;0A_[<S]@3HYRO$NQhG>kJNabOZrs?3<7]5e=Tk7JinD:r9M=0!%36V];FUJ'1TKQ)%H7Tet'$3;7U&O^0II:e4SO$Pi*e/G'4*NXD*RJmnEu<;-PrdiL#:#44/$cbg24];65fT58Pa/Z6_F>r4rZ'9)%7!-5cTh#Ej1"::f&sm(4R8^G5rCD]*)LQ0lO_mT0lq9G\DXO3q"'TD_2gJ:^>i!P?AT.`iEi1UH1^u\:M^(M:"+I6T=0RXNP'c9Q%J<nk?=2;r1D->5WnOV+Q'Gk5hR8L;7rCE!])1#pkPHDls2V+gBDi0SX)OY&R5]a'0U"A/j@\eeg02nMOWjLnk9&UM[XO7+sVYKkh%*n/mG+e8HS,40X_e75JR'_fUg)X:ZodcZW[h\jpTlg\Tp#=D;9$oQ$=6qJiD\]nQPmQgK*h<n38dXpg)*u)eU7VM]N/>Za@<N2(D%VqBS)(/mi;T,0[Jb@&XLXa(9)o.ildmKms7pT6[0gQ';0RF5O0&XOpS8<39i0*k`GT]+]u"7<r8SNt=(XZT1j*b3Du4.K]Q5S);u%6KeQKdU)#8p`1STE33P#8&@C<$t^E!.I]=,b_*>d"`&C?\.hU')%C_j+6dZ5KC3QTZ1Y'=1Clas#abY;!E\Eon]:P:glbE4;Y^bB%a:n&\Mh%++V;UQA5!i[G8tgOc9&W`/CeNYh_>'?@Od,B6$_M%gqN:c#2!iMT*a=[egc:XB/AcpL6/?S:9pH3@JoKW2i%Fd6*Io.A%"73WTg>hFE2G@Mg2PGCi2dtcUhgAo;,K#@';Pk(WIE/8=Z[S^Z*K@WdV8_"qXti_1I3CUar4GpN"4-K4GVInUg!@jI!OA>aGlqSA%TJ5rMcl>*\0Ie&k^,5"%:lU1g;I47eVqJKWE,RfVEbA"$D22?s4)0*N,3fMKY*VS?\H<SMM'2D?oi38@i:UBT`.R;1-`1i)K]`+[%N4^L53RO0!-)J94bc'4,I\b$?N4ZEoa\EC93Je!)n.K;iH5;PBqjV-(/0;16oH%p&M8pIEZlLF^+@nNKG6sFW@)%t(<d^"IUO#@3%23N2L7s#h3aPk77?`'F4K-!U\b?>Ad9,FDn?m`*mVXVC21<gLSQZq<nWb=l8d>%-IiVuMB8mtm-gaPHNUORm8i\X_\&E24a*5jsm%NR9cfhT0Yt-j57,&fUm5%V[U*&j'Do"lg0'qb`f_4,ECl;U][u2Fd"%drt$(CofI1SXBUb&"QSg*$4LF7ceWYY<!N_etngJ/STmf%NJbi@,rQ.:T^*X"M1A[/m4EX]9Zn#)>BMXDX\0DT>1*\U)\piE?rWKr/[PSAi_qUKZm*jt,smf3l!]$HC3^<+`b=1A)Vsa:.jXf^%32#dkO(XY+-Z=C"'I4+uEU-NK1D_o<lU8oV\M0jU7OT[l`&&;@WM[9BGRTp8^1iPglOG-:3n3a`KT4BjdBkC=j&J"n:+<bB(!pun%!18s'S`M)0Y3mFLY=hU96.d$V)bh8FW4*#VBrWS!`M=Wq+#b[G*^OjI#K,?.<:d1;NKC_KEJj3Rq#%(\DK?+9\/t`55<@PTdX9k:%KO:'LSqF7%=uVni43Qh4#2Z<*`:_>_6X=6"MUTMk*9PkLVWT(<N7Nuc@?/\U'+`4-Zln=qL4SVVg\X,t9G+&q\q::'/i>cs@:QZ^%1gLl7O6If)NWWIA(T8eXP>gtK;K8/@2[o<D;U][u2Fd"#dm^"d:=B:;*")qGUj1I@,+WU!)kf"):Qnk83hEI@_j%Eg7.L*^>u_].%%M!G%[%oSooTK8f"\tg#D/k5-d'L%!bR5Vb)V%>$8WIbA':Ml\bsm_4aqc**EMCIZ7YoNe3n-Kd=V!\(ND5FQ(3m\^0,@*?';$+9%Zc5-s]IIcMH]"`cd"g4T=^Xn.gtqW*L1RN&$KQ6=!+1h@_)k,CY"ZKuk;OPTbWH#cdDj2UiLscp(_1h/Di=G'1r8[E+d[g\C$NQ2%2UENpa8@:7fGk$OdDje*9JhL#`+pJuTk_qs5rj\5_dHB!<T<,;_o\F(5V_!f)AB"KABrBH`J$)FC8#>SEs9:G[\&F`6n7bP3R;VA%NQjb^(i=Y[Km1Z'\B79c;H8Bn>De9n`Xkq;;\EK6S=G%&VQeas';LPhYMb5^2.@dfKJsl'C9l4&C/e`SMpr<JE3u,@4d!VD+]++U%^;f46'.a;NT5,Z()UUsi-"#F-pac_[0N4!PR[SI]cYl^@bsA!>D1%>"oAa`Pg$":8&1B5OLq$]]>E<E)F+rjUoiSbV_0IBVfGk$O%dDje*\;%4U.oj)E84)g;J\0"bE^K]HB\TY8H:04.D,Pf,>auXJHu4_hb`>n(*i-J8-'#?so1)N>e7b&m@`=cHDiLa!fuk&(NN]Ms%pOogqNa3-eWU2ENhnee6P`UZQ5$C^E.ji`sm,a)O`n-PfP^lT@NNm!i)/_lp%9Th`bBl6pKTo0-.haSufhJKMfuk&(NNKBl,DuB+%e:n8hObu)q6'bJ9S+f49b7uJgfhJEK3QMl/9o1ie96.">C'UF@?;(FU7lHck)[\]$BGM#t>uZfWDpcKB0LmEg+<]BAMOZE[_oi^&%fnm(l1T8_G>[@l@)rP@>iDNjS2=%[PZg1eZ(i;m`^Ynu(0P'AZ2-s5k52_RO)806>6cr6MFunnfO;Mh<%In+436uXZY+m=8@9?Ui%RMh9W2;;iD;aFm"Bf./W)tqLD(!NkOP1D(_A4UK:D5X+G-&L$HeIgOs9`8"'IC4`X^p^,S1^:=\]'Ya3Yp_?\PZeEqIfY%nmh`'f%rk4>"4VUf#Ah+mE.nGUW6hF5l%_ec^YMd;8QXQqR9,Au0V!t.f\Y'gNBs4QEYc.1N6l(2*Z96T*JX=A,)>Do\fSGb+r)+s]!glTT%Jmc_ICCmA[1WYC$M#EOe1>P9gJmukKCG;X'>n0LcJ4ulQVr4,U.^d@><<_.cq])&O_G$dCY+rK-5LZH.mSfMJ+Y#p"nFh\ls4@rb%TNo7i8Ke96b7a^1Z?nQ$Ba%LN'?s=j.#RXBp9@h[T8q^tP`c;8@^r.s+KEQYfN?@kE\\h\=O(D!LZLY^0@J"+Y(*gl6rOg+D1WZ@%W*1IF"J`onQrLW87o9S+'dmFD^t0uf-hJ3)&5e#XUl7VoQ87CX#ell/!`PaT1fg1Q[Kl*ZB)HSGi?[@p:3=gThNNDpCY`6\q*1sa%[R1?C*@s&6XDfdQfY)gtE-@J?Wsgst*NBUpi>h<@0r5EP3k(;E$=uBmS:qIe[)]rqP!f4W0#iGE8Q22^[9+P(,slrJ6XB"J]%bI8%4(E#A4mLhWNG.[\Y*`&<gXg-0nWGK<#"_muK*B+h5^\Qo!j!,7b!-prN.aN7obR[%C9N6pI'gRB*jk&XfU<V5$[JG6:T[k"Aj8?q%CM-%\XTo`(Bga3ipVF^-"uHS+W(^X)9pE)RNT>5TpYuQ&]L`\]70R62-4AoY)l>=9@R,"t*W[Jjfbh*9^lEt:>`-L4:<h)W,9?2c%^n!>O[N9^=V$cb-a@Wc\HU)XSN%39Z,_cDnd$i=j2-Eoc"hKeIeM]D!\.h8@iu8KF814nP(sj6:UMs*@Y#3nO%-ko#8KjDS1E,Oa%5LSSPL>J?IAF$K*Rl>!OOa08(h?j]6)+P2]chp\'j"&P#$Z)QA)?1X:OFnEPZkMFSM&:0OLFKA`XN*/bFW%b%_?omgDME)SrPi"l%&XQq*R8:/-rCDE")L5shO0-GC?84+(Y@66"Tf>R`KpU=_A+aI<-jmmZiSPc-O^#J_TM0)T<<>?XdEX<UMM([950C\Aq6p3>XQAR&%1*X'fe*'k_W2CYq[kjeoeftV7mumOcA<NQ\ppr_"JglKDZP6Cn#snJ=Z(WKn<L+Cl72Q>"-Do/fKG%%/dRed@2-D=[jMb^pNNVr0%HeZqe4&\af465T[7dUt+(Y0%/WPcPI$J<1.CXt*&2=/I72U%CLe4VA]8l/.7R!ui-.G=lK"uPGg\X=,@(`'rWg[c,\kG=>>/3.cd%p9,S&F#P?4/F'P6pqta(C:>dn0):pHB2>2n1t?b]g.+mlN3*aF'G-nnV^$>(WOrH[joHj'(okG;rS;d3U+5n2$TI/r:lbe>;BiL2%'_\P6mpnpum4@J'p#*\g68?"tS<-)/e&Z&_PNuWQdA][*W7ln]MVstU6A\-U$5bKdk+g<$/FnaEU2atbFC^f8'[+a[R_A#WHJHne%4*-j,4n^RRW$Iu.rDERYVcAW;Rr3jiV]Hnljb^!3:jc*`jP_qmVd?EcOXJNJjBm@20aF:ogeKOb=W/n=&pmA^Qhp@rFu7GBcRZ-j%Yell!M;*.IM't2FIraTI;k@Lo&l7?$aM:8XDEDFQi#B40=Ts2+,4eWEIek`GSmnk1?lH==;MM%AI"qLKO7]oVO`nb:fQu>`LOe4!%jBm?s_%)nD6$U7<Ee$j,_RT1O.HR-@%N$pS-Dp]O:a@9@4*Jnh;o-]MnjjoW1%UM;okWCLBRp'=<`g`*Ps0agd?CeVQW5eS%,RVO%gGj6=L)Y-6>0ES\4EP+q6%^gEdf%a#"q@+*f2?8jr/mYEC+1u'kp8loWA:;c.5X?u;eTDS9TVRcZnR3RdnWQ0BnJ6-^!R\_E]lMp%8>XR_*al8ZkUV^X=>`IY3eSE=Z()D(-U80/P>J9dU9hD)e=&k0Vkpu&'"V_9)$VdVFe%U[%O1g3eF>YSNR>>b1efs=2b5]0;#1LI%Wh,n7`af5]D(6_T=*"r3etnsN/o$?rNL%\@-.[f29W!>@Gl/klUqNePdLe>'Z'L.?FfFOa#TKO]UM3mLN8&_l"O\::E]aN#M3lUO%RHY!GX#l.,lVc2Q&2m#D7apQ_VjT^(L.Pm93LPU\:i5&@^11A8.B_MM_Q-<]cWJO2XW%^Rn&6?r3l&CYL-?X6fN30s:?Nj8M9!IP%k1?Gqk9+T"er?QM$G9Y<R)H>)d[E:lAKHV'JOc7UG%7')l4,$9]%$?lKT4A?d55\#E4>"kGq7U]#q^4[<LU?F/hq!pjD#/KgcEsV%lpZo]]$W8s&SR^!dM_"n">lDX(Z-L;iZqTH&E23:Q=hgbN7NuSnPMDSPr6sC`c?[SDR)*WP=3V<DI%"&k+]k/h.R\`J>5hN+M,oT%qo7'7K%Y=j)Pr:`6i=OFo,NFCdCR_I<k;";+M?&h:l>'JH3?qF*TG\IVWT(<N7Nuc&Z`if1duY_M4jPcJ78XU"<HLRV5EDuClC81%CaECi0hJA][7V%tTr>pj$&F/F7h0U;R.*f[5"@VmL(Rj"+,P"RGVQ'-jif8tBe@Jan$LKEfNONgJqZaWe+?="\74D[5uhLW#tU0,%pt'kAH;Dlm8AcRJUQ#^c)<_BQM`8RjnB.!Z,`;#cQi[F&`"g:pE_WN[O^a@*KIA(O(FMZk)jDWc6C@XW.Mm]B-NZ')U_phN9-=Fd%8L7E[0q2-FZ^)q-)dcZ%[p[Klg-q-'JI,)fFH_?3WX%B#9eADq0R:=$@lLBmAhHi31qp9Jka2MAg>sq"Udu-'6XlN_S&74Y9+<5G%6``g=cYcWtc!HtYD1$bg5t2.EXE$%d7(JOGDks5"mNn.'[)1[bO-aqc-<8\<"H(UHf9e*j"am>e`b3)N9WFhqKSB0XQ*MVR+03Xc%256W$2lXgZ+Ae"T^;a\<cRmAm1$'ICM#&M-Hr)@[$j$3&(*tGi(X"sTfOXiI\Mu=tf\-s&-gtU\.Daeq/?Lor>Xf\tb^$>5GU_]1%TpB:<7e?BLRULEd"n.L$a"sVdf7==N`R$hFI>!7B*i$^L-t"e6c!$PABm`p;)k98/.>?P20/62,RVU./TWouAf*AZG)(jk04MOIq%2$\\A[.-"#RfoYu5+2j=UdjOTN<>Nb";Hb;8uZm9,E.u\r$KtH*!D/H`n-SoTlLYs7(Hd6`<`nP>RgooM/n.L]>o_moDBrcfGk$O%dDjd?Qoa=4PWYnc7Pk[<Z^PA#eL;4kH[0)-.A8.=0>BpI?AVGHPfMn-P\#99__R`n=adoC#bhVK-&Q@A)./iOW?ESj.C*8KQh/n=%klboClQW]G2-Qbi/%Dm&"c8><`,c;M$/UIhC8S(cAPUX"9ObF3>-hs*"a):cKJ]f_A:1seK$\V]b6)4N6<^^53u)lh8rP[1Q=S!9%YeZa8B!2OD1YVqZ3SP72RT8)kWEVr'Zl&oIg;i>T.dd=K1D\!d%s8r2A@R0.)7cF;n,NEmFNp!f^j[9iOX`[iHY&f$kL"QN'pN3+%:la^L+9I`nIQi,sn7,ATZ!/8@X<8q3UnF7Peq7Qt,qRTr7];uQh!3pRc(+s5IXh*aPJp0K:,hp^]mKMKo@kpVlh8r"j*(a#hnJsu%r)RELo?k[HDu]22H>sTKmX.4oph'$cc1d9k561BI!_jm8?>gYN`T<B(Vb\XR-69R`l'ob+haB[*-ApJ8;,5et[<Q3-C/0:$Rb.OG%jGZM-48n'%9eJ[5M:4,!a"'Qp.U9,54nrM.QLgoV>TeTe0;2f_DOCf'W6EcjatcVPH8d1>IFVS7T2&u^W*i0?APb7>8GG1`?[32i%5Gl'_iWle]9)E-I@Q5\Ks$IXn+t59>.G).!-cMJ.U%Kj^q?U:pSFmT,"lW>]X+AGt<#2V=B_3@@8,'7(BoiDqS@D6HS"l2p\[u*6%n(8b:_F0+&AAWPgJHTjMq,^+enC9ju_3.:7^-SbEXQ[)s<3DtFp(T0],k\1qdaG3(jDB8.asbVRM1D+Tn&Zipjs5IsgqPRkVu7/d%>m99;,_`oO(6lu."Z#&t.0@@8,R;f?Hp!?82^V(f/.n6-IX!KiNqJ2)g<DLVZ_YIh_[S7Q-E%cOXk%Lq1h.-\n0JETcU*$m^)YGh%]YrS(ScTqJR?84M+be6c@0Qlk&rLH7qouJN@IUQkAn2HT)`>I6Gm_"BAWfqB2`#4BXrlnJ8#,LrBsREa1R5jeKiK;>aC,Bg78K6S%TC=BPWiIW><]*PQ=\Tk>qI!3J&gE$gKod$5T&:O)8tKS[c#;PBDO#dL.qm(&YSIVbV-%DCeEg@'dbTofhUte:lVWul@"c/^mH:Iq%1,lm%)!7g&)$>$hK#<`T^S(l]f^OcYQ$f!a?CRnq5!hhdRL2d$fd3/QRt8:2`NrMhi\E'mk;1VsI\a_!%D+Ena4B9'G;/F2/3Q[G%*0<iI8b&b]O5,a2)=N`M7nh:sScTqR4a+H%o&/oZL^C4=XQF6,9&LYW_?aa8m+c^0S>TaX09h]A@LJr#fD<Cum:ak;.4)DDEhsC:%<f.h!'Si8nb(S/S$"/lR>h"YH0H,=O%Km25A[(3o9Ya1I%N7'p3;>o#iuo272$%/sOgpKDm27d-efX0m8)rtFBs@8DX#q"L[ZOd2%$-hH7S'$?sCPN[!S,"fo636m4O"&;L8rl(#)%"-eL>DP[FC.j;_?g)Ve>+qa.G1.,8kOB>Ki>=%rCDu2)Kf[fPAS?HRP=0?nih"X%1Y-bE'1PeoXa>t',DWUsH65+@;X4JhV2Y']!_uEdhD#``*USIq,+P=pjPidYSq?XJ<)Uk3/tAC/lUUg,c0.6I\njP/YVW8aF3)>W%".HZ:Co>WfR;2%s^qQ[J`#'e";*ogt-q$0HZCmH)Hi>dSA]+`')V/pSW/Z-WiM&$f))]6IGm`&1M56B&g+sZ4>!LHkNeZED;If#i%B,LG,J[%p>3<;j,5H-p__\hYUrD$`)(l,HcIR=@!p@";d)9-H)5"osu@6IE(G6(YD3b;(]ljC>H^,>p0CO(c4N0d`C2#GjboXCT(%GK0:-HJE'40"R[P6M%N676G^Z@;.)slL<V@P,=3,c=I&6GK2'rF8+.JBmt@_,G'IhZ!`m'5[9%tp2#J0erTI3UJZ64[+K]K_61Aj%PlnQL'0L"<BUFY_'-YWjU5q#]E!,5<O7I<ij[-d:=ueEC?RRE.He'qbMJE^&GoB@/]",Y9&.LY#K#Sc2.^;BH`XC$rL:YrsFLS#2%GIH#RHIN\+I>p-i)2.-(H9jg]=^^n1L3JulTjW+h/eroI4&/J3[=N%.e!Um(I;U]?*EXd?jWt^<c2RA\II:e4SO$Pi*e+nfSSQ9Q%$[;k4)lQI#@8:YZ-o].$K>[nQGc#'2mL!s-gtH]/,6SKB$I-U?R?*D>8n/M&'Tom>9?iEMqUU`"\"g3P`q7mi<%B?j"B_dhh'6%(%Ek7$.X`Q4iQJGIcQ*+co0J$uk]>qT>*+\fZ587Z:L"SW9"]\@e;*A2^de$?,Ha5aSb4"j,6pZ9_13D%iq##O"X:qO56f$.8Lk-Jk%)"A:R5/8Nr8'i+2FI6Ej=<$iC2Fd!8eH?O.&r"j>#ZYOeL;$U1'?9qS@h?X37MC=$@=DKsH4Ig3B\d@Uc98cGW@C?R$a&^YbR+]3%6Q6C4`b;OC+Mt<T:!Z,X(p+`OP=8,\687A?+,@5?5$Tt<ds+l)C'9N'S0-nFV5EDuClHr)VX6EQO"),CB0aXd<U,mY!nX/o"HE"F%L\Z(lkrB"gUNN>G=FFUpc=En;%VZe6.!.hV.Rqd0R3(MBV5EDuClHr)VT$f5J!;c^68uAI$(oqu%3KHH1fnfRbcOMqcW\a&W=p$,%kuCn9H]L;*r6+,NLAM1%3@RZ6b:QNM1gbG<iRachk94Z#er?P84)R[NZ5Vs?WfV2QeTBb,V-Q`aj=1XoH$-+Ifub0UFe`7F4%`H(%!3q7ok[;?X5fh1,X2lkt;O$>0%O1h^eF=N3NR>>bFIKa70?,s@%eXg,'6'-Lo,4mALspb-6%iU3R\#/90j6N)c77Uag43OJAS7/K%0VfDb-qp/nWXacoFfFM+9,\srUZ0/#4XT[C&lVZ'f@)"nP=D926M#=)&Un##Gn.^2B\d@5b[&!l&*$QIR:8Jj"JqKSJ&\lfo5t9M%IU-]7%`65!@tV3.JgX4?&/I\9SdaR,nP2QRP^'+A0a@/C"s"-3SQSbAH\t,%1[QW&lF.Wk<#W\:74T#>PYe?t3u&qV/Cq\/$s+7"%4+1(MFL^p!rV8\tl\SJ:kro`3/-NPJ@Z6IBGDe:!#f_`r#MM4cEFQ;[iJW:2`%\0<NCHC&P[]kV\IoQ+2B?Jsbb^0D`n-L"/WZ&e%2a7XC0F4PF*'#]F.c',]kSM:^9aBB5HZ:7*nWh'_7mKu:dXif)9FR%#-Up\82\:j'?>`Bbep.N8UQ)H31!/A%(Kp$T3FklP1L7VK%D?r:aP3DKLV&Zs9oegf1@^P[5-&WKbGc.MKb,D+._Zd,b7Glpoa2Dn[WI.)oa)=k(bsA!>D/>3R;P)pVTZi*kCne;<mT^*(W2d'c%!8d9A<P4]/2PIQk/PLgS^7rQ^_+/W@)^GH.cJFEkVh`ISF1A1QCnM67K.n>rkP7iPX>pP#UQ)H3EW7d5Q8ka8;@8#1/g6Ph6?8rR%IjSa>SEDi1`o\C?N&JDi`&US>79NI`>71C('-0-X>YLErbT<uti1_]D)D1*^9rbCbM\DkFY:\Ed3/j/5b21=$Y!HDf3K2Kf`^_/o%,)[6NaHt#u21'UX[.3h.HReb*nM)>[A`tY"q^c)*fXAYc>j=pMMoj/^PA+g`dR6XdX%N)S/i7emj@IDl1J!Bi_eYKp"]1M+[%)df%-e$Wd"H(U(6uYS1=lS9\#Z^A!f*RCY]X/<3B7+9oYZB;([kbEIPu+af+[B!7"P5mGH?$(rD&U)?VgTPPlrQFjWn@_]Z<KV(Zmi7=%K5Uf$GY-Y,0k2o'8f4b*aU1VaWpNd8XX#XTZo[2$>1oBFU%'U@]4ZNr2H0^V;6c[D3YWf*RT;F2>>&gO<JIr^^c`%llGP:Y[%Y(u%'\'B91"m&p>Ht`ohi;aGL`q"Ej`3`E;[cU?\!eQQ!#E+L,G87$j<IZX'L8esrDgYd;o2F]*X9TN'U7VhB$`#k!XMed(^/rf'U3+Z%4D:'Q@C`6n63U'kh$TU>$[Cab#dMi;0me"E4aV9Q4aV9Q4Y8_]PgHQ*3K:dC6+.^3N4aj[2$nM-H(os]dg?Hh<iZoA_-.dp.W$g\%LN\@GOMf4jp+WU+)2#]UjAq2N6Nr\#<5kuk@o23'9Dm.qP3qd'%Tp?[:p`$RA*fGa'"*^hA-RGK"Q/[bgT5+CqTH)I?./h0/?d-S%bn*FZ_G)aEkF"K-!"3[s1((UZjn/=@#-1U58k%j!SDmLnJg%25-77e"H-\KW&$RuZ3"hMrcr-"\NOK#gbgWkqniB<UT#3d6AZmi@%G]jQ<!;2<=a4Xr6W9(T;VtU@>U3tum&B%f/,g%go'/)t/<ZRulO@fQUa`M:h@B.I:L#A;jMbK_hLH<T7G2b7_c&EO64;7^bHZ0K=%V%s)"Ql$2D+q5EN,U1*E))!R_C%S>ggrXGO&"O$_[2r^)*raV3(u@5"1D8'M6cMe#R!%<lig"Z]P=@+PbQL-qG!,B5'^hWEJ^"Ep%/n)U2f+ceG=pFR8VQXsUMt7/.F)&kt^a`Y+/g0_2-:>K37s`n:0KV'/Cd$?)j/uSFB&##26;u0CB,MOmNQLHXg!,;R)4lFeZguLj%?OF7<mZOO3`"_)MemhlY(\r^rC`mEk'.d"K^HO;;8La(d@l2]II\b")NO^jCajsrT0DkuIn1bWJT`qgOJkL]ji@f*.R1S^pd5U#p%F.to9^dkVQ5e3!If0l#=;d=BGNG5B2]+d`S?8MpkEtk^q13"b/Ri+)1f8oR6UTo%*1td3APm@@b1Ge.G.PrMP<[J(tm\"$&*YogN%gf'jVKnhRQ;BFP^3=."nfd\hZWIU+0B$d(-fd]>a;BiV\1t9-dUrOL8]ecS.emko+&>.HI+-PkJUm4uX$p72gFBVfZE3GP(8LbG<%63ZMA&mDdZCkF.<5WB(h[>/%#>%TW,E&(I^6$nWDmBKVqMBun1c2RA\II:e@SO$Pi*Ik:tEIakg_,90J=$VCfUu2XA8a4#m'73W.%gNj+El6q(ZQ?k5c0'.7K!@+JOk-,oUn.e1OW,SJf<ou\pSq?X*:f<,2Ak(&%oclWfB(VWW9su*i#bL<)9.>C7*7>i%?]MrEO2spq%Ii(CZ6rp$I(GLW^,I6$$+K,BMopg]pg;A5j5dD"JTl>%FL!lJ95ct'i]PC`:j[cO]E;j:\#]0";.P!/PANu/_"pP9Jn-igrK/p:K%ZCpoROb>mhpPt'R\5ZOGe!I.b:d=42V9$a!ke'ASXqI3lL<UJk]>gD4#']?YYNEo]HX<5,XL&Sk(p"@qPaI_oPrNJ+8BG,<NOYk(%;7Teu<)>3uW^m,`P#7/EB2fJ,dV*bq?)'lg'\faY/mEOC>26+C]ppGlmX$rBo.!0l%FR5Z93R^@[IK\a/A-#.$N#*?Kt1;S.Q-Kk%;3Za(Q/[o51raQ9_Q;m'Pu=6T5pE-pZ_iY8STdfqeE(#WJIhL_Oq$5^N<L.MeK]GjOXXCR4m(3F9@CSkr\?/2/'I"A$!18j+sW`)%%5u]L]P9cj5s47MD>Z?D`YPOI<l3CakH\r;VnJY4gl)!uiI6RXDG7Ro:1=E#p&%ddM+Lfj4_)l>T(s=/0I8&S'q(15=%1H6[&iY"%A?\m+:T=_R=a7gCgA#S;`>5G3==nhOgNIbogSs)DQldF<G72-rT`"q<9)_HU5,Bgh<!HgJ/G8]>mtp4aVXoOmnM<krRI6)($I@Ju%Cc!S-HP$-3e@Q`$K(/rUs3[h`JT>4]8;YTma>E.oBjdhkp1nm*UO?m/"*5\071YeN>Jm<][i5uu]ZDuA(JVfg:JsSq?m\n$,Y4^T%nn2a+.cJB_<U(bc8>X7<d:?F'hDVZ8a*J',F^YEto[^5LRrp@J3lhpp/<nbtak%DBHD@6:Gk,7]V!C^>+(:A9"/ku6oJ5YlisE/j%j#10JlE<UOR]ZbT/MWPc\dicAeDm@%lX5[Od&V)KXs<B;9tjAQ3p<;fPHU/W^#:i^!OF0<.<lZ#cqFncQO=I-()HJM@!LF&SOQhj%P!?`cg""L%Ol#%7`d1`',)qQ;,c$h`)&ck4_%r'GB)$#Y6jFf,bQP0%f@/2E0\4/<Ge+AK)LFhF29D[\GcniQr^o0V.CQ.b4,f*#%HYkq%I'f^[eAoNbQOWUgS"`7<(6_7gGXWY91k1%`ZE'b(VjF#`XG?K=1p%=2)+G,IB[0Nb%PX<B0]7Y$c(oBb<d&WXp%7kiN:jD=%Su,RFpaL!ih]X%D`SbB_!uc<="bQs$iaZ5:FnGA!oFm2VYV)M"[%!c0g%`c<eE]E:@-<q+Z+<cGqNsL_>1qHRf?r'n0\4/<GT&B_%(V2pOCHV:G@Rtr7&#BW0J`lS)f#k.U^7LpFK!?BJa3ub>%R,oZ1(l6k6Em00,Foq?fJ8L0@'/Y(f@JEq7pG7DI9`:M@+F>7p86j*%@-1_tS-.rJnN?.lo,_D>YG[_Z@'#.VnT9Kl+5()ek..jW--#F/5/#r/pcYEFA[$s"jQ^FEl0#rYorpVdSmjcr_@V?>6:",Xn8kHo%Un:ck(*:J,=%?Un5<ltd&*r9?H"oiDqF#*n$5%*=W)B<Cck:_bbH?l>St:C_Yo_K8e'el^nPsi"'bWEqM*c!OI"2OB`D0W-2]lq:%"'s.bMQr:X8D>hsKKSF>$@18f;,$QG>%=/H^6\-lCqmH9H,B!5HA+gNF_`H=:H\iJLaV>Se5qACnP"'QAg<lcIFX.OM2Z2f;lFaq%&^Rm<?;2/L>Qt(R)Cb,>K#5'ONVcZb)D]`oK<L-qT>"RZG9ck*1CWiYX4_Me8"*0\-9&Z.=#6^pWE_DWYo5$/?sL7>moGK4_&s9#%hIA=bOKj3_okb$%Hmd(!d\3SV;+M?TW\fKuI6#l&X2gf>OG@-11#3bTLWD>6PfK"H'9c0lL%n>VE/6LA>VUZYI%/$6\&ZChpQp:q%50"4<N$j<NkA2B=+gNDd8f:*"Wi<S[=3'%S@9<?J/6f?.X;j8<;2GBd@[JPOb7-uF82#BF6BcJXI6#l&UU-P#OG@-10tkRH@?WmQ%(24YKY/2g`](fd44>"dAK:H?#E913ZXWDh@5ot3_a)oLgC5-PaRKQ`.2VT@:)t5Apo]orFlnTqqN7HbLYiG-@Yj;7agVN+g,(5LV%_\E8.I[_p`arrh\&HPetk=8EEgTBm)g`-j:hHMlqJ3FG=?F(X;b:)1/l\7HPGr>O#Eu+RekrUp(eECcKH@eF(G.kpId7LM4"f:D$%c+u^W)_bPs=uja5S+>dd$'WMKmQ0&?#J/blHFa_a;p%(pZ\P-^<),GJ.=I0#*hM/X,cf6FaMY1SQoTNU)CBa=M,\L:22P6c1o>8-%_#aAgpeHkBh<;+V)!#+L;MW]C&b9b5(UBJH@ORd'kOCCk\BU1gl"14m2J/Up4T0gU5+@uoRK0rj(kHULF,V#YnROIe]=s<0JVYU@%]9mK?bH_Wj+SI_4_sX=W1d>@PLSqXb<q-oMR*>u<^olI&*pREnLY_8:l,mrP0-b$qkTZHgIGnQM9T*2BIEY'L:%>H7]qg9B_l?6i%$*neF(uuu[(J9Tk(4FCuI4aunH[V]R*Ls"E&iM7PKS*b4MNG!$#2>DkbXn@"nZY*gUshP-8[K5%<DkG@b_g)<bH_Y(WOF;tFs(KN%<nB>0KsXm;'H^ed75_IM/*3Q`mK;`X#s)f5KacY9*:Qs'+Y1S8e&Vi+j<UC9l4qC%a@bsEa9cD<A8*dk$=r4@rie#dS%Non%XIG^%3%&J]NisWH?cCQ+_Y7,O09PapjL*:[(?ct]>7iPo[Mda6EkD/]/mFT?6<f_^KXS$(V*</.;iGH:C0Qg/C>6Gl7VKh\lUtSeZ@4L\%ojPFKcXbH(PKsq%GK-WE-W@+;DnYY`5j]#=bbkd!Tp@dcG8H+MdBTOU:%^NcRgDK\EIqK3]QkiVTB9:2D)`+6]1\!M9B-/5J,=ni%Cb66gLV.mZK3qIc+`%X=Ldd3EM/NtuI7\;'WUtbXGDfn42j.H%*GQL5rE>n6V@$eb=]L?i=&kG.XZjYL$=fcmDm?$m4Ki_DOkLX+%%';!(<jS+8VOa:?G368^%6&H?]#A+488J\M.t*"gUV\.U\ZA>n.Xr;,<[5s.=H*qZ7])D)fRS>Z9%/ZimQebsWi5mNOL311<a2&F%?%^Et,<M+ErgKD0NSbL!GO"eg(5#a2:-?CCMVjk,$M$dSg<gI!b,S@0V]gp3BXJ^Qecb#rL7p(@?7d"n=reiBPgr=0h4eW8]!KlF%cMY+(j2l3:[L"9^3mG<AXMDgWFpGm7$3T[KWGk1fb(+N<W^u0N1g1#rFW!g&q?]S-RAqXaG8R3[L)<N`,:,g;U<BF)S`Y)B[s\]E%G%7u"T$1CM`Q#?+@-U[tV/@oQ+B8uja(hCge#I.\A<8C!?t%p_Z/Q=jm=j'@!5lf+11E+Vfer0`1q,9Cm;'5:)lIO90NE<G2P"<n%7Pa!QNkhWe,FB9I&AuDc;TuAFRM9K/)'2g^<ffFG'bS]QXfVYZKN2U%C=[FY['S6:c?-LuiPob/[WEj7Tgm!:=SBd(pfH^A4sJ#i%o:ZM#pfEGS@obIE"DQC(r`*2jBJ6*Kn7;mn=0t.\P^h3hM;=oiZ?9fX`LWE5?cJ;cQu&aiF^&=ZZ#1tClnm[F4]5*C<!Ed0WlQlt%WiAp,i/N=ti)SK+W$6!=4Ib%A1&S(AMTlo2]>gD4#'X[bI2,7qA$X&Z@kRH5P[\S=T94JY\P=kM=QX!.;$AZWX@B40Wu=]a[/(15%.l\:(ZHJ`b7/(i4\dB;R<L"0&7EoE(c;'!R'A:*W,J3Ku6B`r*/%0^AEHj5"Bo6sVKk"Rk5n""!OfAhj7M,aU&?oVB.c$S/#`TEk%lNtEIVq/):>0NFOPKqnuG35t+eN0fOAM&oV3"M(9C)+M0SJ(?.R+N)n0IQ);NVlcT2H6_,_^)7^8!-iATj":rX:k?BC)S$W51_\"%LV?q;11IZT\SU$RBl@Y,g)'9h2p,;D61$/N?rNV*L"I+%ffGldnl,A=:otY(7\XYi#h!HD<3*N=8X#uS`Kh#JqLWKuIiGCf,9p6I%T$+R5Sb@6(XF1[Fp7eXble>N#]E6@N*%d\YkQrMo'4OoF$jE]S1kJ_-UI_H/d'-t(VdO4@d1Hs8jJKA?(`HG?'!#0_A]rBr`qJMu%I0h!=j0LW"10A=iE1sQf9V)9s93>1oVIfWB21e@$%+\Tr'K&CJg;I::,`r_G7FPi.c;'!R'AU<Z,J0)of!L`'StMrTL1/6GnOpK2%]tB9u%4"QN0c<';!u3a44.+\ceZt@C'>SkFLMTk3kQSc3q%,DibN)Vo[3T;gM:.`!oC`WSnl%#LS$E-]%J?!;VX,RW;/T9T@+2DX%:9aOknu7SA]_,mF:%J>oWg!mK@<+RqdM$(l+)>Fh8)Fp&[Kd`:@==P\'9\O<bj]L)]SWV@!_a$gA$,+_kW=CLp-<+NX=LV/hH\G!%+6AF"q(#04SLtg>XG_)GFg(04B%t3SFeHIm[WDh3Mr2.c13;C\0s$GDZE'bh#\MfnNV0NibdJs.K%7s7)\k.hVb@Nb@U+)!oGtba%H_@VbesG&J+U?%%P9l.+<1dTe.LU\ML@qfPG'3Et_/+IkYo_J_fbT(S0Fo,.=R6YL<JF!jL354']/oeK@(&5F=:a`@CeNG#[(n(H%-J2'h9FaCj%5-4hY'Y"Ud+TOPW<7:>[$;<E]7FShD^BU<;HP$)_oY[.!L1$J=mA8#.;eUTFNBSi8LaqBWAmmM?"Sb40eU(!qMq5U%4j[:AlUtrMkLR2fPN@Xto4Y4D_O2.i`OP:"kW=CGp-<+NX=p\mU-V.Z=bG[XX,K%OX`1OGG'3Et6#1h?Yo_J_elLc_mhVBfo9dTq%Aqfn4NS3[j*C4IfTWoQhQ.?`D0$@YE@PKDojqc,iI%9l6<cm/54+PoU0M<GM#$Tc/.elec(g/?K+pU4d.#&0nSV/9H$'Wl+de8MA%R(UZ8rnKV5KYqV4.cI$'4=?L%2nZR*R8J]<[oOL;$j"YiAc"k-5Q3i?)ig"J9TL,Z$p76_&sEcKibUYL'Gf5<k6P2#GbU!94fT%'%De6?$"%K/E2b?PNXnO)o]Zd91d>,nu7+RP8IJ:&$*b^Xjh9Kbn0;g#lDO*]Ap+>ZM-Kr`.?T^@"G;$#aJHgDPmB!`FNMeJ[0DI5X%X;uRI)CZ4\^)7Pd=,ut0bA)Bs5ot22X"C0<c,#Rag1a-V._L;(j-sJ>Flf('HV&&b1WP&aVmN;`ACFWhNNCFWAdZR3Lb'Jd=\k!A%h+ML0PVjM*40:)h:11'SYfPO`9]QE=EN'K7R75\l@t"+"g)aphLYY^@/*jZQOgXMfa:5BN.<U]e/@)FKmK`0T[6;kZ&%eC`(AfiX%Jhaa)X[M9pDQ30Nq/XpfD:t0qH\+O)FuusGU<EEN/D$EF,O2_B^p[gQ0bE?:o7U5t]sP3Q)<5/7PM/pED6-6Ck+&b^B9aG%>6;]0%kK>`2pQF5OBTS#*:23F7X0ID-)?HBl=6Nch;sI#80f2ch=,the95AmE4W\c.ZYcGDs(ScDFQUrHEaVS/lh&?tFKQVL]9h4E5_D2c%G%OqeY2l!WG&1'SlB0SP"oHghac"l02/W*Yg)ajdLY^3i>O'ga:%1Is8GMkD<3KeB$CG44`j'!bH,fd8Yb<XDp`O"j(YMX[5I:1N%c/%0VBph_18S,4d/9oNEP$&&!Z7FU`S[FA!*qh!HCRQrF5)%7-:hKNBJB[s-].D]lT='k3*qh!H.jdUA9po,dnd+F@b-rto]u;Tr%p0hV$@>=qJ9$NftA*0/e;gsV%OHp=tWl9-mqbXVB1<%-PV.R[rF!tT]dDKm!Q44r$#.lG@LRPW7.3A0kC0'+:^lK-\261,o;R=s>%9Js[l(`.Jl/hIeHX8.eejTUitHpmt$L+!Hg9^*tXL5I^^622NiP-M.Me:Le'Eg"5(Oj*T3O*Rd)YcUYa&/ZT^F%ENuH.`JbbB>H-%&l"&qH1b2e+WmG2MuuanEHrMdZ0#6)"#SW1i=RD,kSgs.O'qqi1ZfWmD;b%[q:?4NlJba#EPbKP'`=Y7*bm/Tl)Rn1Z+sru+jWB,%"Go]*_ET9Z3!,^;CM8,#dnV.?"*+dZQ[Fo"$>^C*G.WSpPW/i`_Euc<oZjS_1LXs88lP-W#fJt7G,^/GY%ak?)M!D'poQ.V_0e^g%6r`@Co)SO!+Gg+ZA'g_sA9.rj4E3(epC'*sEQQb'!]lbmBD?`jMiEj66oV,;&`J<tfMEZqWhr`Ujg;V;]Q7g$bGa*qB%OQ!e)3DC%87'T(&,/26P;/_*(q=E\1>#h\(ubfgFFa(FaBsdD$QSYI7\3dQTF&[BRjTEp0O-[UUI^MJ*O]4W<-]Wd&aV&(m&Nfs%Dgc:-BSqQ%7F>]4c;'9ZFhO.5jMQBV:8c%^KaU9s[#>m(S1%eHQ@[3;L!.Aih;9b7%=pFQq&S.tN"EZ+Y^.."Q!khjn?DtR0[TqP)eOtpWZ$Jc%`#t0TUIERAe':^04*A3fEoY'N%d*0\qt[f,BhO+g4L)d<94':hB:f$0)U@J`BE??,'8CO,-ILYc@e;(C$\VtOZ\t][:&_9#8X9Ud%7jQ#`<jHMnfkG9#55.ZEI(74^M;Fnc9IKV<&CCg$[Q9^PT;@QA+%Y-qHmU<K1n]g#0r^9BotdWT`!BG"jTK?\&_4fNLftlF=H9L]%.;k%l\nKlEhqh+Vm`!uVE4:J>&M4s1#nHD@a>"N\'Ht<r&-!==h.X$$C,I$FYT?*'!AOBa<Lf2oPtk'h.FP66EfAt-K7/P*Jqh`T%7B9o$MQol",\FBS?/*Y"HTUo4(\?\)rGH=nRrhD$F[%&ee?e'<.O4:2Bd8NFO*DA:o0)Lm"b@F?6f!6l'HFlE:/3YQ_Y%?\"bW[^%lqTE4q!eUEDFf27@!ujV8kEeddq/F%:7F?<]bg>&U\t_pKo"LgF\[M-X('`?'/DERNUR.c1#lnG0pYd']u%kd'7L:?f]%ihXGh0h%'-ga(Q4n)7$qmT,]Kn)B=s"tkNic2.BoQf;Cu<o[F.`I+MS=JJs'bOYL!bo``H\1%5mD1DAMdlSP'3@-bi2hhg6\g=.("+s71AAc%;Q($\<Pq1$/(4O"-E34dKf/69GBOn[WUmfl,9Q?!EN1R-W&)]j3(>WM5<d"TnV2F1k__+u-?ReQT`t5R%W*mT6fjmqH5PVpYaf*g%dFoXd<)"$T?jZGi>&F0rQ=>bO7Tq!^0&(Pmg=rUe]pKl`mWUZj(,n<O"dAJAQHBH16P.Q49A'a&<%>)AO\(gbcKJ]T$rk2jI#00f%K<7$f:;nE>d?_#.?/*Y"HTUo4(\?\)r=0pKiePA;3#,-,=,Gje(sNo9cOIqW0cm<>+X2=Latm.[_/rO"L`*.KnGm&f1'XR51K)1=%Q'/S[U0[*1:5_4,]U/6N_gN%kd$WHo4XQOQ'Y?Tln#A257N"!$XN.3fY,kW<XJmI7'-kM.MK)9XPB]I[1HlJQ<(^==RP*?=G1t`N%pV!4Q+7=VtihhbUThbHCW?T^79"_`gqPXM69pK<jOr"sd(<f^jX\kci5KT^Y"K@Yp+[P81"NtQLVMN<&2,U(k:eWDQ.;];?\nKcB%f@E^1mY*dUKkM+J(ePho"fkkmZ6TO'9rBc/Me!s+iLi]OH36,S3'gDbs!AV^je-BE&:,sg(Wepn8K]l.8/$Y%)$hm:1/X!IP(?fB%cMsLF`#1q2%#"G_o^,dU#/W%md'mK/0-jX9hT8<*);>ULUdp+C/,8LRZkILI@#HpmJ@2\`UTYnH^b^rBYV)^[W,DqJP9qt7($Jsq%1!C</qSs#8E(N7C9!42_SpilY<"J<TjZ;U?cu9oeNL@V[dkK59@D)+P,6bP>XHd'3I6IQ,"CjTrO/H\M)sUEMbeTT3C+uI(V)/1b%kmmK%aN%K;e^<!tdn_[K_tnVhXqC?t@L0o"V\lRX`41>u-*0DOKt-4/B^=pG_bKg.5$l5jo9AQ).FX1aKj_eeD[TUWlWhRfq,f/Y%m^;_0o$Naa:`gM.?-KO3['&&0/lERgFJ1X[0tIp_>TIZEI=/Q(*nJ<RG`N$?pNd&uNL<N]K&IJi-;$ON]g$"!\r1R]e^<!rcd+;r%_tnU=+=V<3GrkT)kM9N%IKQ'K(PrVO5/\aK7pAbR+)\*6p$je%USX/f=T[EB0ZNQMn@V1[^Z&a.G'3HMo^``TorpWO:75J'PZ+a:%!Wld;gITO'$1f0YRXD1O?2*'!](p#4*N5$Wo7G$+)XJCtB_QDK)&X4mrPfPDBW6VGN6AAa^7JY[K!?BJa4!t'7ngQHMM[9.$kkql%b:Xb+\V.KRl=fMJkJL$eYWcBb$O=63/%q'7U0q@VAML8#ns&2"%cajqUT^SfT4"aU?-P?c%r:B_N/`4*PVWr'fpdh<`aPh<;k"UO%h>sG>K?"io?o(\C;u9CE6Y`?JX2[,U!Vsup30@`'D;REiFAtVt(`f/gSN/^QM9"PAG#'09;KM`rOb9?s.-H]XHe'^h6B%N\?HCVD%H(Y_@0rsb2MHJnp9o7^HNL7/cQXX5Z;M?*-N/(\5X((p$X>FSYo!ZP].1)h(;e8[-ot?D6-gGSlf(&HYf_,6,Z*iLK0+/#Gi^E#D%3o4reiZklk[GVW*L=qo'ICD9(#mP\-ocDSM#H!tU?d,?:%3t8ZF>d#WU]Lh,"bLcg<$kDDl+>JU:GBl-Y4n=/bN4sTBe^WSc>KOp%qd,i-_7%oR!p'N`WpEc)*GgZ:?101IX>4loNlqt=O02jH)h-!3O#[nUX=:d3;$S'#5Z^$>Qgf*ck<-/f8kkW&<F(CiKG+B-Q,f,@%/&o_LFO\^X37.>YdZ$u514HD5\b3q.DKbZ4(I-nZG:[6W.:F9G3PC$YbumgraMY1TQu;e)AGQ1&rR`>@-g4T-Dnr8L.B*M)VUMaX%ZS/5=lJ"Gp"G8i'HB7<f35W0YM#nIW1o4X9Cm6eG?oj!,ChsrmJ6t//Eie_1O$1<%&%g\.Eb)se*(-8P1<^,GS2\Io4^&P%VMW/&%@h80qI5+cHX2Bt,a2>(S(E]Po4b:_*63neU3:a@8@`bTB:TQ6sbi9=@1"LNK[uRo:JZa3^hW(uAi;5E*WZ=7IEAZ/=Ph)/2'dd9]%K8d9"lZdb=lqV"]Uq/1g_(dYO=\\CVEgUQ2-hAXU,XUTqPo1_lW-bB^U\&jpnnih[4;Fd:W?q8u_&%DeI(Pk^db'F[QK)S"N<Oed%qHf2`U`8[+lpKiO]hS%$4"9[CYD4rLoW:kk;3:k[Ul/MA2qV]pa1TpT'G%h-9A6!OPD../MQr"-%4Wm*`HGf7o294"4R?B-km3&-%6lm,UFN0,N8VsVZAr::?kd'D^:?lVOLY_8@T(AVp+V(ha0]Ug61!Jpm_(LU/k+]#537,>KdM7;HmN1^=)=+1a2_1WAG%Db:;.ifi%lp+<@XKM'9]Z/&BoSX,@9Z\1B*ZO:7b-%]_&B9roo0O/kUqMK"_7:5uY6)R<Cnm8KQ71fG,/b<+`AB?PV$IASR`Zg2CS>b@#UZ"W%/@5^7,a\jWUTDh>Tn!(6m;N"9_OnR?op<.;KF[kGmsk3)jj.;Kqsj%ql<g1@^\m'VG@1=VIm\GVp>:>pnYa,V0YVsn"b6FBQQJDp%5CEJ+LTfS;qG3_spsAL%h5Bi;GCTYdmshmERXAs0pK(4PY@9Q,MY[#sQG]ao_sp`[j/X#XY9Mh+`?5-Udl5&?6iPEhIJrSpTE"WH%Vr.F7dl61^lf[`Or9:-*5HJ4@qXja4TE")tgZPbIJ,JF"044\trm0?n5CN>FlMC)Fo7-`6^PG,e(B<Ndhu1ae5Q)\[7#>%~>%AI9_PrivateDataEnd